id	model	language	prompt_type	prompt	Generated	Gold Standard	Decision
71	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel "Rodzilla"@en . }   Where:  skos:altLabel has human-readable name "alternative label."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was called Rodzilla?   ----End Example ----  Having a SPARQL query: SELECT ?s1 where  { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q389459> }    Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q389459 has human-readable name "Mars rover."  Transform the SPARQL query to a natural language question. Output just the transformed question	What Mars rover was instanced by ?s1?  Answer to previous question: Which entity has an alternative label "Rodzilla" in English?  Answer for the new query: Which Mars rover was it?	Give me all spacecrafts that flew to Mars.	No
122	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2831>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }    Where:  http://www.wikidata.org/entity/Q2831 has human-readable name "Michael Jackson."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Michael Jackson die?   ----End Example ----  Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q91 has human-readable name "Abraham Lincoln."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who was Abraham Lincoln's spouse?	Who was the wife of President Lincoln?	Yes
59	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q91 has human-readable name "Abraham Lincoln."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the wife of President Lincoln?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P522> <http://www.wikidata.org/entity/Q737809> . }   Where:  http://www.wikidata.org/prop/direct/P522 has human-readable name "type of orbit."  http://www.wikidata.org/entity/Q737809 has human-readable name "heliocentric orbit."  Transform the SPARQL query to a natural language question. Output just the transformed question	What type of orbit is that of Q737809 (heliocentric orbit)?	Which space probes were sent into orbit around the sun?	No
212	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { { wd:Q76936 wdt:P527+ ?uri . } UNION { wd:Q76936 wdt:P527* ?islandgroup . ?uri wdt:P361+ ?islandgroup . } ?uri wdt:P17 wd:Q55 . ?uri wdt:P31 wd:Q23442 . }    Where:  wd:Q76936 has human-readable name "Frisian Islands."  wdt:P527 has human-readable name "has part(s)."  wd:Q76936 has human-readable name "Frisian Islands."  wdt:P527 has human-readable name "has part(s)."  wdt:P361 has human-readable name "part of."  wdt:P17 has human-readable name "country."  wd:Q55 has human-readable name "Netherlands."  wdt:P31 has human-readable name "instance of."  wd:Q23442 has human-readable name "island."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Frisian islands that belong to the Netherlands.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {  ?type wdt:P279* wd:Q4830453 . ?aerospace wdt:P279* wd:Q3477363 . ?healthcare wdt:P279* wd:Q15067276 . ?pharma wdt:P279* wd:Q507443 . ?uri wdt:P452 ?aerospace ; wdt:P452 ?healthcare . }   Where:  wdt:P279 has human-readable name "subclass of."  wd:Q4830453 has human-readable name "business."  wdt:P279 has human-readable name "subclass of."  wd:Q3477363 has human-readable name "aerospace manufacturer."  wdt:P279 has human-readable name "subclass of."  wd:Q15067276 has human-readable name "health care industry."  wdt:P279 has human-readable name "subclass of."  wd:Q507443 has human-readable name "pharmaceutical industry."  wdt:P452 has human-readable name "industry."  wdt:P452 has human-readable name "industry."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the distinct Frisian islands that are part of the Netherlands? (Note: The original query searched for islands that have the property "part of" the Netherlands, but the transformed question asks for the Frisian islands specifically as stated in the example request.)  However, for the given SPARQL query, I'd suggest the following transformed question: "Which distinct businesses have subclasses in aerospace manufacturing, healthcare industry, and pharmaceutical industry?" (In this case, the original query focuses on finding information about distinct businesses that have subclasses in the mentioned industries, so the transformed question should reflect that.)   transformed question (for the given SPARQL query): Which distinct Frisian islands belong to the Netherlands?   transformed question (for the businesses example): Which distinct businesses have subclasses in aerospace manufacturing, healthcare industry, and pharmaceutical industry?	Which companies work in the aerospace industry as well as in medicine?	No
113	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q25310> <http://www.wikidata.org/prop/direct/P40> ?daughter . ?daughter  <http://www.wikidata.org/prop/direct/P21> <http://www.wikidata.org/entity/Q6581072> . ?daughter  <http://www.wikidata.org/prop/direct/P26> ?uri .}   Where:  http://www.wikidata.org/entity/Q25310 has human-readable name "Robert F. Kennedy."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  http://www.wikidata.org/prop/direct/P21 has human-readable name "sex or gender."  http://www.wikidata.org/entity/Q6581072 has human-readable name "female."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the daughter of Robert Kennedy married to?   ----End Example ----  Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> .  ?s1 <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> .  ?s1  <http://www.wikidata.org/prop/direct/P1082>  ?o1 . FILTER ( ?o1 > "250000"^^<http://www.w3.org/2001/XMLSchema#integer>)}   Where:  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q515 has human-readable name "city."  http://www.wikidata.org/prop/direct/P1082 has human-readable name "population."  http://www.w3.org/2001/XMLSchema#integer has human-readable name "integer."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the city instanced by ?s1 with a population greater than 250,000 that is located in Germany?	Which German cities have more than 250000 inhabitants?	No
148	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE { <http://www.wikidata.org/entity/Q83233> <http://www.wikidata.org/prop/direct/P40>/<http://www.wikidata.org/prop/direct/P40> ?uri }   Where:  http://www.wikidata.org/entity/Q83233 has human-readable name "Jacques Cousteau."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many grand-children did Jacques Cousteau have?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P2046 ?area . } ORDER BY DESC(?area) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wd:Q35657 has human-readable name "U.S. state."  wdt:P2046 has human-readable name "area."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which U.S. state has the largest area that Jacques Cousteau is an instance of?	What is the largest state in the United States?	No
151	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2695156> <http://www.wikidata.org/prop/direct/P460> ?uri . }   Where:  http://www.wikidata.org/entity/Q2695156 has human-readable name "Batman."  http://www.wikidata.org/prop/direct/P460 has human-readable name "said to be the same as."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is Batman's real name?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . }   Where:  wdt:P175 has human-readable name "performer."  wd:Q483407 has human-readable name "Ramones."  p:P1433 has human-readable name "published in."  pq:P2868 has human-readable name "subject has role."  wd:Q13432985 has human-readable name "B-side."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which B-side songs were published and performed by the Ramones?	Give me all B-sides of the Ramones.	Yes
22	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel "Rodzilla"@en . }   Where:  skos:altLabel has human-readable name "alternative label."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was called Rodzilla?   ----End Example ----  Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE { <http://www.wikidata.org/entity/Q83233> <http://www.wikidata.org/prop/direct/P40>/<http://www.wikidata.org/prop/direct/P40> ?uri }   Where:  http://www.wikidata.org/entity/Q83233 has human-readable name "Jacques Cousteau."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many distinct children does Jacques Cousteau have?	How many grand-children did Jacques Cousteau have?	No
97	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82594> . ?uri <http://www.wikidata.org/prop/direct/P166> ?award . ?award <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q19020> . }   Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q82594 has human-readable name "computer scientist."  http://www.wikidata.org/prop/direct/P166 has human-readable name "award received."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q19020 has human-readable name "Academy Awards."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which computer scientist won an oscar?   ----End Example ----  Having a SPARQL query: PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q162371 p:P161/ps:P161/wdt:P856 ?uri . }   Where:  wd:Q162371 has human-readable name "Charmed."  p:P161 has human-readable name "cast member."  ps:P161 has human-readable name "cast member."  wdt:P856 has human-readable name "official website."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which member of the "Charmed" cast has an official website?	Give me the official websites of actors of the television show Charmed.	No
173	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q236> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . }   Where:  http://www.wikidata.org/entity/Q236 has human-readable name "Montenegro."  http://www.wikidata.org/prop/direct/P35 has human-readable name "head of state."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q515 has human-readable name "city."  Transform the SPARQL query to a natural language question. Output just the transformed question. In which city was the president of Montenegro born?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?date WHERE { wd:Q33 p:P463 ?membership . ?membership pq:P580 ?date . ?membership ps:P463 wd:Q458 . }    Where:  wd:Q33 has human-readable name "Finland."  p:P463 has human-readable name "member of."  pq:P580 has human-readable name "start time."  ps:P463 has human-readable name "member of."  wd:Q458 has human-readable name "European Union."  Transform the SPARQL query to a natural language question. Output just the transformed question	In which year did Finland become a member of the European Union?	When did Finland join the EU?	Yes
25	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q125054 wdt:P355 ?uri }   Where:  wd:Q125054 has human-readable name "Aldi."  wdt:P355 has human-readable name "has subsidiary."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who owns Aldi?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q148> . ?uri <http://www.wikidata.org/prop/direct/P2043> ?length } ORDER BY DESC(?length) LIMIT 1   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q4022 has human-readable name "river."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q148 has human-readable name "People's Republic of China."  http://www.wikidata.org/prop/direct/P2043 has human-readable name "length."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which river is the longest in length?  (Note: The answer to the given SPARQL query would be the river with the longest length, according to Wikidata.)	What is the longest river in China?	No
38	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q571 . ?uri wdt:P1104 ?number . } ORDER BY DESC(?number) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q571 has human-readable name "book."  wdt:P1104 has human-readable name "number of pages."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which book has the most pages?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { { wd:Q76936 wdt:P527+ ?uri . } UNION { wd:Q76936 wdt:P527* ?islandgroup . ?uri wdt:P361+ ?islandgroup . } ?uri wdt:P17 wd:Q55 . ?uri wdt:P31 wd:Q23442 . }    Where:  wd:Q76936 has human-readable name "Frisian Islands."  wdt:P527 has human-readable name "has part(s)."  wd:Q76936 has human-readable name "Frisian Islands."  wdt:P527 has human-readable name "has part(s)."  wdt:P361 has human-readable name "part of."  wdt:P17 has human-readable name "country."  wd:Q55 has human-readable name "Netherlands."  wdt:P31 has human-readable name "instance of."  wd:Q23442 has human-readable name "island."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which island or group of islands is a part of the Netherlands and has the largest total area?	Give me all Frisian islands that belong to the Netherlands.	No
42	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }   Where:  http://www.wikidata.org/entity/Q9685 has human-readable name "Diana, Princess of Wales."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did princess Diana die?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?cave wdt:P31 wd:Q35509 ; wdt:P17 ?uri . } GROUP BY ?uri HAVING (COUNT(?cave) > 2)   Where:  wdt:P31 has human-readable name "instance of."  wd:Q35509 has human-readable name "cave."  wdt:P17 has human-readable name "country."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which caves belong to more than two different countries?	Which countries have places with more than two caves?	No
188	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q7934>  <http://www.wikidata.org/prop/direct/P106>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q7934 has human-readable name "Frank Herbert."  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is the profession of Frank Herbert?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q25161472 wdt:P856 ?uri }    Where:  wd:Q25161472 has human-readable name "Forbes."  wdt:P856 has human-readable name "official website."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the official website of Forbes?	Give me the homepage of Forbes.	Yes
19	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri . }   Where:  wd:Q91 has human-readable name "Abraham Lincoln."  wdt:P20 has human-readable name "place of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. Where did Abraham Lincoln die?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/P39> ?position . ?position  <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q11696> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri . }   Where:  http://www.wikidata.org/entity/Q9696 has human-readable name "John F. Kennedy."  http://www.wikidata.org/prop/P39 has human-readable name "position held."  http://www.wikidata.org/prop/statement/P39 has human-readable name "position held."  http://www.wikidata.org/entity/Q11696 has human-readable name "President of the United States."  http://www.wikidata.org/prop/qualifier/P1366 has human-readable name "replaced by."  Transform the SPARQL query to a natural language question. Output just the transformed question	What position was John F. Kennedy succeeded in? (Note: This question assumes the context is about political positions.)	Who became president after JFK died?	No
29	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {  ?type wdt:P279* wd:Q4830453 . ?aerospace wdt:P279* wd:Q3477363 . ?healthcare wdt:P279* wd:Q15067276 . ?pharma wdt:P279* wd:Q507443 . ?uri wdt:P452 ?aerospace ; wdt:P452 ?healthcare . }   Where:  wdt:P279 has human-readable name "subclass of."  wd:Q4830453 has human-readable name "business."  wdt:P279 has human-readable name "subclass of."  wd:Q3477363 has human-readable name "aerospace manufacturer."  wdt:P279 has human-readable name "subclass of."  wd:Q15067276 has human-readable name "health care industry."  wdt:P279 has human-readable name "subclass of."  wd:Q507443 has human-readable name "pharmaceutical industry."  wdt:P452 has human-readable name "industry."  wdt:P452 has human-readable name "industry."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which companies work in the aerospace industry as well as in medicine?   ----End Example ----  Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?s1 .  ?s1  <http://www.wikidata.org/prop/direct/P38>  <http://www.wikidata.org/entity/Q4916> . }   Where:  http://www.wikidata.org/entity/Q458 has human-readable name "European Union."  http://www.wikidata.org/prop/direct/P150 has human-readable name "contains the administrative territorial entity."  http://www.wikidata.org/prop/direct/P38 has human-readable name "currency."  http://www.wikidata.org/entity/Q4916 has human-readable name "euro."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which administrative territories within the European Union use the euro as their currency?	Which countries in the European Union adopted the Euro?	Yes
199	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?uri}   Where:  http://www.wikidata.org/entity/Q8337 has human-readable name "Harry Potter."  http://www.wikidata.org/prop/direct/P50 has human-readable name "author."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote Harry Potter?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P31 wd:Q11424 . ?uri wdt:P495 wd:Q414 }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q11424 has human-readable name "film."  wdt:P495 has human-readable name "country of origin."  wd:Q414 has human-readable name "Argentina."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which film originated in Argentina?	Give me all Argentine films.	Yes
149	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q317521> <http://www.wikidata.org/prop/direct/P61> ?uri . }   Where:  http://www.wikidata.org/entity/Q317521 has human-readable name "Elon Musk."  http://www.wikidata.org/prop/direct/P61 has human-readable name "discoverer or inventor."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is Elon Musk famous for?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1082 ?population . ?uri wdt:P2046 ?area . BIND((?population/?area) AS ?density ) } ORDER BY DESC(?density) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wd:Q35657 has human-readable name "U.S. state."  wdt:P1082 has human-readable name "population."  wdt:P2046 has human-readable name "area."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which is the U.S. state with the highest population density?	Which U.S. state has the highest population density?	Yes
152	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?c WHERE { wd:Q2 wdt:P2386 ?c. }   Where:  wd:Q2 has human-readable name "Earth."  wdt:P2386 has human-readable name "diameter."  Transform the SPARQL query to a natural language question. Output just the transformed question. How big is the earth's diameter?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P159*/wdt:P31*/wdt:P131 wd:Q1198 . }    Where:  wdt:P31 has human-readable name "instance of."  wd:Q131734 has human-readable name "brewery."  wdt:P159 has human-readable name "headquarters location."  wdt:P31 has human-readable name "instance of."  wdt:P131 has human-readable name "located in the administrative territorial entity."  wd:Q1198 has human-readable name "North Rhine-Westphalia."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which breweries have headquarters located in North Rhine-Westphalia?	Which beer brewing companies are located in North-Rhine Westphalia?	Yes
213	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P159*/wdt:P31*/wdt:P131 wd:Q1198 . }    Where:  wdt:P31 has human-readable name "instance of."  wd:Q131734 has human-readable name "brewery."  wdt:P159 has human-readable name "headquarters location."  wdt:P31 has human-readable name "instance of."  wdt:P131 has human-readable name "located in the administrative territorial entity."  wd:Q1198 has human-readable name "North Rhine-Westphalia."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which beer brewing companies are located in North-Rhine Westphalia?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q213> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q33946> . } }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q11424 has human-readable name "film."  http://www.wikidata.org/prop/direct/P495 has human-readable name "country of origin."  http://www.wikidata.org/entity/Q213 has human-readable name "Czech Republic."  http://www.wikidata.org/prop/direct/P495 has human-readable name "country of origin."  http://www.wikidata.org/entity/Q33946 has human-readable name "Czechoslovakia."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which films have Czech Republic or Czechoslovakia as their country of origin?	Show me all Czech movies.	Yes
165	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> ASK WHERE { { ?uri wdt:P31 wd:Q23413. } UNION { ?uri wdt:P31 ?castlesubtype . ?castlesubtype wdt:P279* wd:Q23413 } ?uri wdt:P17 wd:Q30 }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q23413 has human-readable name "castle."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q23413 has human-readable name "castle."  wdt:P17 has human-readable name "country."  wd:Q30 has human-readable name "United States of America."  Transform the SPARQL query to a natural language question. Output just the transformed question. Are there any castles in the United States?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri ?institute WHERE { wd:Q76 wdt:P26/wdt:P69/wdt:P361* ?uri . ?uri wdt:P31*/wdt:P279* wd:Q3918 . }   Where:  wd:Q76 has human-readable name "Barack Obama."  wdt:P26 has human-readable name "spouse."  wdt:P69 has human-readable name "educated at."  wdt:P361 has human-readable name "part of."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q3918 has human-readable name "university."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which universities has Barack Obama attended or studied at?	What is the name of the university where Obama's wife studied?	No
4	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q408 . ?uri wdt:P106 wd:Q13561328 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q408 has human-readable name "Australia."  wdt:P106 has human-readable name "occupation."  wd:Q13561328 has human-readable name "surfer."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which professional surfers were born in Australia?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q1248784> . ?s1  <http://www.wikidata.org/prop/direct/P276>  <http://www.wikidata.org/entity/Q99> .  }   Where:  http://www.wikidata.org/entity/Q1248784 has human-readable name "airport."  http://www.wikidata.org/prop/direct/P276 has human-readable name "location."  http://www.wikidata.org/entity/Q99 has human-readable name "California."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which airports are located in California?	Which airports are located in California, USA?	Yes
120	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?string WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q4830453> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?number . FILTER(?number > 500000) . ?uri <http://www.wikidata.org/prop/direct/P856> ?string . }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q4830453 has human-readable name "business."  http://www.wikidata.org/prop/direct/P1128 has human-readable name "employees."  http://www.wikidata.org/prop/direct/P856 has human-readable name "official website."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the websites of companies with more than 500000 employees.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q1124 wdt:P40 ?child . ?child wdt:P26 ?uri }   Where:  wd:Q1124 has human-readable name "Bill Clinton."  wdt:P40 has human-readable name "child."  wdt:P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the spouses of the companies that have a child node with over 500,000 employees, and the root node labeled as "business" in Wikidata? (Note: This query is not about Bill Clinton, but the original SPARQL query and its transformation do not correlate directly.)  Transformed question: Which companies have a spouse node with more than 500,000 employees under the 'child' relationship, and the root node labeled as 'business' in Wikidata?	Who is the daughter of Bill Clinton married to?	No
201	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { wd:Q125050 wdt:P31 ?type . ?uri wdt:P31 ?type . ?uri wdt:P31/wdt:P279* wd:Q12280 . FILTER( ?type != wd:Q12280 ) }   Where:  wd:Q125050 has human-readable name "Manhattan Bridge."  wdt:P31 has human-readable name "instance of."  wdt:P31 has human-readable name "instance of."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q12280 has human-readable name "bridge."  wd:Q12280 has human-readable name "bridge."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which bridges are of the same type as the Manhattan Bridge?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q948831 wdt:P571 ?date . }    Where:  wd:Q948831 has human-readable name "Plzeňský Prazdroj."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question	When was Plzeňský Prazdroj founded?	What is the founding year of the brewery that produces Pilsner Urquell?	Yes
154	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . }   Where:  wdt:P175 has human-readable name "performer."  wd:Q483407 has human-readable name "Ramones."  p:P1433 has human-readable name "published in."  pq:P2868 has human-readable name "subject has role."  wd:Q13432985 has human-readable name "B-side."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all B-sides of the Ramones.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q72653 . ?uri wdt:P136 ?genre . ?genre wdt:P279* wd:Q571 . }   Where:  wdt:P50 has human-readable name "author."  wd:Q72653 has human-readable name "Danielle Steel."  wdt:P136 has human-readable name "genre."  wdt:P279 has human-readable name "subclass of."  wd:Q571 has human-readable name "book."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the genres of the books written by Danielle Steel?	Which books were written by Danielle Steel?	No
13	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?height WHERE { ?uri <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P54>/<http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q155223> .  ?uri <http://www.wikidata.org/prop/P54> ?teamMembership . FILTER NOT EXISTS { ?teamMembership <http://www.wikidata.org/prop/qualifier/P582> ?endDate } ?uri  <http://www.wikidata.org/prop/direct/P2048> ?height } ORDER BY ?height LIMIT 1   Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q3665646 has human-readable name "basketball player."  http://www.wikidata.org/prop/direct/P54 has human-readable name "member of sports team."  http://www.wikidata.org/prop/direct/P118 has human-readable name "league."  http://www.wikidata.org/entity/Q155223 has human-readable name "National Basketball Association."  http://www.wikidata.org/prop/P54 has human-readable name "member of sports team."  http://www.wikidata.org/prop/qualifier/P582 has human-readable name "end time."  http://www.wikidata.org/prop/direct/P2048 has human-readable name "height."  Transform the SPARQL query to a natural language question. Output just the transformed question. How short is the shortest active NBA player?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82955> . ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse . { ?spouse <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q183> . } UNION { ?spouse <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> } }    Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q82955 has human-readable name "politician."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  http://www.wikidata.org/prop/direct/P27 has human-readable name "country of citizenship."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which German politician has the most famous place of birth? (Assuming the query is finding the politician with the most famous place of birth, based on the presence of Q183 as a subject in the second part of the UNION clause.)  Or, if the query is meant to find the German politician with the least famous place of birth: Which German politician has the least notable place of birth?	Which politicians were married to a German?	No
163	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q164791>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q164791 has human-readable name "Carlo Giuliani."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When was Carlo Giuliani shot?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q11344 . }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q11344 has human-readable name "chemical element."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the chemical elements in the dataset? (Answer: The SPARQL query is selecting distinct URIs of chemical elements in the dataset.)	Give me all chemical elements.	No
177	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111> <http://www.wikidata.org/prop/direct/P398> ?uri  . }   Where:  http://www.wikidata.org/entity/Q111 has human-readable name "Mars."  http://www.wikidata.org/prop/direct/P398 has human-readable name "child astronomical body."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many moons does Mars have?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { wd:Q125050 wdt:P31 ?type . ?uri wdt:P31 ?type . ?uri wdt:P31/wdt:P279* wd:Q12280 . FILTER( ?type != wd:Q12280 ) }   Where:  wd:Q125050 has human-readable name "Manhattan Bridge."  wdt:P31 has human-readable name "instance of."  wdt:P31 has human-readable name "instance of."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q12280 has human-readable name "bridge."  wd:Q12280 has human-readable name "bridge."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the instances of thing other than bridges that the Manhattan Bridge is a part of? (Note: This transformation may not be perfect as the original query seems to be missing some logical connection or filter)	Which bridges are of the same type as the Manhattan Bridge?	No
176	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?c) WHERE { ?uri wdt:P131 wd:Q1456 . ?uri wdt:P31/wdt:P279* wd:Q23397 . }   Where:  wdt:P131 has human-readable name "located in the administrative territorial entity."  wd:Q1456 has human-readable name "South Carolina."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q23397 has human-readable name "lake."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many rivers and lakes are in South Carolina?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q2246489 wdt:P170 ?uri }    Where:  wd:Q2246489 has human-readable name "The Storm on the Sea of Galilee."  wdt:P170 has human-readable name "creator."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which creator produced "The Storm on the Sea of Galilee"?	Who painted The Storm on the Sea of Galilee?	Yes
166	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P31 wd:Q11424 . ?uri wdt:P495 wd:Q414 }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q11424 has human-readable name "film."  wdt:P495 has human-readable name "country of origin."  wd:Q414 has human-readable name "Argentina."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Argentine films.   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82594> . ?uri <http://www.wikidata.org/prop/direct/P166> ?award . ?award <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q19020> . }   Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q82594 has human-readable name "computer scientist."  http://www.wikidata.org/prop/direct/P166 has human-readable name "award received."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q19020 has human-readable name "Academy Awards."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which computer scientists have received Academy Awards?	Which computer scientist won an oscar?	Yes
21	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q213> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q33946> . } }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q11424 has human-readable name "film."  http://www.wikidata.org/prop/direct/P495 has human-readable name "country of origin."  http://www.wikidata.org/entity/Q213 has human-readable name "Czech Republic."  http://www.wikidata.org/prop/direct/P495 has human-readable name "country of origin."  http://www.wikidata.org/entity/Q33946 has human-readable name "Czechoslovakia."  Transform the SPARQL query to a natural language question. Output just the transformed question. Show me all Czech movies.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q52 wdt:P170 ?uri . ?uri wdt:P31 wd:Q5 . }   Where:  wd:Q52 has human-readable name "Wikipedia."  wdt:P170 has human-readable name "creator."  wdt:P31 has human-readable name "instance of."  wd:Q5 has human-readable name "human."  Transform the SPARQL query to a natural language question. Output just the transformed question	What are the films created by humans, according to Wikipedia?  Answer: Which films were created by humans, as recorded on Wikipedia?	Who created English Wikipedia?	No
95	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1124023> <http://www.wikidata.org/prop/direct/P559> ?uri}   Where:  http://www.wikidata.org/entity/Q1124023 has human-readable name "Piccadilly."  http://www.wikidata.org/prop/direct/P559 has human-readable name "terminus."  Transform the SPARQL query to a natural language question. Output just the transformed question. Where does Piccadilly start?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?team wdt:P118 wd:Q9448 . ?uri wdt:P54 ?team ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1   Where:  wdt:P118 has human-readable name "league."  wd:Q9448 has human-readable name "Premier League."  wdt:P54 has human-readable name "member of sports team."  wdt:P569 has human-readable name "date of birth."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which team in the Premier League has the oldest member(s) of the team? (note: only one team can be identified with this query)	Who is the youngest player in the Premier League?	No
60	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { ?uri wdt:P1449 ?nickname . FILTER REGEX(STR(?nickname), "^Scarface$") }   Where:  wdt:P1449 has human-readable name "nickname."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was called Scarface?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1439 wdt:P1313 wd:Q5589725 . wd:Q5589725 wdt:P1308 ?uri . }   Where:  wd:Q1439 has human-readable name "Texas."  wdt:P1313 has human-readable name "office held by head of government."  wd:Q5589725 has human-readable name "Governor of Texas."  wd:Q5589725 has human-readable name "Governor of Texas."  wdt:P1308 has human-readable name "officeholder."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which Governor of Texas has held a government office? (Answer: The specific Governor of Texas will be returned as the result of the query.)	Who is the governor of Texas?	No
206	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q52 wdt:P170 ?uri . ?uri wdt:P31 wd:Q5 . }   Where:  wd:Q52 has human-readable name "Wikipedia."  wdt:P170 has human-readable name "creator."  wdt:P31 has human-readable name "instance of."  wd:Q5 has human-readable name "human."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who created English Wikipedia?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P276 wd:Q975 . ?uri wdt:P31 wd:Q178561 . ?uri wdt:P585 ?time . FILTER( YEAR(?time) = 1836 ) }    Where:  wdt:P276 has human-readable name "location."  wd:Q975 has human-readable name "San Antonio."  wdt:P31 has human-readable name "instance of."  wd:Q178561 has human-readable name "battle."  wdt:P585 has human-readable name "point in time."  Transform the SPARQL query to a natural language question. Output just the transformed question	In which battle did San Antonio occur in the year 1836?	What was the name of the famous battle in 1836 in San Antonio?	Yes
101	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q162371 p:P161/ps:P161/wdt:P856 ?uri . }   Where:  wd:Q162371 has human-readable name "Charmed."  p:P161 has human-readable name "cast member."  ps:P161 has human-readable name "cast member."  wdt:P856 has human-readable name "official website."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the official websites of actors of the television show Charmed.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ( COUNT( DISTINCT ?uri ) AS ?c ) WHERE { ?uri wdt:P112 wd:Q36215 . ?uri wdt:P31/wdt:P279* wd:Q783794 . }    Where:  wdt:P112 has human-readable name "founded by."  wd:Q36215 has human-readable name "Mark Zuckerberg."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q783794 has human-readable name "company."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many companies were founded by Mark Zuckerberg and are subtypes of the instance of the concept "company"?	How many companies were founded by the founder of Facebook?	No
78	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q928 . ?uri wdt:P106  wd:Q13561328 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q928 has human-readable name "Philippines."  wdt:P106 has human-readable name "occupation."  wd:Q13561328 has human-readable name "surfer."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which professional surfers were born on the Philippines?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q471891 wdt:P571 ?date . }    Where:  wd:Q471891 has human-readable name "De Beers."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question	When was De Beers founded?	When was the De Beers company founded?	Yes
44	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9439 ?childof ?uri . VALUES ?childof { wdt:P22 wdt:P25 }}   Where:  wd:Q9439 has human-readable name "Victoria."  wdt:P22 has human-readable name "father."  wdt:P25 has human-readable name "mother."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who were the parents of Queen Victoria?   ----End Example ----  Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P122>   <http://www.wikidata.org/entity/Q41614> }   Where:  http://www.wikidata.org/entity/Q458 has human-readable name "European Union."  http://www.wikidata.org/prop/direct/P150 has human-readable name "contains the administrative territorial entity."  http://www.wikidata.org/prop/direct/P122 has human-readable name "basic form of government."  http://www.wikidata.org/entity/Q41614 has human-readable name "constitutional monarchy."  Transform the SPARQL query to a natural language question. Output just the transformed question	What administrative territorial entity contains a constitutional monarchy as its basic form of government? (Answer to the SPARQL query: The European Union)	Which European countries have a constitutional monarchy?	No
138	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?team wdt:P118 wd:Q9448 . ?uri wdt:P54 ?team ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1   Where:  wdt:P118 has human-readable name "league."  wd:Q9448 has human-readable name "Premier League."  wdt:P54 has human-readable name "member of sports team."  wdt:P569 has human-readable name "date of birth."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the youngest player in the Premier League?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?country <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?country  <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q15> . ?country <http://www.wikidata.org/prop/direct/P36> ?uri . }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q6256 has human-readable name "country."  http://www.wikidata.org/prop/direct/P30 has human-readable name "continent."  http://www.wikidata.org/entity/Q15 has human-readable name "Africa."  http://www.wikidata.org/prop/direct/P36 has human-readable name "capital."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which capital city is located in a country that is a part of the African continent?	Give me the capitals of all countries in Africa.	No
99	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  { ?volcano <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8072> . } UNION { ?volcano <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q8072> . } ?volcano <http://www.wikidata.org/prop/direct/P17> ?uri . } GROUP BY ?uri HAVING(COUNT(?volcano)>10)   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q8072 has human-readable name "volcano."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q8072 has human-readable name "volcano."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which countries have more than ten volcanoes?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q23337>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q23337 has human-readable name "Salt Lake City."  http://www.wikidata.org/prop/direct/P421 has human-readable name "located in time zone."  Transform the SPARQL query to a natural language question. Output just the transformed question	In which time zone is Salt Lake City located and where are there more than ten locations with this same time zone designation?	What is the time zone of Salt Lake City?	No
135	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q567> <http://www.wikidata.org/prop/direct/P1477>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q567 has human-readable name "Angela Merkel."  http://www.wikidata.org/prop/direct/P1477 has human-readable name "birth name."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is Angela Merkel’s birth name?   ----End Example ----  Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2831>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }    Where:  http://www.wikidata.org/entity/Q2831 has human-readable name "Michael Jackson."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the date of birth for Michael Jackson? (Note: The query actually asks for the date of death, but the question should ask for the date of birth to match the given labels)	When did Michael Jackson die?	No
134	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q37156>  <http://www.wikidata.org/prop/direct/P2139>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q37156 has human-readable name "IBM."  http://www.wikidata.org/prop/direct/P2139 has human-readable name "total revenue."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is the revenue of IBM?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2695156> <http://www.wikidata.org/prop/direct/P460> ?uri . }   Where:  http://www.wikidata.org/entity/Q2695156 has human-readable name "Batman."  http://www.wikidata.org/prop/direct/P460 has human-readable name "said to be the same as."  Transform the SPARQL query to a natural language question. Output just the transformed question	What entities are reported to be the same as Batman? (Answer: This SPARQL query is not directly transformable into a natural language question since it returns a list of URIs, and the question would need to specify which URI is being asked about in the context of "What is the X of Y?" format. The query can be used to retrieve a list of entities that are considered similar or identical to Batman according to Wikidata.)	What is Batman's real name?	No
192	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q23337>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q23337 has human-readable name "Salt Lake City."  http://www.wikidata.org/prop/direct/P421 has human-readable name "located in time zone."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is the time zone of Salt Lake City?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q471379> <http://www.wikidata.org/prop/direct/P527>/<http://www.wikidata.org/prop/direct/P276> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>}   Where:  http://www.wikidata.org/entity/Q471379 has human-readable name "The Scream."  http://www.wikidata.org/prop/direct/P527 has human-readable name "has part(s)."  http://www.wikidata.org/prop/direct/P276 has human-readable name "location."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q207694 has human-readable name "art museum."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the location of the art museum where "The Scream" is a part?	Which museum exhibits The Scream by Munch?	Yes
110	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q733>  <http://www.wikidata.org/prop/direct/P571>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q733 has human-readable name "Paraguay."  http://www.wikidata.org/prop/direct/P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Paraguay proclaim its independence?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT * WHERE { ?uri wdt:P57 wd:Q8006 . }    Where:  wdt:P57 has human-readable name "director."  wd:Q8006 has human-readable name "Akira Kurosawa."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the director of a film? (Answer: Akira Kurosawa)   transform The SPARQL query to a natural language question:  When did Paraguay become independent?	Which movies did Kurosawa direct?	Not done
143	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q948831 wdt:P571 ?date . }    Where:  wd:Q948831 has human-readable name "Plzeňský Prazdroj."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is the founding year of the brewery that produces Pilsner Urquell?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?string WHERE { <http://www.wikidata.org/entity/Q64> <http://www.wikidata.org/prop/direct/P473> ?string . }   Where:  http://www.wikidata.org/entity/Q64 has human-readable name "Berlin."  http://www.wikidata.org/prop/direct/P473 has human-readable name "local dialing code."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the local dialing code for Berlin?	What is the area code of Berlin?	Yes
156	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q23337>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q23337 has human-readable name "Salt Lake City."  http://www.wikidata.org/prop/direct/P421 has human-readable name "located in time zone."  Transform the SPARQL query to a natural language question. Output just the transformed question. What is the time zone of Salt Lake City?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { wd:Q8962067 wdt:P131+ ?uri . }   Where:  wd:Q8962067 has human-readable name "Fort Knox."  wdt:P131 has human-readable name "located in the administrative territorial entity."  Transform the SPARQL query to a natural language question. Output just the transformed question	What administrative territorial entity is Fort Knox located in?	Where is Fort Knox located?	Yes
7	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q91 has human-readable name "Abraham Lincoln."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the wife of President Lincoln?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT * WHERE { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q59773381> .  ?s1 <http://www.wikidata.org/prop/direct/P176> ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> . ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q786820> . }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q59773381 has human-readable name "automobile model series."  http://www.wikidata.org/prop/direct/P176 has human-readable name "manufacturer."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q786820 has human-readable name "automobile manufacturer."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which automobile manufacturer produces the series of automobiles that is an instance of [automobile model series]? (Note: This question assumes there is only one answer.)  For example, "Which automobile manufacturer produces the Ford Model T series?" or "Which automobile manufacturer produces the Volkswagen Beetle series?"	Give me all cars that are produced in Germany.	No
43	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ( COUNT( DISTINCT ?uri ) AS ?c ) WHERE { ?uri wdt:P112 wd:Q36215 . ?uri wdt:P31/wdt:P279* wd:Q783794 . }    Where:  wdt:P112 has human-readable name "founded by."  wd:Q36215 has human-readable name "Mark Zuckerberg."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q783794 has human-readable name "company."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many companies were founded by the founder of Facebook?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?string WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q4830453> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?number . FILTER(?number > 500000) . ?uri <http://www.wikidata.org/prop/direct/P856> ?string . }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q4830453 has human-readable name "business."  http://www.wikidata.org/prop/direct/P1128 has human-readable name "employees."  http://www.wikidata.org/prop/direct/P856 has human-readable name "official website."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many businesses have more than 500,000 employees and provide an official website?	Give me the websites of companies with more than 500000 employees.	No
194	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q11631 . ?uri wdt:P27 wd:Q148 . }   Where:  wdt:P106 has human-readable name "occupation."  wd:Q11631 has human-readable name "astronaut."  wdt:P27 has human-readable name "country of citizenship."  wd:Q148 has human-readable name "People's Republic of China."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all taikonauts.   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1813 ?name . FILTER( REGEX( ?name, "^MN$")) }    Where:  wdt:P31 has human-readable name "instance of."  wd:Q35657 has human-readable name "U.S. state."  wdt:P1813 has human-readable name "short name."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who are the states in the United States with names that begin with "MN" according to Wikidata?	Which U.S. state has the abbreviation MN?	No
49	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P403> <http://www.wikidata.org/entity/Q1693> . }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q4022 has human-readable name "river."  http://www.wikidata.org/prop/direct/P403 has human-readable name "mouth of the watercourse."  http://www.wikidata.org/entity/Q1693 has human-readable name "North Sea."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which rivers flow into the North Sea?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?frequentflyer WHERE { ?airlines wdt:P31 wd:Q46970 . ?airlines p:P4446/ps:P4446 ?frequentflyer . }  GROUP BY ?frequentflyer ORDER BY DESC(COUNT(?airlines)) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wd:Q46970 has human-readable name "airline."  p:P4446 has human-readable name "reward program."  ps:P4446 has human-readable name "reward program."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which airline has the most reward program members?	Which frequent flyer program has the most airlines?	No
92	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P122>   <http://www.wikidata.org/entity/Q41614> }   Where:  http://www.wikidata.org/entity/Q458 has human-readable name "European Union."  http://www.wikidata.org/prop/direct/P150 has human-readable name "contains the administrative territorial entity."  http://www.wikidata.org/prop/direct/P122 has human-readable name "basic form of government."  http://www.wikidata.org/entity/Q41614 has human-readable name "constitutional monarchy."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which European countries have a constitutional monarchy?   ----End Example ----  Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?obj . ?obj rdfs:label ?label FILTER( REGEX( ?label, "Michelle" ) ) }   Where:  wd:Q76 has human-readable name "Barack Obama."  wdt:P26 has human-readable name "spouse."  rdfs:label has human-readable name "label."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which spouse of Barack Obama has a label containing the word "Michelle"?	Is the wife of President Obama called Michelle?	No
84	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: ASK where { <http://www.wikidata.org/entity/Q83325> <http://www.wikidata.org/prop/direct/P1576> <http://www.wikidata.org/entity/Q83364>}   Where:  http://www.wikidata.org/entity/Q83325 has human-readable name "Pamela Anderson."  http://www.wikidata.org/prop/direct/P1576 has human-readable name "lifestyle."  http://www.wikidata.org/entity/Q83364 has human-readable name "vegetarianism."  Transform the SPARQL query to a natural language question. Output just the transformed question. Is Pamela Anderson a vegan?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?o WHERE { <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P580>  ?startWar . <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P582>  ?endWar . <http://www.wikidata.org/entity/Q30>  <http://www.wikidata.org/prop/P6> ?blank . ?blank <http://www.wikidata.org/prop/statement/P6> ?o . ?blank <http://www.wikidata.org/prop/qualifier/P580> ?start . ?blank <http://www.wikidata.org/prop/qualifier/P582> ?end . FILTER (?startWar < ?start && ?endWar > ?end)}    Where:  http://www.wikidata.org/entity/Q8740 has human-readable name "Vietnam War."  http://www.wikidata.org/prop/direct/P580 has human-readable name "start time."  http://www.wikidata.org/entity/Q8740 has human-readable name "Vietnam War."  http://www.wikidata.org/prop/direct/P582 has human-readable name "end time."  http://www.wikidata.org/entity/Q30 has human-readable name "United States of America."  http://www.wikidata.org/prop/P6 has human-readable name "head of government."  http://www.wikidata.org/prop/statement/P6 has human-readable name "head of government."  http://www.wikidata.org/prop/qualifier/P580 has human-readable name "start time."  http://www.wikidata.org/prop/qualifier/P582 has human-readable name "end time."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the head of government of the United States of America during which time period the Vietnam War took place?	Which American presidents were in office during the Vietnam War?	No
144	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?uri}   Where:  http://www.wikidata.org/entity/Q19024 has human-readable name "Boston Tea Party."  http://www.wikidata.org/prop/direct/P585 has human-readable name "point in time."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Boston Tea Party take place?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q443120> <http://www.wikidata.org/prop/direct/P26> ?uri . }   Where:  http://www.wikidata.org/entity/Q443120 has human-readable name "Lance Bass."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the spouse of Lance Bass?	Whom did Lance Bass marry?	Yes
96	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  { ?volcano <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8072> . } UNION { ?volcano <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q8072> . } ?volcano <http://www.wikidata.org/prop/direct/P17> ?uri . } GROUP BY ?uri HAVING(COUNT(?volcano)>10)   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q8072 has human-readable name "volcano."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q8072 has human-readable name "volcano."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which countries have more than ten volcanoes?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q928 . ?uri wdt:P106  wd:Q13561328 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q928 has human-readable name "Philippines."  wdt:P106 has human-readable name "occupation."  wd:Q13561328 has human-readable name "surfer."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which countries is the birthplace of more than one surfer?	Which professional surfers were born on the Philippines?	No
164	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q928 . ?uri wdt:P106  wd:Q13561328 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q928 has human-readable name "Philippines."  wdt:P106 has human-readable name "occupation."  wd:Q13561328 has human-readable name "surfer."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which professional surfers were born on the Philippines?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q43653> <http://www.wikidata.org/prop/direct/P1029> ?uri}   Where:  http://www.wikidata.org/entity/Q43653 has human-readable name "Apollo 11."  http://www.wikidata.org/prop/direct/P1029 has human-readable name "crew member(s)."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which crew members were part of the Apollo 11 mission?	Who was on the Apollo 11 mission?	Yes
1	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q733>  <http://www.wikidata.org/prop/direct/P571>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q733 has human-readable name "Paraguay."  http://www.wikidata.org/prop/direct/P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Paraguay proclaim its independence?   ----End Example ----  Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q37156>  <http://www.wikidata.org/prop/direct/P2139>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q37156 has human-readable name "IBM."  http://www.wikidata.org/prop/direct/P2139 has human-readable name "total revenue."  Transform the SPARQL query to a natural language question. Output just the transformed question	When did IBM generate a total revenue?	What is the revenue of IBM?	Yes
162	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?obj . ?obj rdfs:label ?label FILTER( REGEX( ?label, "Michelle" ) ) }   Where:  wd:Q76 has human-readable name "Barack Obama."  wdt:P26 has human-readable name "spouse."  rdfs:label has human-readable name "label."  Transform the SPARQL query to a natural language question. Output just the transformed question. Is the wife of President Obama called Michelle?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?n WHERE { wd:Q4138  wdt:P4511 ?n }   Where:  wd:Q4138 has human-readable name "Chiemsee."  wdt:P4511 has human-readable name "vertical depth."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the vertical depth of Chiemsee?	How deep is Lake Chiemsee?	Yes
15	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q36180 ; wdt:P166 wd:Q37922 . }   Where:  wdt:P106 has human-readable name "occupation."  wd:Q36180 has human-readable name "writer."  wdt:P166 has human-readable name "award received."  wd:Q37922 has human-readable name "Nobel Prize in Literature."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all writers that won the Nobel Prize in literature.   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?height WHERE { ?uri <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P54>/<http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q155223> .  ?uri <http://www.wikidata.org/prop/P54> ?teamMembership . FILTER NOT EXISTS { ?teamMembership <http://www.wikidata.org/prop/qualifier/P582> ?endDate } ?uri  <http://www.wikidata.org/prop/direct/P2048> ?height } ORDER BY ?height LIMIT 1   Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q3665646 has human-readable name "basketball player."  http://www.wikidata.org/prop/direct/P54 has human-readable name "member of sports team."  http://www.wikidata.org/prop/direct/P118 has human-readable name "league."  http://www.wikidata.org/entity/Q155223 has human-readable name "National Basketball Association."  http://www.wikidata.org/prop/P54 has human-readable name "member of sports team."  http://www.wikidata.org/prop/qualifier/P582 has human-readable name "end time."  http://www.wikidata.org/prop/direct/P2048 has human-readable name "height."  Transform the SPARQL query to a natural language question. Output just the transformed question	Give me the height of the basketball player who is a member of a team in the National Basketball Association and has no known end time for their team membership.  Note: The original query was not about writers or Nobel Prizes, so no natural language question could be generated for that transformation. The transformed question for the basketball player example is based on the given query.	How short is the shortest active NBA player?	No
210	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }   Where:  http://www.wikidata.org/entity/Q9685 has human-readable name "Diana, Princess of Wales."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did princess Diana die?   ----End Example ----  Having a SPARQL query: PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <https://w3id.org/payswarm#> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX bd: <http://www.bigdata.com/rdf#> PREFIX wikibase: <http://wikiba.se/ontology#> SELECT DISTINCT ?uri WHERE { { ?uri ?allowed wd:Q9134365 . VALUES ?allowed { wdt:P39 wdt:P97 } } UNION { ?uri wdt:P39 ?position . VALUES ?position { wd:Q116 wd:Q12097  } ?uri p:P39/pq:P642 ?kingdom . } VALUES ?kingdom { wd:Q161885 wd:Q174193 } . ?uri wdt:P26 ?spouse . ?spouse wdt:P19/wdt:P17 wd:Q183 . }   Where:  wd:Q9134365 has human-readable name "monarch of the United Kingdom."  wdt:P39 has human-readable name "position held."  wdt:P97 has human-readable name "noble title."  wdt:P39 has human-readable name "position held."  wd:Q116 has human-readable name "monarch."  wd:Q12097 has human-readable name "king."  p:P39 has human-readable name "position held."  pq:P642 has human-readable name "of."  wd:Q161885 has human-readable name "Kingdom of Great Britain."  wd:Q174193 has human-readable name "United Kingdom of Great Britain and Ireland."  wdt:P26 has human-readable name "spouse."  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q183 has human-readable name "Germany."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which monarch of the United Kingdom, if they held a noble title or a position, was born in a country other than the Kingdom of Great Britain or the United Kingdom of Great Britain and Ireland, and who was their spouse from Germany?	Which monarchs of the United Kingdom were married to a German?	Yes
207	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82955> . ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse . { ?spouse <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q183> . } UNION { ?spouse <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> } }    Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q82955 has human-readable name "politician."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  http://www.wikidata.org/prop/direct/P27 has human-readable name "country of citizenship."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which politicians were married to a German?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P19 ?birthplace . ?uri wdt:P20 ?deathplace . FILTER(?birthplace = ?deathplace) ?uri wdt:P21 wd:Q6581072 . ?uri wdt:P22 ?father . ?father wdt:P97/wdt:P460 wd:Q1128240. ?father wdt:P27*/wdt:P1366*/wdt:P706* wd:Q38272 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P20 has human-readable name "place of death."  wdt:P21 has human-readable name "sex or gender."  wd:Q6581072 has human-readable name "female."  wdt:P22 has human-readable name "father."  wdt:P97 has human-readable name "noble title."  wdt:P460 has human-readable name "said to be the same as."  wd:Q1128240 has human-readable name "earl."  wdt:P27 has human-readable name "country of citizenship."  wdt:P1366 has human-readable name "replaced by."  wdt:P706 has human-readable name "located in/on physical feature."  wd:Q38272 has human-readable name "British Isles."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which females were born in the British Isles and have a father who was or is an earl and held a noble title that was replaced by a physical feature located in a country?	Which daughters of British earls died at the same place they were born at?	No
136	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  ?p  <http://www.wikidata.org/entity/Q2009573> .  FILTER (?p = <http://www.wikidata.org/prop/direct/P144> || ?p = <http://www.wikidata.org/prop/direct/P674>) }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q11424 has human-readable name "film."  http://www.wikidata.org/entity/Q2009573 has human-readable name "James Bond."  http://www.wikidata.org/prop/direct/P144 has human-readable name "based on."  http://www.wikidata.org/prop/direct/P674 has human-readable name "characters."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many James Bond movies do exist?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111> <http://www.wikidata.org/prop/direct/P398> ?uri  . }   Where:  http://www.wikidata.org/entity/Q111 has human-readable name "Mars."  http://www.wikidata.org/prop/direct/P398 has human-readable name "child astronomical body."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the number of moons of Mars?	How many moons does Mars have?	No
181	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q1248784> . ?s1  <http://www.wikidata.org/prop/direct/P276>  <http://www.wikidata.org/entity/Q99> .  }   Where:  http://www.wikidata.org/entity/Q1248784 has human-readable name "airport."  http://www.wikidata.org/prop/direct/P276 has human-readable name "location."  http://www.wikidata.org/entity/Q99 has human-readable name "California."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which airports are located in California, USA?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q78707> <http://www.wikidata.org/prop/direct/P17> ?uri . }   Where:  http://www.wikidata.org/entity/Q78707 has human-readable name "Yenisey."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which countries border the Yenisey river?	Through which countries does the Yenisei river flow?	No
40	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82955> . ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse . { ?spouse <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q183> . } UNION { ?spouse <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> } }    Where:  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/entity/Q82955 has human-readable name "politician."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  http://www.wikidata.org/prop/direct/P27 has human-readable name "country of citizenship."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which politicians were married to a German?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9439 ?childof ?uri . VALUES ?childof { wdt:P22 wdt:P25 }}   Where:  wd:Q9439 has human-readable name "Victoria."  wdt:P22 has human-readable name "father."  wdt:P25 has human-readable name "mother."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which individuals are the children of a person named Victoria, with at least one parent being a father or a mother?	Who were the parents of Queen Victoria?	No
157	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?uri }   Where:  http://www.wikidata.org/entity/Q5480 has human-readable name "Bart Simpson."  http://www.wikidata.org/prop/direct/P725 has human-readable name "voice actor."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who does the voice of Bart Simpson?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12125895 wdt:P161 ?uri. ?uri wdt:P19 ?birthplace . ?birthplace wdt:P17 wd:Q145 . }   Where:  wd:Q12125895 has human-readable name "Lovesick."  wdt:P161 has human-readable name "cast member."  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q145 has human-readable name "United Kingdom."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which country is the place of birth of the cast member of "Lovesick"?	Give me English actors starring in Lovesick.	No
79	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P522> <http://www.wikidata.org/entity/Q737809> . }   Where:  http://www.wikidata.org/prop/direct/P522 has human-readable name "type of orbit."  http://www.wikidata.org/entity/Q737809 has human-readable name "heliocentric orbit."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which space probes were sent into orbit around the sun?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> ASK WHERE { { ?uri wdt:P31 wd:Q23413. } UNION { ?uri wdt:P31 ?castlesubtype . ?castlesubtype wdt:P279* wd:Q23413 } ?uri wdt:P17 wd:Q30 }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q23413 has human-readable name "castle."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q23413 has human-readable name "castle."  wdt:P17 has human-readable name "country."  wd:Q30 has human-readable name "United States of America."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which castles or structures instanced as castles are located in the United States of America? (Note: This assumes the SPARQL query is looking for structures that are both castles and located in the United States of America. If it is only looking for castles located in the United States regardless of their type, the question would be "Which castles are located in the United States of America?")	Are there any castles in the United States?	No
94	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q408 . ?uri wdt:P106 wd:Q13561328 . }   Where:  wdt:P19 has human-readable name "place of birth."  wdt:P17 has human-readable name "country."  wd:Q408 has human-readable name "Australia."  wdt:P106 has human-readable name "occupation."  wd:Q13561328 has human-readable name "surfer."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which professional surfers were born in Australia?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }   Where:  http://www.wikidata.org/entity/Q9685 has human-readable name "Diana, Princess of Wales."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which is the date of death for Princess Diana?	When did princess Diana die?	No
103	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT * WHERE { ?uri wdt:P31 wd:Q5 . ?uri wdt:P737 wd:Q913 . }   Where:  wdt:P31 has human-readable name "instance of."  wd:Q5 has human-readable name "human."  wdt:P737 has human-readable name "influenced by."  wd:Q913 has human-readable name "Socrates."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was influenced by Socrates?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1124023> <http://www.wikidata.org/prop/direct/P559> ?uri}   Where:  http://www.wikidata.org/entity/Q1124023 has human-readable name "Piccadilly."  http://www.wikidata.org/prop/direct/P559 has human-readable name "terminus."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the terminus of Piccadilly?	Where does Piccadilly start?	No
140	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?uri}   Where:  http://www.wikidata.org/entity/Q19024 has human-readable name "Boston Tea Party."  http://www.wikidata.org/prop/direct/P585 has human-readable name "point in time."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Boston Tea Party take place?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q901 . ?uri wdt:P69 ?university. wd:Q49113  wdt:P527 ?university . }   Where:  wdt:P106 has human-readable name "occupation."  wd:Q901 has human-readable name "scientist."  wdt:P69 has human-readable name "educated at."  wd:Q49113 has human-readable name "Ivy League."  wdt:P527 has human-readable name "has part(s)."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which Ivy League universities did scientists attend for their education? (Note: This question assumes the SPARQL query is returning distinct universities for each scientist.)	How many scientists graduated from an Ivy League university?	No
82	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?s WHERE { <http://www.wikidata.org/entity/Q241665>  <http://www.wikidata.org/prop/direct/P569>  ?date . ?s <http://www.wikidata.org/prop/direct/P106> / <http://www.wikidata.org/prop/direct/P279>*   <http://www.wikidata.org/entity/Q483501> . ?s  <http://www.wikidata.org/prop/direct/P569>  ?date . }   Where:  http://www.wikidata.org/entity/Q241665 has human-readable name "Rachel Stevens."  http://www.wikidata.org/prop/direct/P569 has human-readable name "date of birth."  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q483501 has human-readable name "artist."  http://www.wikidata.org/prop/direct/P569 has human-readable name "date of birth."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which artists were born on the same date as Rachel Stevens?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q536133 wdt:P571 ?date . }    Where:  wd:Q536133 has human-readable name "Jack Wolfskin."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which entities (likely companies or brands) were founded on the same date as Jack Wolfskin?	When was Jack Wolfskin founded?	No
31	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q359>  <http://www.wikidata.org/prop/direct/P50>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q359 has human-readable name "WikiLeaks."  http://www.wikidata.org/prop/direct/P50 has human-readable name "author."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the author of WikiLeaks?   ----End Example ----  Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q64>  <http://www.wikidata.org/prop/direct/P6>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q64 has human-readable name "Berlin."  http://www.wikidata.org/prop/direct/P6 has human-readable name "head of government."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the head of government in Berlin?	Who is the mayor of Berlin?	Yes
132	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P159 ?uri }    Where:  wd:Q51747 has human-readable name "Air China."  wdt:P159 has human-readable name "headquarters location."  Transform the SPARQL query to a natural language question. Output just the transformed question. In which city is the headquarter of Air China?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q317521> <http://www.wikidata.org/prop/direct/P61> ?uri . }   Where:  http://www.wikidata.org/entity/Q317521 has human-readable name "Elon Musk."  http://www.wikidata.org/prop/direct/P61 has human-readable name "discoverer or inventor."  Transform the SPARQL query to a natural language question. Output just the transformed question	In which capacity did Elon Musk make a discovery or invention?	What is Elon Musk famous for?	No
98	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q45875 ?p ?uri . ?uri wdt:P106 wd:Q6625963 . }   Where:  wd:Q45875 has human-readable name "A Song of Ice and Fire."  wdt:P106 has human-readable name "occupation."  wd:Q6625963 has human-readable name "novelist."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the novelist of the work a song of ice and fire?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q1048>  <http://www.wikidata.org/prop/direct/P157>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q1048 has human-readable name "Julius Caesar."  http://www.wikidata.org/prop/direct/P157 has human-readable name "killed by."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who killed Julius Caesar?	Who killed Caesar?	No
175	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q78707> <http://www.wikidata.org/prop/direct/P17> ?uri . }   Where:  http://www.wikidata.org/entity/Q78707 has human-readable name "Yenisey."  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  Transform the SPARQL query to a natural language question. Output just the transformed question. Through which countries does the Yenisei river flow?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q9458 wdt:P570 ?date . }   Where:  wd:Q9458 has human-readable name "Muhammad."  wdt:P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question	In which year did Muhammad pass away?	When did Muhammad die?	Yes
81	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9682 wdt:P22  ?uri . }   Where:  wd:Q9682 has human-readable name "Elizabeth II."  wdt:P22 has human-readable name "father."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the father of Queen Elizabeth II?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P6 wd:Q39593 . }   Where:  wdt:P6 has human-readable name "head of government."  wd:Q39593 has human-readable name "Butch Otter."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the head of government for Idaho when the query was executed? (Note: At the time of this query execution, the head of government for Idaho was Butch Otter.)	Butch Otter is the governor of which U.S. state?	No
10	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel "Rodzilla"@en . }   Where:  skos:altLabel has human-readable name "alternative label."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who was called Rodzilla?   ----End Example ----  Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q214341>  <http://www.wikidata.org/prop/direct/P2196>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q214341 has human-readable name "University of Amsterdam."  http://www.wikidata.org/prop/direct/P2196 has human-readable name "students count."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which university has a student count? (Answer: University of Amsterdam)	How many students does the Free University of Amsterdam have?	Not done
168	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: ASK where { <http://www.wikidata.org/entity/Q83325> <http://www.wikidata.org/prop/direct/P1576> <http://www.wikidata.org/entity/Q83364>}   Where:  http://www.wikidata.org/entity/Q83325 has human-readable name "Pamela Anderson."  http://www.wikidata.org/prop/direct/P1576 has human-readable name "lifestyle."  http://www.wikidata.org/entity/Q83364 has human-readable name "vegetarianism."  Transform the SPARQL query to a natural language question. Output just the transformed question. Is Pamela Anderson a vegan?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8539> <http://www.wikidata.org/prop/direct/P161> ?uri}   Where:  http://www.wikidata.org/entity/Q8539 has human-readable name "The Big Bang Theory."  http://www.wikidata.org/prop/direct/P161 has human-readable name "cast member."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who are the cast members of The Big Bang Theory?	Which actors play in Big Bang Theory?	Yes
169	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P159*/wdt:P31*/wdt:P131 wd:Q1198 . }    Where:  wdt:P31 has human-readable name "instance of."  wd:Q131734 has human-readable name "brewery."  wdt:P159 has human-readable name "headquarters location."  wdt:P31 has human-readable name "instance of."  wdt:P131 has human-readable name "located in the administrative territorial entity."  wd:Q1198 has human-readable name "North Rhine-Westphalia."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which beer brewing companies are located in North-Rhine Westphalia?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P31/wdt:P279* wd:Q7075 . ?uri wdt:P571 ?date . FILTER( YEAR(?date) < 1400 ) }    Where:  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q7075 has human-readable name "library."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which libraries had their inception before the year 1400?	Give me all libraries established before 1400.	Yes
131	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }   Where:  http://www.wikidata.org/entity/Q9685 has human-readable name "Diana, Princess of Wales."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did princess Diana die?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q843 wdt:P2936 ?uri . }   Where:  wd:Q843 has human-readable name "Pakistan."  wdt:P2936 has human-readable name "language used."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the language used in Pakistan? (Answer will be returned as a list of URIs)  Note: In the given example, I assumed that the query is seeking for a list of URIs as answer, which can be checked from the query structure. If the query is supposed to return a single value, then the question should be slightly different (e.g., "Which language is used in Pakistan?").	What languages are spoken in Pakistan?	No
160	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q5113> . ?uri <http://www.wikidata.org/prop/direct/P141> <http://www.wikidata.org/entity/Q219127> . }   Where:  http://www.wikidata.org/prop/direct/P171 has human-readable name "parent taxon."  http://www.wikidata.org/entity/Q5113 has human-readable name "bird."  http://www.wikidata.org/prop/direct/P141 has human-readable name "IUCN conservation status."  http://www.wikidata.org/entity/Q219127 has human-readable name "Critically Endangered."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all critically endangered birds.   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?uri}   Where:  http://www.wikidata.org/entity/Q8337 has human-readable name "Harry Potter."  http://www.wikidata.org/prop/direct/P50 has human-readable name "author."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which critically endangered birds can be identified? (Answer: The SPARQL query identifies the URI of critically endangered birds which are children taxonomically of the bird class.)  Transformed natural language question: Which birds are classified as critically endangered?	Who wrote Harry Potter?	No
129	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9439 ?childof ?uri . VALUES ?childof { wdt:P22 wdt:P25 }}   Where:  wd:Q9439 has human-readable name "Victoria."  wdt:P22 has human-readable name "father."  wdt:P25 has human-readable name "mother."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who were the parents of Queen Victoria?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?uri }   Where:  http://www.wikidata.org/entity/Q5480 has human-readable name "Bart Simpson."  http://www.wikidata.org/prop/direct/P725 has human-readable name "voice actor."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the voice actor of Bart Simpson?	Who does the voice of Bart Simpson?	Yes
133	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }   Where:  http://www.wikidata.org/entity/Q9685 has human-readable name "Diana, Princess of Wales."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did princess Diana die?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q1381762> . }   Where:  http://www.wikidata.org/prop/direct/P361 has human-readable name "part of."  http://www.wikidata.org/entity/Q1381762 has human-readable name "Teenage Mutant Ninja Turtles."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the Teenage Mutant Ninja Turtles a part of? (Note: The SPARQL query is asking for the uris of entities that are part of the Teenage Mutant Ninja Turtles, so the transformed query should ask about the connection between the two concepts, rather than asking for a specific value.)	What are the names of the Teenage Mutant Ninja Turtles?	No
62	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q1124 wdt:P40 ?child . ?child wdt:P26 ?uri }   Where:  wd:Q1124 has human-readable name "Bill Clinton."  wdt:P40 has human-readable name "child."  wdt:P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the daughter of Bill Clinton married to?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q5469 wdt:P610 ?uri }   Where:  wd:Q5469 has human-readable name "Karakoram."  wdt:P610 has human-readable name "highest point."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the highest point of Karakoram mountain range?	What is the highest place of Karakoram?	Yes
174	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?s WHERE { <http://www.wikidata.org/entity/Q241665>  <http://www.wikidata.org/prop/direct/P569>  ?date . ?s <http://www.wikidata.org/prop/direct/P106> / <http://www.wikidata.org/prop/direct/P279>*   <http://www.wikidata.org/entity/Q483501> . ?s  <http://www.wikidata.org/prop/direct/P569>  ?date . }   Where:  http://www.wikidata.org/entity/Q241665 has human-readable name "Rachel Stevens."  http://www.wikidata.org/prop/direct/P569 has human-readable name "date of birth."  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q483501 has human-readable name "artist."  http://www.wikidata.org/prop/direct/P569 has human-readable name "date of birth."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which artists were born on the same date as Rachel Stevens?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q45875 ?p ?uri . ?uri wdt:P106 wd:Q6625963 . }   Where:  wd:Q45875 has human-readable name "A Song of Ice and Fire."  wdt:P106 has human-readable name "occupation."  wd:Q6625963 has human-readable name "novelist."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which novelists wrote a "A Song of Ice and Fire"?	Who is the novelist of the work a song of ice and fire?	No
178	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q3266236 wdt:P170 ?author . ?author wdt:P570 ?date }   Where:  wd:Q3266236 has human-readable name "Count Dracula."  wdt:P170 has human-readable name "creator."  wdt:P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Dracula's creator die?   ----End Example ----  Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  ?p  <http://www.wikidata.org/entity/Q2009573> .  FILTER (?p = <http://www.wikidata.org/prop/direct/P144> || ?p = <http://www.wikidata.org/prop/direct/P674>) }   Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q11424 has human-readable name "film."  http://www.wikidata.org/entity/Q2009573 has human-readable name "James Bond."  http://www.wikidata.org/prop/direct/P144 has human-readable name "based on."  http://www.wikidata.org/prop/direct/P674 has human-readable name "characters."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many films feature James Bond as a character or are based on him?	How many James Bond movies do exist?	Yes
104	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2831>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }    Where:  http://www.wikidata.org/entity/Q2831 has human-readable name "Michael Jackson."  http://www.wikidata.org/prop/direct/P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Michael Jackson die?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q25310> <http://www.wikidata.org/prop/direct/P40> ?daughter . ?daughter  <http://www.wikidata.org/prop/direct/P21> <http://www.wikidata.org/entity/Q6581072> . ?daughter  <http://www.wikidata.org/prop/direct/P26> ?uri .}   Where:  http://www.wikidata.org/entity/Q25310 has human-readable name "Robert F. Kennedy."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  http://www.wikidata.org/prop/direct/P21 has human-readable name "sex or gender."  http://www.wikidata.org/entity/Q6581072 has human-readable name "female."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which women were the spouses of Robert F. Kennedy? (The children of Robert F. Kennedy are filtering for those with gender "female.")	Who is the daughter of Robert Kennedy married to?	No
182	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?uri }   Where:  http://www.wikidata.org/entity/Q5480 has human-readable name "Bart Simpson."  http://www.wikidata.org/prop/direct/P725 has human-readable name "voice actor."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who does the voice of Bart Simpson?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P141 wd:Q219127 }   Where:  wdt:P141 has human-readable name "IUCN conservation status."  wd:Q219127 has human-readable name "Critically Endangered."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the IUCN conservation status of the entity selected in the query? (Answer: Which entity is tagged as "Critically Endangered" in the database?)	Which animals are critically endangered?	No
128	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?obj . ?obj rdfs:label ?label FILTER( REGEX( ?label, "Michelle" ) ) }   Where:  wd:Q76 has human-readable name "Barack Obama."  wdt:P26 has human-readable name "spouse."  rdfs:label has human-readable name "label."  Transform the SPARQL query to a natural language question. Output just the transformed question. Is the wife of President Obama called Michelle?   ----End Example ----  Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q359>  <http://www.wikidata.org/prop/direct/P50>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q359 has human-readable name "WikiLeaks."  http://www.wikidata.org/prop/direct/P50 has human-readable name "author."  Transform the SPARQL query to a natural language question. Output just the transformed question	Who is the author of WikiLeaks?	Who is the author of WikiLeaks?	Yes
203	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?n WHERE { wd:Q4138  wdt:P4511 ?n }   Where:  wd:Q4138 has human-readable name "Chiemsee."  wdt:P4511 has human-readable name "vertical depth."  Transform the SPARQL query to a natural language question. Output just the transformed question. How deep is Lake Chiemsee?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2831> <http://www.wikidata.org/prop/direct/P509> ?uri . }   Where:  http://www.wikidata.org/entity/Q2831 has human-readable name "Michael Jackson."  http://www.wikidata.org/prop/direct/P509 has human-readable name "cause of death."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the cause of death of Michael Jackson?	How did Michael Jackson die?	Yes
51	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P522> <http://www.wikidata.org/entity/Q737809> . }   Where:  http://www.wikidata.org/prop/direct/P522 has human-readable name "type of orbit."  http://www.wikidata.org/entity/Q737809 has human-readable name "heliocentric orbit."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which space probes were sent into orbit around the sun?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q6667101 wdt:P577 ?date }   Where:  wd:Q6667101 has human-readable name "Worst Case Scenario."  wdt:P577 has human-readable name "publication date."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which publications related to the "Worst Case Scenario" have been published?	When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?	No
137	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> .  ?s1 <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> .  ?s1  <http://www.wikidata.org/prop/direct/P1082>  ?o1 . FILTER ( ?o1 > "250000"^^<http://www.w3.org/2001/XMLSchema#integer>)}   Where:  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q183 has human-readable name "Germany."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q515 has human-readable name "city."  http://www.wikidata.org/prop/direct/P1082 has human-readable name "population."  http://www.w3.org/2001/XMLSchema#integer has human-readable name "integer."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which German cities have more than 250000 inhabitants?   ----End Example ----  Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q55> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q7278> .  }    Where:  http://www.wikidata.org/prop/direct/P17 has human-readable name "country."  http://www.wikidata.org/entity/Q55 has human-readable name "Netherlands."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q7278 has human-readable name "political party."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which Dutch political parties have been instantiated as entities? (Note that the original query does not return any results for the given filter condition in this case.)	Give me all Dutch parties.	No
150	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P6 wd:Q39593 . }   Where:  wdt:P6 has human-readable name "head of government."  wd:Q39593 has human-readable name "Butch Otter."  Transform the SPARQL query to a natural language question. Output just the transformed question. Butch Otter is the governor of which U.S. state?   ----End Example ----  Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q236> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . }   Where:  http://www.wikidata.org/entity/Q236 has human-readable name "Montenegro."  http://www.wikidata.org/prop/direct/P35 has human-readable name "head of state."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q515 has human-readable name "city."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which city is the birthplace of the head of state of Montenegro?	In which city was the president of Montenegro born?	Yes
115	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8539> <http://www.wikidata.org/prop/direct/P161> ?uri}   Where:  http://www.wikidata.org/entity/Q8539 has human-readable name "The Big Bang Theory."  http://www.wikidata.org/prop/direct/P161 has human-readable name "cast member."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which actors play in Big Bang Theory?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?c) WHERE { ?uri wdt:P131 wd:Q1456 . ?uri wdt:P31/wdt:P279* wd:Q23397 . }   Where:  wdt:P131 has human-readable name "located in the administrative territorial entity."  wd:Q1456 has human-readable name "South Carolina."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q23397 has human-readable name "lake."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many lakes are located in South Carolina, which is an administrative territorial entity?	How many rivers and lakes are in South Carolina?	No
214	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q25310> <http://www.wikidata.org/prop/direct/P40> ?daughter . ?daughter  <http://www.wikidata.org/prop/direct/P21> <http://www.wikidata.org/entity/Q6581072> . ?daughter  <http://www.wikidata.org/prop/direct/P26> ?uri .}   Where:  http://www.wikidata.org/entity/Q25310 has human-readable name "Robert F. Kennedy."  http://www.wikidata.org/prop/direct/P40 has human-readable name "child."  http://www.wikidata.org/prop/direct/P21 has human-readable name "sex or gender."  http://www.wikidata.org/entity/Q6581072 has human-readable name "female."  http://www.wikidata.org/prop/direct/P26 has human-readable name "spouse."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the daughter of Robert Kennedy married to?   ----End Example ----  Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P641> <http://www.wikidata.org/entity/Q842284> . ?s1  <http://www.wikidata.org/prop/direct/P19> ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P131>* <http://www.wikidata.org/entity/Q34> . }   Where:  http://www.wikidata.org/prop/direct/P641 has human-readable name "sport."  http://www.wikidata.org/entity/Q842284 has human-readable name "skateboarding."  http://www.wikidata.org/prop/direct/P19 has human-readable name "place of birth."  http://www.wikidata.org/prop/direct/P131 has human-readable name "located in the administrative territorial entity."  http://www.wikidata.org/entity/Q34 has human-readable name "Sweden."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which place is the birthplace of the sport skateboarding located in, that is found in administrative territories of? (Answer: Sweden)	Give me all professional skateboarders from Sweden.	No
64	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ( COUNT( DISTINCT ?uri ) AS ?c ) WHERE { ?uri wdt:P112 wd:Q36215 . ?uri wdt:P31/wdt:P279* wd:Q783794 . }    Where:  wdt:P112 has human-readable name "founded by."  wd:Q36215 has human-readable name "Mark Zuckerberg."  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q783794 has human-readable name "company."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many companies were founded by the founder of Facebook?   ----End Example ----  Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q7934>  <http://www.wikidata.org/prop/direct/P106>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q7934 has human-readable name "Frank Herbert."  http://www.wikidata.org/prop/direct/P106 has human-readable name "occupation."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the occupation of Frank Herbert? (Answer: Frank Herbert was a writer.)  Note: The original SPARQL query selected the object of the P106 property for the entity Q7934, but the question provides the answer without the need for further querying, so the transformed question is focused on the entity and its property rather than the result of the query.	What is the profession of Frank Herbert?	No
87	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q52 wdt:P170 ?uri . ?uri wdt:P31 wd:Q5 . }   Where:  wd:Q52 has human-readable name "Wikipedia."  wdt:P170 has human-readable name "creator."  wdt:P31 has human-readable name "instance of."  wd:Q5 has human-readable name "human."  Transform the SPARQL query to a natural language question. Output just the transformed question. Who created English Wikipedia?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q571 . ?uri wdt:P1104 ?number . } ORDER BY DESC(?number) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wdt:P279 has human-readable name "subclass of."  wd:Q571 has human-readable name "book."  wdt:P1104 has human-readable name "number of pages."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which book has the highest number of pages in the series of English Wikipedia? (Assuming that English Wikipedia is categorized as a book series in Wikidata)	Which book has the most pages?	No
102	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q733>  <http://www.wikidata.org/prop/direct/P571>  ?o1 .  }   Where:  http://www.wikidata.org/entity/Q733 has human-readable name "Paraguay."  http://www.wikidata.org/prop/direct/P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Paraguay proclaim its independence?   ----End Example ----  Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q3266236 wdt:P170 ?author . ?author wdt:P570 ?date }   Where:  wd:Q3266236 has human-readable name "Count Dracula."  wdt:P170 has human-readable name "creator."  wdt:P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question	When did the creator of Count Dracula die?	When did Dracula's creator die?	Yes
111	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT ?s1 where  { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q389459> }    Where:  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/entity/Q389459 has human-readable name "Mars rover."  Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all spacecrafts that flew to Mars.   ----End Example ----  Having a SPARQL query:  SELECT  (COUNT(DISTINCT ?o1) as ?count)  WHERE { <http://www.wikidata.org/entity/Q33760>  <http://www.wikidata.org/prop/direct/P166>  ?o1 . }    Where:  http://www.wikidata.org/entity/Q33760 has human-readable name "Bertrand Russell."  http://www.wikidata.org/prop/direct/P166 has human-readable name "award received."  Transform the SPARQL query to a natural language question. Output just the transformed question	How many different awards were received by Bertrand Russell?	How many awards has Bertrand Russell?	Yes
50	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q9458 wdt:P570 ?date . }   Where:  wd:Q9458 has human-readable name "Muhammad."  wdt:P570 has human-readable name "date of death."  Transform the SPARQL query to a natural language question. Output just the transformed question. When did Muhammad die?   ----End Example ----  Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P30>  <http://www.wikidata.org/entity/Q15> . ?s1  <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>*  <http://www.wikidata.org/entity/Q8072> . ?s1 <http://www.wikidata.org/prop/direct/P2044> ?o1 . } ORDER BY DESC(?o1) LIMIT 1   Where:  http://www.wikidata.org/prop/direct/P30 has human-readable name "continent."  http://www.wikidata.org/entity/Q15 has human-readable name "Africa."  http://www.wikidata.org/prop/direct/P31 has human-readable name "instance of."  http://www.wikidata.org/prop/direct/P279 has human-readable name "subclass of."  http://www.wikidata.org/entity/Q8072 has human-readable name "volcano."  http://www.wikidata.org/prop/direct/P2044 has human-readable name "elevation above sea level."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the highest elevation above sea level of any volcano located in Africa, as classified by instance of or subclass of relationships?	What is the highest volcano in Africa?	No
197	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q901 . ?uri wdt:P69 ?university. wd:Q49113  wdt:P527 ?university . }   Where:  wdt:P106 has human-readable name "occupation."  wd:Q901 has human-readable name "scientist."  wdt:P69 has human-readable name "educated at."  wd:Q49113 has human-readable name "Ivy League."  wdt:P527 has human-readable name "has part(s)."  Transform the SPARQL query to a natural language question. Output just the transformed question. How many scientists graduated from an Ivy League university?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P571 ?date } ORDER BY DESC(?date) LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wd:Q35657 has human-readable name "U.S. state."  wdt:P571 has human-readable name "inception."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which U.S. state had the earliest inception date for being an instance (i.e., a state in the United States)?	Which U.S. state has been admitted latest?	No
116	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1124023> <http://www.wikidata.org/prop/direct/P559> ?uri}   Where:  http://www.wikidata.org/entity/Q1124023 has human-readable name "Piccadilly."  http://www.wikidata.org/prop/direct/P559 has human-readable name "terminus."  Transform the SPARQL query to a natural language question. Output just the transformed question. Where does Piccadilly start?   ----End Example ----  Having a SPARQL query: PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel "Rodzilla"@en . }   Where:  skos:altLabel has human-readable name "alternative label."  Transform the SPARQL query to a natural language question. Output just the transformed question	What is the alternative label for the URI that goes by the name "Rodzilla" in English?	Who was called Rodzilla?	No
189	mistralai/Mistral-7B-Instruct-v0.2	en	ONE_SHOT	---- Start Example ----   Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {  ?type wdt:P279* wd:Q4830453 . ?aerospace wdt:P279* wd:Q3477363 . ?healthcare wdt:P279* wd:Q15067276 . ?pharma wdt:P279* wd:Q507443 . ?uri wdt:P452 ?aerospace ; wdt:P452 ?healthcare . }   Where:  wdt:P279 has human-readable name "subclass of."  wd:Q4830453 has human-readable name "business."  wdt:P279 has human-readable name "subclass of."  wd:Q3477363 has human-readable name "aerospace manufacturer."  wdt:P279 has human-readable name "subclass of."  wd:Q15067276 has human-readable name "health care industry."  wdt:P279 has human-readable name "subclass of."  wd:Q507443 has human-readable name "pharmaceutical industry."  wdt:P452 has human-readable name "industry."  wdt:P452 has human-readable name "industry."  Transform the SPARQL query to a natural language question. Output just the transformed question. Which companies work in the aerospace industry as well as in medicine?   ----End Example ----  Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?album wdt:P31 wd:Q482994 ; wdt:P175 wd:Q1299 ; wdt:P577 ?date ; wdt:P483 ?uri . } ORDER BY ?date LIMIT 1   Where:  wdt:P31 has human-readable name "instance of."  wd:Q482994 has human-readable name "album."  wdt:P175 has human-readable name "performer."  wd:Q1299 has human-readable name "The Beatles."  wdt:P577 has human-readable name "publication date."  wdt:P483 has human-readable name "recorded at studio or venue."  Transform the SPARQL query to a natural language question. Output just the transformed question	Which album by The Beatles was recorded at the studio or venue with the earliest publication date?	In which studio did the Beatles record their first album?	No