id	prompt	generated_nl	gold_standard_nl	lang	model	prompt_type	query	tokenized_generated_nl	tokenized_gold_standard_nl	sentence_bleu	sentence_nist	rougeL	levenshtein
1	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q12280 has human-readable name ""bridge.""
 wdt:P177 has human-readable name ""crosses.""
 wd:Q1471 has human-readable name ""Seine.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which bridges cross the Seine? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q131436 has human-readable name ""board game.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What board games are there?	List all boardgames by GMT.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . }	['What', 'board', 'games', 'are', 'there', '?']	['List', 'all', 'boardgames', 'by', 'GMT', '.']	0.0	0.0	0.0	17.0
2	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q38111 has human-readable name ""Leonardo DiCaprio.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many films did Leonardo DiCaprio star in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . } 
 Where:
 wd:Q40984 has human-readable name ""Skype.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who developed Skype?	Who developed Skype?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . }	['Who', 'developed', 'Skype', '?']	['Who', 'developed', 'Skype', '?']	1.0	0.0	1.0	0.0
3	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P17 has human-readable name ""country.""
 wd:Q38 has human-readable name ""Italy.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the highest mountain in Italy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P19 wd:Q160544 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q160544 has human-readable name ""Heraklion.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was the birthplace of Heraklion?	Which people were born in Heraklion?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P19 wd:Q160544 . }	['Where', 'was', 'the', 'birthplace', 'of', 'Heraklion', '?']	['Which', 'people', 'were', 'born', 'in', 'Heraklion', '?']	0.208	0.8021	0.1667	20.0
4	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q33935> <http://www.wikidata.org/prop/direct/P6> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q33935 has human-readable name ""Tel Aviv.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of Tel Aviv? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q177397 wdt:P131 ?obj . ?obj wdt:P131 ?uri . } 
 Where:
 wd:Q177397 has human-readable name ""area pepper.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is the administrative territory located in which the area pepper is located in?	In which U.S. state is Area 51 located?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q177397 wdt:P131 ?obj . ?obj wdt:P131 ?uri . }	['Where', 'is', 'the', 'administrative', 'territory', 'located', 'in', 'which', 'the', 'area', 'pepper', 'is', 'located', 'in', '?']	['In', 'which', 'U.S.', 'state', 'is', 'Area', '51', 'located', '?']	0.2663	0.8453	0.2	61.0
5	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q48410 has human-readable name ""Richard Gere.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which films did Julia Roberts as well as Richard Gere play? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q60 wdt:P6 ?uri . } 
 Where:
 wd:Q60 has human-readable name ""New York City.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of New York City?	Who is the mayor of New York City?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q60 wdt:P6 ?uri . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'New', 'York', 'City', '?']	['Who', 'is', 'the', 'mayor', 'of', 'New', 'York', 'City', '?']	0.4692	2.3054	0.8235	15.0
7	"---- Start Example ---- 
 Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 . ?uri p:P2044 ?stmnode. ?stmnode psv:P2044 ?valuenode . ?valuenode wikibase:quantityAmount ?elevation . ?valuenode wikibase:quantityUnit ?unit . wd:Q130736 wdt:P2044 ?elevationNangaParbat . FILTER(?unit = wd:Q11573) FILTER (?elevation > ?elevationNangaParbat) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 p:P2044 has human-readable name ""elevation above sea level.""
 psv:P2044 has human-readable name ""psv:P2044.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q130736 has human-readable name ""Nanga Parbat.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which mountains are higher than the Nanga Parbat? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri }  
 Where:
 wd:Q91 has human-readable name ""Abraham Lincoln.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did Abraham Lincoln die?	Where did Abraham Lincoln die?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri } 	['Where', 'did', 'Abraham', 'Lincoln', 'die', '?']	['Where', 'did', 'Abraham', 'Lincoln', 'die', '?']	1.0	2.585	1.0	0.0
8	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q806349 has human-readable name ""bandleader.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all bandleaders that play trumpet. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P113 ?uri . } 
 Where:
 wd:Q51747 has human-readable name ""Air China.""
 wdt:P113 has human-readable name ""airline hub.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which airlines list Air China as one of their airline hubs?	Which airports does Air China serve?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P113 ?uri . }	['Which', 'airlines', 'list', 'Air', 'China', 'as', 'one', 'of', 'their', 'airline', 'hubs', '?']	['Which', 'airports', 'does', 'Air', 'China', 'serve', '?']	0.197	0.9358	0.3529	32.0
9	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q134041 wdt:P279+ wd:Q40050 . } 
 Where:
 wd:Q134041 has human-readable name ""cola.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q40050 has human-readable name ""drink.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Cola a beverage? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?film wdt:P57 wd:Q16297 ; wdt:P161 wd:Q16297   . ?film wdt:P161 ?uri . } 
 Where:
 wdt:P57 has human-readable name ""director.""
 wd:Q16297 has human-readable name ""William Shatner.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q16297 has human-readable name ""William Shatner.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the cast members of movies directed by William Shatner?	Give me all actors starring in movies directed by and starring William Shatner.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?film wdt:P57 wd:Q16297 ; wdt:P161 wd:Q16297   . ?film wdt:P161 ?uri . }	['Who', 'are', 'the', 'cast', 'members', 'of', 'movies', 'directed', 'by', 'William', 'Shatner', '?']	['Give', 'me', 'all', 'actors', 'starring', 'in', 'movies', 'directed', 'by', 'and', 'starring', 'William', 'Shatner', '.']	0.1847	1.4352	0.3478	38.0
10	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . } 
 Where:
 wd:Q5401 has human-readable name ""Eurasia.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many people live in Eurasia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q928 wdt:P37 ?uri . } 
 Where:
 wd:Q928 has human-readable name ""Philippines.""
 wdt:P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the official language of the Philippines?	What are the official languages of the Philippines?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q928 wdt:P37 ?uri . }	['What', 'is', 'the', 'official', 'language', 'of', 'the', 'Philippines', '?']	['What', 'are', 'the', 'official', 'languages', 'of', 'the', 'Philippines', '?']	0.3689	2.4933	0.7143	4.0
11	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q214622> <http://www.wikidata.org/prop/direct/P20> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q214622 has human-readable name ""Nikos Kazantzakis.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which city did Nikos Kazantzakis die? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the films that are classified as subclasses of ""film"" and have a country of origin in Denmark?"	Give me all Danish films.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . }	"['What', 'are', 'the', 'films', 'that', 'are', 'classified', 'as', 'subclasses', 'of', '``', 'film', ""''"", 'and', 'have', 'a', 'country', 'of', 'origin', 'in', 'Denmark', '?']"	['Give', 'me', 'all', 'Danish', 'films', '.']	0.1796	0.1175	0.0909	88.0
12	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q41142 wdt:P26 ?uri . } 
 Where:
 wd:Q41142 has human-readable name ""Jane Fonda.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How often did Jane Fonda marry? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P161 wd:Q35332 ; wdt:P57 wd:Q192990 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q35332 has human-readable name ""Brad Pitt.""
 wdt:P57 has human-readable name ""director.""
 wd:Q192990 has human-readable name ""Guy Ritchie.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who has Brad Pitt acted in films directed by Guy Ritchie?	Which movies starring Brad Pitt were directed by Guy Ritchie?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P161 wd:Q35332 ; wdt:P57 wd:Q192990 . }	['Who', 'has', 'Brad', 'Pitt', 'acted', 'in', 'films', 'directed', 'by', 'Guy', 'Ritchie', '?']	['Which', 'movies', 'starring', 'Brad', 'Pitt', 'were', 'directed', 'by', 'Guy', 'Ritchie', '?']	0.3646	2.018	0.5714	27.0
13	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q418 has human-readable name ""telecommunication.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q31 has human-readable name ""Belgium.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which telecommunications organizations are located in Belgium? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q16397 wdt:P40 ?children . ?children wdt:P40 ?uri . } 
 Where:
 wd:Q16397 has human-readable name ""Bruce Lee.""
 wdt:P40 has human-readable name ""child.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the children of Bruce Lee?	Give me the grandchildren of Bruce Lee.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q16397 wdt:P40 ?children . ?children wdt:P40 ?uri . }	['Who', 'are', 'the', 'children', 'of', 'Bruce', 'Lee', '?']	['Give', 'me', 'the', 'grandchildren', 'of', 'Bruce', 'Lee', '.']	0.2576	1.5	0.4286	12.0
14	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 . ?film wdt:P161 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT(?film))) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actor was casted in the most movies? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q728 . wd:Q155644 wdt:P287 ?designer . ?uri wdt:P279 ?type ; wdt:P287 ?designer . FILTER (?uri != wd:Q155644) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q728 has human-readable name ""weapon.""
 wd:Q155644 has human-readable name ""Uzi.""
 wdt:P287 has human-readable name ""designed by.""
 wdt:P279 has human-readable name ""subclass of.""
 wdt:P287 has human-readable name ""designed by.""
 wd:Q155644 has human-readable name ""Uzi.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which weapons are subclasses of the same type as the Uzi and designed by the same designer, excluding the Uzi itself?	Which other weapons did the designer of the Uzi develop?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q728 . wd:Q155644 wdt:P287 ?designer . ?uri wdt:P279 ?type ; wdt:P287 ?designer . FILTER (?uri != wd:Q155644) }	['Which', 'weapons', 'are', 'subclasses', 'of', 'the', 'same', 'type', 'as', 'the', 'Uzi', 'and', 'designed', 'by', 'the', 'same', 'designer', ',', 'excluding', 'the', 'Uzi', 'itself', '?']	['Which', 'other', 'weapons', 'did', 'the', 'designer', 'of', 'the', 'Uzi', 'develop', '?']	0.2092	1.1618	0.4	74.0
15	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q465 wdt:P112 ?uri . } 
 Where:
 wd:Q465 has human-readable name ""DBpedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who are the developers of DBpedia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q168383 wdt:P127 ?uri . } 
 Where:
 wd:Q168383 has human-readable name ""Universal Pictures.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who owns Universal Pictures?	Who is the owner of Universal Studios?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q168383 wdt:P127 ?uri . }	['Who', 'owns', 'Universal', 'Pictures', '?']	['Who', 'is', 'the', 'owner', 'of', 'Universal', 'Studios', '?']	0.1436	0.7092	0.3636	18.0
16	"---- Start Example ---- 
 Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P159>  <http://www.wikidata.org/entity/Q60> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q33506> . ?s1  <http://www.wikidata.org/prop/direct/P1174> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 http://www.wikidata.org/entity/Q60 has human-readable name ""New York City.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q33506 has human-readable name ""museum.""
 http://www.wikidata.org/prop/direct/P1174 has human-readable name ""visitors per year.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which museum in New York has the most visitors? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P2046 has human-readable name ""area.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What U.S. state has the highest population density?	Which state of the USA has the highest population density?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1	['What', 'U.S.', 'state', 'has', 'the', 'highest', 'population', 'density', '?']	['Which', 'state', 'of', 'the', 'USA', 'has', 'the', 'highest', 'population', 'density', '?']	0.4888	2.2822	0.6667	16.0
17	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q1726 has human-readable name ""Munich.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all companies in Munich. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q116 ; wdt:P26 ?spouse . ?spouse wdt:P27 wd:Q183 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q116 has human-readable name ""monarch.""
 wdt:P26 has human-readable name ""spouse.""
 wdt:P27 has human-readable name ""country of citizenship.""
 wd:Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which monarchs have spouses who are citizens of Germany?	Which monarchs were married to a German?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q116 ; wdt:P26 ?spouse . ?spouse wdt:P27 wd:Q183 . }	['Which', 'monarchs', 'have', 'spouses', 'who', 'are', 'citizens', 'of', 'Germany', '?']	['Which', 'monarchs', 'were', 'married', 'to', 'a', 'German', '?']	0.1983	0.9	0.25	26.0
18	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q858840>  <http://www.wikidata.org/prop/direct/P161>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q858840 has human-readable name ""Last Action Hero.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors starring in Last Action Hero. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), ""1950"") } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q43229 has human-readable name ""organization.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What organizations were founded in the 1950s?	Which organizations were founded in 1950?	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), ""1950"") }"	['What', 'organizations', 'were', 'founded', 'in', 'the', '1950s', '?']	['Which', 'organizations', 'were', 'founded', 'in', '1950', '?']	0.3656	1.7546	0.6154	8.0
19	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q34370 wdt:P6 ?uri . } 
 Where:
 wd:Q34370 has human-readable name ""Rotterdam.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of Rotterdam? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q190679 wdt:P170 ?uri . } 
 Where:
 wd:Q190679 has human-readable name ""Captain America.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the creator of Captain America?	Who created the comic Captain America?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q190679 wdt:P170 ?uri . }	['Who', 'is', 'the', 'creator', 'of', 'Captain', 'America', '?']	['Who', 'created', 'the', 'comic', 'Captain', 'America', '?']	0.2724	1.7546	0.6154	14.0
20	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q928 wdt:P37 ?uri . } 
 Where:
 wd:Q928 has human-readable name ""Philippines.""
 wdt:P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What are the official languages of the Philippines? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q178871 wdt:P1029 ?uri } 
 Where:
 wd:Q178871 has human-readable name ""Apollo 14.""
 wdt:P1029 has human-readable name ""crew member(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the crew members of Apollo 14?	Give me the Apollo 14 astronauts.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q178871 wdt:P1029 ?uri }	['Who', 'are', 'the', 'crew', 'members', 'of', 'Apollo', '14', '?']	['Give', 'me', 'the', 'Apollo', '14', 'astronauts', '.']	0.2073	0.9358	0.2857	30.0
21	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q10800557 has human-readable name ""film actor.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actors were born in Germany? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the author of ""The Pillars of the Earth""?"	Who wrote the book The pillars of the Earth?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . }	"['Who', 'is', 'the', 'author', 'of', '``', 'The', 'Pillars', 'of', 'the', 'Earth', ""''"", '?']"	['Who', 'wrote', 'the', 'book', 'The', 'pillars', 'of', 'the', 'Earth', '?']	0.2015	1.7182	0.375	14.0
22	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q9903 has human-readable name ""Ming dynasty.""
 http://www.wikidata.org/prop/direct/P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Ming dynasty dissolve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P2046 has human-readable name ""area.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the U.S. state with the highest population density?	Which state of the United States of America has the highest density?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1	['What', 'is', 'the', 'U.S.', 'state', 'with', 'the', 'highest', 'population', 'density', '?']	['Which', 'state', 'of', 'the', 'United', 'States', 'of', 'America', 'has', 'the', 'highest', 'density', '?']	0.2244	1.7216	0.4	39.0
23	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q36107> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q36107 has human-readable name ""Muhammad Ali.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Show me the book that Muhammad Ali wrote. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P1427 wd:Q177477 } 
 Where:
 wdt:P1427 has human-readable name ""start point.""
 wd:Q177477 has human-readable name ""Baikonur Cosmodrome.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the start point of Baikonur Cosmodrome?	Which spaceflights were launched from Baikonur?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P1427 wd:Q177477 }	['What', 'is', 'the', 'start', 'point', 'of', 'Baikonur', 'Cosmodrome', '?']	['Which', 'spaceflights', 'were', 'launched', 'from', 'Baikonur', '?']	0.2342	0.6239	0.0	38.0
24	"---- Start Example ---- 
 Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P159>  <http://www.wikidata.org/entity/Q60> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q33506> . ?s1  <http://www.wikidata.org/prop/direct/P1174> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 http://www.wikidata.org/entity/Q60 has human-readable name ""New York City.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q33506 has human-readable name ""museum.""
 http://www.wikidata.org/prop/direct/P1174 has human-readable name ""visitors per year.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which museum in New York has the most visitors? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q158852 ; wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q158852 has human-readable name ""conductor.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which conductors play the trumpet?	Give me a list of all trumpet players that were bandleaders.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q158852 ; wdt:P1303 wd:Q8338 . }	['Which', 'conductors', 'play', 'the', 'trumpet', '?']	['Give', 'me', 'a', 'list', 'of', 'all', 'trumpet', 'players', 'that', 'were', 'bandleaders', '.']	0.0734	0.0788	0.0	45.0
25	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?s WHERE { ?b ps:P793   <http://www.wikidata.org/entity/Q1194369> . ?b pq:P642 <http://www.wikidata.org/entity/Q513> . ?s p:P793 ?b   . } 
 Where:
 ps:P793 has human-readable name ""significant event.""
 http://www.wikidata.org/entity/Q1194369 has human-readable name ""first ascent.""
 pq:P642 has human-readable name ""of.""
 http://www.wikidata.org/entity/Q513 has human-readable name ""Mount Everest.""
 p:P793 has human-readable name ""significant event.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the first to climb Mount Everest? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q829 wdt:P421 ?timezone . ?uri wdt:P31 wd:Q35657 ; wdt:P421 ?timezone . FILTER(?uri != wd:Q829) } 
 Where:
 wd:Q829 has human-readable name ""Utah.""
 wdt:P421 has human-readable name ""located in time zone.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P421 has human-readable name ""located in time zone.""
 wd:Q829 has human-readable name ""Utah.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which U.S. state is located in the same time zone as Utah, but is not Utah itself?	Which U.S. states are in the same timezone as Utah?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q829 wdt:P421 ?timezone . ?uri wdt:P31 wd:Q35657 ; wdt:P421 ?timezone . FILTER(?uri != wd:Q829) }	['In', 'which', 'U.S.', 'state', 'is', 'located', 'in', 'the', 'same', 'time', 'zone', 'as', 'Utah', ',', 'but', 'is', 'not', 'Utah', 'itself', '?']	['Which', 'U.S.', 'states', 'are', 'in', 'the', 'same', 'timezone', 'as', 'Utah', '?']	0.1601	1.2108	0.4138	36.0
27	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51803 wdt:P175 ?uri } 
 Where:
 wd:Q51803 has human-readable name ""Chewbacca.""
 wdt:P175 has human-readable name ""performer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actor played Chewbacca? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q43247 wdt:P40 ?child . ?child wdt:P26 ?uri . } 
 Where:
 wd:Q43247 has human-readable name ""Ingrid Bergman.""
 wdt:P40 has human-readable name ""child.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is Ingrid Bergman's spouse?	Who is the daughter of Ingrid Bergman married to?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q43247 wdt:P40 ?child . ?child wdt:P26 ?uri . }	"['Who', 'is', 'Ingrid', 'Bergman', ""'s"", 'spouse', '?']"	['Who', 'is', 'the', 'daughter', 'of', 'Ingrid', 'Bergman', 'married', 'to', '?']	0.2026	1.3878	0.4286	27.0
29	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?s wdt:P509 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1 
 Where:
 wdt:P509 has human-readable name ""cause of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the most frequent cause of death? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q33506> . ?uri <http://www.wikidata.org/prop/direct/P276> <http://www.wikidata.org/entity/Q84> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q33506 has human-readable name ""museum.""
 http://www.wikidata.org/prop/direct/P276 has human-readable name ""location.""
 http://www.wikidata.org/entity/Q84 has human-readable name ""London.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the distinct URIs of museums located in London?	Show me all museums in London.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q33506> . ?uri <http://www.wikidata.org/prop/direct/P276> <http://www.wikidata.org/entity/Q84> . }	['What', 'are', 'the', 'distinct', 'URIs', 'of', 'museums', 'located', 'in', 'London', '?']	['Show', 'me', 'all', 'museums', 'in', 'London', '.']	0.1904	0.7656	0.25	34.0
31	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q3624078 has human-readable name ""sovereign state.""
 http://www.wikidata.org/prop/direct/P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the largest country in the world? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P54 wd:Q272059 ; wdt:P2048 ?height . } ORDER BY DESC(?height) LIMIT 1 
 Where:
 wdt:P54 has human-readable name ""member of sports team.""
 wd:Q272059 has human-readable name ""Atlanta Falcons.""
 wdt:P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the tallest member of the Atlanta Falcons sports team?	Who is the tallest player of the Atlanta Falcons?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P54 wd:Q272059 ; wdt:P2048 ?height . } ORDER BY DESC(?height) LIMIT 1	['What', 'is', 'the', 'tallest', 'member', 'of', 'the', 'Atlanta', 'Falcons', 'sports', 'team', '?']	['Who', 'is', 'the', 'tallest', 'player', 'of', 'the', 'Atlanta', 'Falcons', '?']	0.317	2.2298	0.5556	18.0
33	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q408804> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q408804 has human-readable name ""borough of New York City.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What are the five boroughs of New York? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q36180 . ?uri wdt:P166 wd:Q37922 . }  
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q36180 has human-readable name ""writer.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q37922 has human-readable name ""Nobel Prize in Literature.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which writers have received the Nobel Prize in Literature?	Give me all writers that won the Nobel Prize in literature.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q36180 . ?uri wdt:P166 wd:Q37922 . } 	['Which', 'writers', 'have', 'received', 'the', 'Nobel', 'Prize', 'in', 'Literature', '?']	['Give', 'me', 'all', 'writers', 'that', 'won', 'the', 'Nobel', 'Prize', 'in', 'literature', '.']	0.2274	1.5581	0.5	24.0
34	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q622188 wdt:P571 ?date . } 
 Where:
 wd:Q622188 has human-readable name ""Hells Angels.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When were the Hells Angels founded? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P2048> ?height .  FILTER(?height > 200)} 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q3665646 has human-readable name ""basketball player.""
 http://www.wikidata.org/prop/direct/P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What basketball players have a height greater than 200?	Show me all basketball players that are higher than 2 meters.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P2048> ?height .  FILTER(?height > 200)}	['What', 'basketball', 'players', 'have', 'a', 'height', 'greater', 'than', '200', '?']	['Show', 'me', 'all', 'basketball', 'players', 'that', 'are', 'higher', 'than', '2', 'meters', '.']	0.1623	0.9348	0.3	30.0
35	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q134041 wdt:P279+ wd:Q40050 . } 
 Where:
 wd:Q134041 has human-readable name ""cola.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q40050 has human-readable name ""drink.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Cola a beverage? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q9202 wdt:P571 ?date . } 
 Where:
 wd:Q9202 has human-readable name ""Statue of Liberty.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was the Statue of Liberty established?	When was the Statue of Liberty built?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q9202 wdt:P571 ?date . }	['When', 'was', 'the', 'Statue', 'of', 'Liberty', 'established', '?']	['When', 'was', 'the', 'Statue', 'of', 'Liberty', 'built', '?']	0.7071	2.625	0.8571	9.0
36	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q48410 has human-readable name ""Richard Gere.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which films did Julia Roberts as well as Richard Gere play? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1204> <http://www.wikidata.org/prop/direct/P47> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q1204 has human-readable name ""Illinois.""
 http://www.wikidata.org/prop/direct/P47 has human-readable name ""shares border with.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which states share a border with Illinois?	Which states border Illinois?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1204> <http://www.wikidata.org/prop/direct/P47> ?uri . }	['Which', 'states', 'share', 'a', 'border', 'with', 'Illinois', '?']	['Which', 'states', 'border', 'Illinois', '?']	0.2943	1.4512	0.7273	13.0
37	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q2001>} 
 Where:
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q2001 has human-readable name ""Stanley Kubrick.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which films did Stanley Kubrick direct? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q49740 wdt:P178 ?uri . } 
 Where:
 wd:Q49740 has human-readable name ""Minecraft.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who developed the game Minecraft?	Who developed Minecraft?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q49740 wdt:P178 ?uri . }	['Who', 'developed', 'the', 'game', 'Minecraft', '?']	['Who', 'developed', 'Minecraft', '?']	0.3131	1.3333	0.75	9.0
38	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . }  
 Where:
 http://www.wikidata.org/entity/Q154216 has human-readable name ""Cat Stevens.""
 http://www.wikidata.org/prop/direct/P1303 has human-readable name ""instrument.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which instruments does Cat Stevens play? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q186924 wdt:P20 ?uri . } 
 Where:
 wd:Q186924 has human-readable name ""Hillel Slovak.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did Hillel Slovak die?	Where did Hillel Slovak die?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q186924 wdt:P20 ?uri . }	['Where', 'did', 'Hillel', 'Slovak', 'die', '?']	['Where', 'did', 'Hillel', 'Slovak', 'die', '?']	1.0	2.585	1.0	0.0
39	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q426173 wdt:P31/wdt:P279* wd:Q8054 . } 
 Where:
 wd:Q426173 has human-readable name ""proinsulin.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q8054 has human-readable name ""protein.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is proinsulin a protein? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q219512 has human-readable name ""Jesse Eisenberg.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the cast members of Jesse Eisenberg?	What movies does Jesse Eisenberg play in?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . }	['Who', 'are', 'the', 'cast', 'members', 'of', 'Jesse', 'Eisenberg', '?']	['What', 'movies', 'does', 'Jesse', 'Eisenberg', 'play', 'in', '?']	0.2073	1.0	0.1333	27.0
40	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q162371 has human-readable name ""Charmed.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the birthdays of all actors of the television show Charmed. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q10843402 ; wdt:P19 wd:Q649 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q10843402 has human-readable name ""swimmer.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q649 has human-readable name ""Moscow.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Give me the URIs of all swimmers born in Moscow.	Give all swimmers that were born in Moscow.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q10843402 ; wdt:P19 wd:Q649 . }	['Give', 'me', 'the', 'URIs', 'of', 'all', 'swimmers', 'born', 'in', 'Moscow', '.']	['Give', 'all', 'swimmers', 'that', 'were', 'born', 'in', 'Moscow', '.']	0.29	2.0172	0.6667	20.0
41	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q465 wdt:P112 ?uri . } 
 Where:
 wd:Q465 has human-readable name ""DBpedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who are the developers of DBpedia? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri  <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q11631> . { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q15180> } UNION { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q159> } } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q11631 has human-readable name ""astronaut.""
 http://www.wikidata.org/prop/direct/P27 has human-readable name ""country of citizenship.""
 http://www.wikidata.org/entity/Q15180 has human-readable name ""Soviet Union.""
 http://www.wikidata.org/prop/direct/P27 has human-readable name ""country of citizenship.""
 http://www.wikidata.org/entity/Q159 has human-readable name ""Russia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which astronauts are citizens of either the Soviet Union or Russia?	Give me all cosmonauts.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri  <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q11631> . { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q15180> } UNION { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q159> } }	['Which', 'astronauts', 'are', 'citizens', 'of', 'either', 'the', 'Soviet', 'Union', 'or', 'Russia', '?']	['Give', 'me', 'all', 'cosmonauts', '.']	0.0	0.0	0.0	56.0
42	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q418 has human-readable name ""telecommunication.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q31 has human-readable name ""Belgium.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which telecommunications organizations are located in Belgium? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159 wd:Q39 . } UNION { ?uri wdt:P159 ?city . ?city wdt:P31 wd:Q70208 } } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q163740 has human-readable name ""nonprofit organization.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q39 has human-readable name ""Switzerland.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q70208 has human-readable name ""municipality of Switzerland.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where are the nonprofit organizations with headquarters in Switzerland located in Switzerland?	Give me all Swiss non-profit organizations.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159 wd:Q39 . } UNION { ?uri wdt:P159 ?city . ?city wdt:P31 wd:Q70208 } }	['Where', 'are', 'the', 'nonprofit', 'organizations', 'with', 'headquarters', 'in', 'Switzerland', 'located', 'in', 'Switzerland', '?']	['Give', 'me', 'all', 'Swiss', 'non-profit', 'organizations', '.']	0.1911	0.216	0.1176	70.0
43	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q5809 wdt:P40 ?uri . } 
 Where:
 wd:Q5809 has human-readable name ""Che Guevara.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Che Guevara have children? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q30461> . ?uri <http://www.wikidata.org/prop/direct/P569> ?date . FILTER(year(?date)=1945) } 
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q30461 has human-readable name ""president.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was the date of birth of presidents who held a position that is a subclass of president in 1945?	Which presidents were born in 1945?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q30461> . ?uri <http://www.wikidata.org/prop/direct/P569> ?date . FILTER(year(?date)=1945) }	['When', 'was', 'the', 'date', 'of', 'birth', 'of', 'presidents', 'who', 'held', 'a', 'position', 'that', 'is', 'a', 'subclass', 'of', 'president', 'in', '1945', '?']	['Which', 'presidents', 'were', 'born', 'in', '1945', '?']	0.1212	0.5347	0.2609	69.0
44	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q5809 wdt:P40 ?uri . } 
 Where:
 wd:Q5809 has human-readable name ""Che Guevara.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Che Guevara have children? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q189080> <http://www.wikidata.org/prop/direct/P136> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q189080 has human-readable name ""Lou Reed.""
 http://www.wikidata.org/prop/direct/P136 has human-readable name ""genre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What genre is Lou Reed associated with?	What kind of music did Lou Reed play?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q189080> <http://www.wikidata.org/prop/direct/P136> ?uri . }	['What', 'genre', 'is', 'Lou', 'Reed', 'associated', 'with', '?']	['What', 'kind', 'of', 'music', 'did', 'Lou', 'Reed', 'play', '?']	0.2065	1.4949	0.4	24.0
45	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?val WHERE {  <http://www.wikidata.org/entity/Q2608065> <http://www.wikidata.org/prop/direct/P2130> ?val } 
 Where:
 http://www.wikidata.org/entity/Q2608065 has human-readable name ""The Lego Movie.""
 http://www.wikidata.org/prop/direct/P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How much did the Lego Movie cost? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q213959> <http://www.wikidata.org/prop/direct/P115> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q213959 has human-readable name ""Boston Red Sox.""
 http://www.wikidata.org/prop/direct/P115 has human-readable name ""home venue.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is the home venue of the Boston Red Sox?	Where do the Red Sox play?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q213959> <http://www.wikidata.org/prop/direct/P115> ?uri }	['Where', 'is', 'the', 'home', 'venue', 'of', 'the', 'Boston', 'Red', 'Sox', '?']	['Where', 'do', 'the', 'Red', 'Sox', 'play', '?']	0.2163	1.2761	0.4	30.0
46	"---- Start Example ---- 
 Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q739> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q34770> .  } 
 Where:
 http://www.wikidata.org/entity/Q739 has human-readable name ""Colombia.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q34770 has human-readable name ""language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many languages are spoken in Colombia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q476028 ; wdt:P118 wd:Q82595 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q476028 has human-readable name ""association football club.""
 wdt:P118 has human-readable name ""league.""
 wd:Q82595 has human-readable name ""Bundesliga.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which association football clubs participate in the Bundesliga league?	Show a list of soccer clubs that play in the Bundesliga.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q476028 ; wdt:P118 wd:Q82595 . }	['Which', 'association', 'football', 'clubs', 'participate', 'in', 'the', 'Bundesliga', 'league', '?']	['Show', 'a', 'list', 'of', 'soccer', 'clubs', 'that', 'play', 'in', 'the', 'Bundesliga', '.']	0.1763	1.2465	0.4	35.0
48	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q983650 wdt:P131+ ?res . ?res wdt:P31 wd:Q35657 . } 
 Where:
 wd:Q983650 has human-readable name ""Fort Knox.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which U.S. state is Fort Knox located? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q12280 has human-readable name ""bridge.""
 wdt:P177 has human-readable name ""crosses.""
 wd:Q1471 has human-readable name ""Seine.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What bridges cross the Seine river?	Which bridges cross the Seine?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . }	['What', 'bridges', 'cross', 'the', 'Seine', 'river', '?']	['Which', 'bridges', 'cross', 'the', 'Seine', '?']	0.4347	1.8464	0.5455	9.0
50	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q37876> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q37876 has human-readable name ""Natalie Portman.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who produced films starring Natalie Portman? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . } 
 Where:
 wdt:P162 has human-readable name ""producer.""
 wd:Q72792 has human-readable name ""Hal Roach.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many films did Hal Roach produce?	How many films did Hal Roach produce?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . }	['How', 'many', 'films', 'did', 'Hal', 'Roach', 'produce', '?']	['How', 'many', 'films', 'did', 'Hal', 'Roach', 'produce', '?']	1.0	3.0	1.0	0.0
51	"---- Start Example ---- 
 Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 . ?uri p:P2044 ?stmnode. ?stmnode psv:P2044 ?valuenode . ?valuenode wikibase:quantityAmount ?elevation . ?valuenode wikibase:quantityUnit ?unit . wd:Q130736 wdt:P2044 ?elevationNangaParbat . FILTER(?unit = wd:Q11573) FILTER (?elevation > ?elevationNangaParbat) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 p:P2044 has human-readable name ""elevation above sea level.""
 psv:P2044 has human-readable name ""psv:P2044.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q130736 has human-readable name ""Nanga Parbat.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which mountains are higher than the Nanga Parbat? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are all the Danish films?	Give me all Danish movies.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . }	['What', 'are', 'all', 'the', 'Danish', 'films', '?']	['Give', 'me', 'all', 'Danish', 'movies', '.']	0.2368	0.7386	0.3636	16.0
52	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q219512 has human-readable name ""Jesse Eisenberg.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What movies does Jesse Eisenberg play in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?s wdt:P509 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1 
 Where:
 wdt:P509 has human-readable name ""cause of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the most common cause of death for individuals in the dataset?	What is the most frequent cause of death?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?s wdt:P509 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1	['What', 'is', 'the', 'most', 'common', 'cause', 'of', 'death', 'for', 'individuals', 'in', 'the', 'dataset', '?']	['What', 'is', 'the', 'most', 'frequent', 'cause', 'of', 'death', '?']	0.2658	1.8114	0.6	38.0
53	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q213959> <http://www.wikidata.org/prop/direct/P115> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q213959 has human-readable name ""Boston Red Sox.""
 http://www.wikidata.org/prop/direct/P115 has human-readable name ""home venue.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where do the Red Sox play? 
 ----End Example ---- 
Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q3665646 ; wdt:P569 ?birthDate ; wdt:P166 ?award . ?award rdfs:label ?awardLabel FILTER (CONTAINS(STR(?awardLabel), ""MVP"") || CONTAINS(STR(?awardLabel), ""Most Valuable Player"")) . FILTER (LANGMATCHES(LANG(?awardLabel), ""EN"" ) ) } ORDER BY DESC(?birthDate) LIMIT 4 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q3665646 has human-readable name ""basketball player.""
 wdt:P569 has human-readable name ""date of birth.""
 wdt:P166 has human-readable name ""award received.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the top 4 basketball players sorted by date of birth who have received the MVP or Most Valuable Player award?	Who are the four youngest MVP basketball players?	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q3665646 ; wdt:P569 ?birthDate ; wdt:P166 ?award . ?award rdfs:label ?awardLabel FILTER (CONTAINS(STR(?awardLabel), ""MVP"") || CONTAINS(STR(?awardLabel), ""Most Valuable Player"")) . FILTER (LANGMATCHES(LANG(?awardLabel), ""EN"" ) ) } ORDER BY DESC(?birthDate) LIMIT 4"	['Who', 'are', 'the', 'top', '4', 'basketball', 'players', 'sorted', 'by', 'date', 'of', 'birth', 'who', 'have', 'received', 'the', 'MVP', 'or', 'Most', 'Valuable', 'Player', 'award', '?']	['Who', 'are', 'the', 'four', 'youngest', 'MVP', 'basketball', 'players', '?']	0.144	0.9648	0.2759	82.0
54	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q989 has human-readable name ""John Paul II.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q19546 has human-readable name ""pope.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which pope succeeded John Paul II? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q1726 has human-readable name ""Munich.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What companies have their headquarters located in Munich?	Give me all companies in Munich.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . }	['What', 'companies', 'have', 'their', 'headquarters', 'located', 'in', 'Munich', '?']	['Give', 'me', 'all', 'companies', 'in', 'Munich', '.']	0.2073	0.9358	0.2857	38.0
55	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { wd:Q1471987 wdt:P571 ?founded . ?res wdt:P39 wd:Q19546 . ?res p:P39 _:a . _:a ps:P39 wd:Q19546 . _:a pq:P580 ?start . _:a pq:P582 ?end . FILTER( ?start <= ?founded && ?founded <= ?end) . } 
 Where:
 wd:Q1471987 has human-readable name ""Vatican Media.""
 wdt:P571 has human-readable name ""inception.""
 wdt:P39 has human-readable name ""position held.""
 wd:Q19546 has human-readable name ""pope.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q19546 has human-readable name ""pope.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the pope that founded the Vatican Television? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?country . ?country wdt:P36 ?uri . } 
 Where:
 wd:Q5451 has human-readable name ""Himalayas.""
 wdt:P17 has human-readable name ""country.""
 wdt:P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the capital of the country where the Himalayas are located?	Give me the capitals of all countries that the Himalayas run through.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?country . ?country wdt:P36 ?uri . }	['What', 'is', 'the', 'capital', 'of', 'the', 'country', 'where', 'the', 'Himalayas', 'are', 'located', '?']	['Give', 'me', 'the', 'capitals', 'of', 'all', 'countries', 'that', 'the', 'Himalayas', 'run', 'through', '.']	0.1903	1.0681	0.2857	28.0
56	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q1163227 wdt:P50 ?res. } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the book Les Piliers de la terre? 
 ----End Example ---- 
Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315484> . } 
 Where:
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q315484 has human-readable name ""Park Chan-wook.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many movies was Park Chan-wook the director of?	How many movies did Park Chan-wook direct?	en	gpt-3.5-turbo	ONE_SHOT	SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315484> . }	['How', 'many', 'movies', 'was', 'Park', 'Chan-wook', 'the', 'director', 'of', '?']	['How', 'many', 'movies', 'did', 'Park', 'Chan-wook', 'direct', '?']	0.2637	1.8	0.625	12.0
57	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?metro wdt:P31 wd:Q5503 ; wdt:P571 ?inception ; wdt:P131 ?uri . } ORDER BY ?inception LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q5503 has human-readable name ""rapid transit.""
 wdt:P571 has human-readable name ""inception.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which city has the oldest running metro? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?lake wdt:P31 wd:Q23397 ; wdt:P17 wd:183 . ?uri wdt:P200 ?lake . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23397 has human-readable name ""lake.""
 wdt:P17 has human-readable name ""country.""
 wdt:P200 has human-readable name ""inflows.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which country has rivers that flow into lakes in it?	Which rivers flow into a German lake?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?lake wdt:P31 wd:Q23397 ; wdt:P17 wd:183 . ?uri wdt:P200 ?lake . }	['Which', 'country', 'has', 'rivers', 'that', 'flow', 'into', 'lakes', 'in', 'it', '?']	['Which', 'rivers', 'flow', 'into', 'a', 'German', 'lake', '?']	0.2163	1.3636	0.4706	27.0
58	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q215380 ; wdt:P495 wd:Q408 ; wdt:P136 wd:Q183862 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q215380 has human-readable name ""musical group.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P136 has human-readable name ""genre.""
 wd:Q183862 has human-readable name ""metalcore.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Australian metalcore bands. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?uri) WHERE { ?uri wdt:P31 wd:Q46970 } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q46970 has human-readable name ""airline.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many airlines are there?	How many airlines are there?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?uri) WHERE { ?uri wdt:P31 wd:Q46970 }	['How', 'many', 'airlines', 'are', 'there', '?']	['How', 'many', 'airlines', 'are', 'there', '?']	1.0	2.585	1.0	0.0
59	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?mass WHERE { ?res wdt:P31 wd:Q61702557 . ?res wdt:P2067 ?mass . } ORDER BY ?mass LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q61702557 has human-readable name ""moon of Jupiter.""
 wdt:P2067 has human-readable name ""mass.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How heavy is Jupiter's lightest moon? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23442 ; wdt:P17 wd:Q17 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23442 has human-readable name ""island.""
 wdt:P17 has human-readable name ""country.""
 wd:Q17 has human-readable name ""Japan.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which islands are located in Japan?	Give me all islands that belong to Japan.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23442 ; wdt:P17 wd:Q17 . }	['Which', 'islands', 'are', 'located', 'in', 'Japan', '?']	['Give', 'me', 'all', 'islands', 'that', 'belong', 'to', 'Japan', '.']	0.178	0.694	0.1429	25.0
60	"---- Start Example ---- 
 Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 p:P2043 has human-readable name ""length.""
 psv:P2043 has human-readable name ""psv:P2043.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wikibase:quantityLowerBound has human-readable name ""wikibase:quantityLowerBound.""
 wikibase:quantityUpperBound has human-readable name ""wikibase:quantityUpperBound.""
 p:P2370 has human-readable name ""conversion to SI unit.""
 psv:P2370 has human-readable name ""psv:P2370.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the longest river in the world? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1010 wdt:P1082 ?uri . } 
 Where:
 wd:Q1010 has human-readable name ""Maribor.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Maribor?	How many inhabitants does Maribor have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1010 wdt:P1082 ?uri . }	['What', 'is', 'the', 'population', 'of', 'Maribor', '?']	['How', 'many', 'inhabitants', 'does', 'Maribor', 'have', '?']	0.2368	0.8021	0.0	28.0
61	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q1951 wdt:P571 ?date . } 
 Where:
 wd:Q1951 has human-readable name ""Alberta.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was Alberta admitted as province? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q178871 wdt:P1029 ?uri } 
 Where:
 wd:Q178871 has human-readable name ""Apollo 14.""
 wdt:P1029 has human-readable name ""crew member(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who were the crew members of Apollo 14?	Give me all Apollo 14 astronauts.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q178871 wdt:P1029 ?uri }	['Who', 'were', 'the', 'crew', 'members', 'of', 'Apollo', '14', '?']	['Give', 'me', 'all', 'Apollo', '14', 'astronauts', '.']	0.1873	0.6239	0.1429	33.0
62	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q5809 wdt:P40 ?uri . } 
 Where:
 wd:Q5809 has human-readable name ""Che Guevara.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Che Guevara have children? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P1128 ?num . FILTER(?num > 1000000) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many businesses have more than 1 million employees?	Which companies have more than 1 million employees?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P1128 ?num . FILTER(?num > 1000000) }	['How', 'many', 'businesses', 'have', 'more', 'than', '1', 'million', 'employees', '?']	['Which', 'companies', 'have', 'more', 'than', '1', 'million', 'employees', '?']	0.6389	2.2189	0.7059	16.0
63	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q16397 wdt:P40 ?children . ?children wdt:P40 ?uri . } 
 Where:
 wd:Q16397 has human-readable name ""Bruce Lee.""
 wdt:P40 has human-readable name ""child.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the grandchildren of Bruce Lee. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315087> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q315087 has human-readable name ""Garry Marshall.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the actors in films directed by Garry Marshall and starring Julia Roberts?	In which films directed by Garry Marshall was Julia Roberts starring?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315087> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 	['Who', 'are', 'the', 'actors', 'in', 'films', 'directed', 'by', 'Garry', 'Marshall', 'and', 'starring', 'Julia', 'Roberts', '?']	['In', 'which', 'films', 'directed', 'by', 'Garry', 'Marshall', 'was', 'Julia', 'Roberts', 'starring', '?']	0.3013	2.151	0.48	38.0
64	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?mass WHERE { ?res wdt:P31 wd:Q61702557 . ?res wdt:P2067 ?mass . } ORDER BY ?mass LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q61702557 has human-readable name ""moon of Jupiter.""
 wdt:P2067 has human-readable name ""mass.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How heavy is Jupiter's lightest moon? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q476028> . ?uri <http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q9448> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q476028 has human-readable name ""association football club.""
 http://www.wikidata.org/prop/direct/P118 has human-readable name ""league.""
 http://www.wikidata.org/entity/Q9448 has human-readable name ""Premier League.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which association football clubs play in the Premier League?	Give me all soccer clubs in the Premier League.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q476028> . ?uri <http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q9448> . }	['Which', 'association', 'football', 'clubs', 'play', 'in', 'the', 'Premier', 'League', '?']	['Give', 'me', 'all', 'soccer', 'clubs', 'in', 'the', 'Premier', 'League', '.']	0.2778	1.661	0.4444	27.0
65	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q844587 wdt:P263 ?uri } 
 Where:
 wd:Q844587 has human-readable name ""Prime Minister of Spain.""
 wdt:P263 has human-readable name ""official residence.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is the residence of the prime minister of Spain? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q35600> <http://www.wikidata.org/prop/direct/P610> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q35600 has human-readable name ""Ural Mountains.""
 http://www.wikidata.org/prop/direct/P610 has human-readable name ""highest point.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest point in the Ural Mountains?	What is the highest place of the Urals?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q35600> <http://www.wikidata.org/prop/direct/P610> ?uri . }	['What', 'is', 'the', 'highest', 'point', 'in', 'the', 'Ural', 'Mountains', '?']	['What', 'is', 'the', 'highest', 'place', 'of', 'the', 'Urals', '?']	0.2907	1.8131	0.5333	15.0
66	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q989 has human-readable name ""John Paul II.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q19546 has human-readable name ""pope.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which pope succeeded John Paul II? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1214 wdt:P6 ?uri . } 
 Where:
 wd:Q1214 has human-readable name ""Wyoming.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of Wyoming?	Who is the governor of Wyoming?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1214 wdt:P6 ?uri . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'Wyoming', '?']	['Who', 'is', 'the', 'governor', 'of', 'Wyoming', '?']	0.3666	1.8716	0.7692	12.0
67	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q183 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?inhabitants . } ORDER BY ?inhabitants LIMIt 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q183 has human-readable name ""Germany.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the smallest city by area in Germany? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q243 wdt:P84 ?x . ?x wdt:P69 ?uri } 
 Where:
 wd:Q243 has human-readable name ""Eiffel Tower.""
 wdt:P84 has human-readable name ""architect.""
 wdt:P69 has human-readable name ""educated at.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which architect designed the Eiffel Tower and where did they study?	Where did the architect of the Eiffel Tower study?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q243 wdt:P84 ?x . ?x wdt:P69 ?uri }	['Which', 'architect', 'designed', 'the', 'Eiffel', 'Tower', 'and', 'where', 'did', 'they', 'study', '?']	['Where', 'did', 'the', 'architect', 'of', 'the', 'Eiffel', 'Tower', 'study', '?']	0.2374	1.9454	0.5263	36.0
68	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279 wd:Q373822 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q373822 has human-readable name ""eating disorder.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all types of eating disorders. 
 ----End Example ---- 
Having a SPARQL query: PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q9259 ; wdt:P575 ?date . BIND(xsd:integer(YEAR(?date)) as ?year) . BIND(xsd:integer(YEAR(NOW())) as ?currentYear) . FILTER(?year < ?currentYear && ?year < (?currentYear - 2)) . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q9259 has human-readable name ""UNESCO World Heritage Site.""
 wdt:P575 has human-readable name ""time of discovery or invention.""
 xsd:integer has human-readable name ""integer.""
 xsd:integer has human-readable name ""integer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When were UNESCO World Heritage Sites discovered more than 2 years ago?	Give me all world heritage sites designated within the past two years.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q9259 ; wdt:P575 ?date . BIND(xsd:integer(YEAR(?date)) as ?year) . BIND(xsd:integer(YEAR(NOW())) as ?currentYear) . FILTER(?year < ?currentYear && ?year < (?currentYear - 2)) . }	['When', 'were', 'UNESCO', 'World', 'Heritage', 'Sites', 'discovered', 'more', 'than', '2', 'years', 'ago', '?']	['Give', 'me', 'all', 'world', 'heritage', 'sites', 'designated', 'within', 'the', 'past', 'two', 'years', '.']	0.1911	0.2846	0.0833	41.0
69	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q162371 has human-readable name ""Charmed.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the birthdays of all actors of the television show Charmed. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q90 ; wdt:P569 ?birthDate . BIND(YEAR(?birthDate) as ?birthYear) . FILTER(?birthYear > 1950) } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q90 has human-readable name ""Paris.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the birthdates of actors born after 1950 in Paris?	Give me all actors who were born in Paris after 1950.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q90 ; wdt:P569 ?birthDate . BIND(YEAR(?birthDate) as ?birthYear) . FILTER(?birthYear > 1950) }	['What', 'are', 'the', 'birthdates', 'of', 'actors', 'born', 'after', '1950', 'in', 'Paris', '?']	['Give', 'me', 'all', 'actors', 'who', 'were', 'born', 'in', 'Paris', 'after', '1950', '.']	0.2593	1.7925	0.3636	43.0
70	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri wdt:P31 wd:Q15149663 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q15149663 has human-readable name ""state of Mexico.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many states are in Mexico? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q34851> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q151973> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q34851 has human-readable name ""Elizabeth Taylor.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q151973 has human-readable name ""Richard Burton.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which cast members have appeared with both Elizabeth Taylor and Richard Burton?	Which movies star both Liz Taylor and Richard Burton?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q34851> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q151973> . }	['Which', 'cast', 'members', 'have', 'appeared', 'with', 'both', 'Elizabeth', 'Taylor', 'and', 'Richard', 'Burton', '?']	['Which', 'movies', 'star', 'both', 'Liz', 'Taylor', 'and', 'Richard', 'Burton', '?']	0.3146	1.7887	0.5714	32.0
71	"---- Start Example ---- 
 Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; rdfs:label ?label . FILTER(CONTAINS(?label, ""Baldwin""))} 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors called Baldwin. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159|wdt:P17 wd:Q408 . } UNION { ?uri wdt:P159|wdt:P17 ?city . ?city wdt:P159 wd:Q408 } } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q163740 has human-readable name ""nonprofit organization.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q408 has human-readable name ""Australia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where are the headquarters locations of nonprofit organizations in Australia or with a headquarters location in Australia?	Give me all Australian nonprofit organizations.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159|wdt:P17 wd:Q408 . } UNION { ?uri wdt:P159|wdt:P17 ?city . ?city wdt:P159 wd:Q408 } }	['Where', 'are', 'the', 'headquarters', 'locations', 'of', 'nonprofit', 'organizations', 'in', 'Australia', 'or', 'with', 'a', 'headquarters', 'location', 'in', 'Australia', '?']	['Give', 'me', 'all', 'Australian', 'nonprofit', 'organizations', '.']	0.1387	0.3119	0.1905	87.0
72	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q186924 wdt:P20 ?uri . } 
 Where:
 wd:Q186924 has human-readable name ""Hillel Slovak.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where did Hillel Slovak die? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q989 has human-readable name ""John Paul II.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q19546 has human-readable name ""pope.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who replaced John Paul II as pope?	Which pope succeeded John Paul II?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri } 	['Who', 'replaced', 'John', 'Paul', 'II', 'as', 'pope', '?']	['Which', 'pope', 'succeeded', 'John', 'Paul', 'II', '?']	0.2724	1.7546	0.3077	21.0
74	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri }  
 Where:
 wd:Q91 has human-readable name ""Abraham Lincoln.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where did Abraham Lincoln die? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P39 wd:Q473984 . ?uri p:P39 ?statement . ?statement pq:P580 ?startDate ; pq:P582 ?endDate . FILTER(YEAR(?startDate) <= 1978 && YEAR(?endDate) >= 1978) . } 
 Where:
 wdt:P39 has human-readable name ""position held.""
 wd:Q473984 has human-readable name ""President of Pakistan.""
 p:P39 has human-readable name ""position held.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was the President of Pakistan in 1978?	Who was president of Pakistan in 1978?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P39 wd:Q473984 . ?uri p:P39 ?statement . ?statement pq:P580 ?startDate ; pq:P582 ?endDate . FILTER(YEAR(?startDate) <= 1978 && YEAR(?endDate) >= 1978) . }	['When', 'was', 'the', 'President', 'of', 'Pakistan', 'in', '1978', '?']	['Who', 'was', 'president', 'of', 'Pakistan', 'in', '1978', '?']	0.4671	2.0	0.6667	7.0
75	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P162 wd:Q8877 ; wdt:P31/wdt:P279* wd:Q11424 ; wdt:P2130 ?cost . FILTER(?cost > 80000000)} 
 Where:
 wdt:P162 has human-readable name ""producer.""
 wd:Q8877 has human-readable name ""Steven Spielberg.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all films produced by Steven Spielberg with a budget of at least $80 million. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q243278> <http://www.wikidata.org/prop/direct/P127> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q243278 has human-readable name ""Rolls-Royce.""
 http://www.wikidata.org/prop/direct/P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who owns the Rolls-Royce?	Who is the owner of Rolls-Royce?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q243278> <http://www.wikidata.org/prop/direct/P127> ?uri . }	['Who', 'owns', 'the', 'Rolls-Royce', '?']	['Who', 'is', 'the', 'owner', 'of', 'Rolls-Royce', '?']	0.1897	1.3934	0.6	12.0
76	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q95 wdt:P1128 ?uri . } 
 Where:
 wd:Q95 has human-readable name ""Google.""
 wdt:P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many employees does Google have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q33506 ; wdt:P131 wd:Q90 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q33506 has human-readable name ""museum.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q90 has human-readable name ""Paris.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which administrative territorial entity is the museum located in Paris?	How many museums does Paris have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q33506 ; wdt:P131 wd:Q90 . }	['In', 'which', 'administrative', 'territorial', 'entity', 'is', 'the', 'museum', 'located', 'in', 'Paris', '?']	['How', 'many', 'museums', 'does', 'Paris', 'have', '?']	0.229	0.4679	0.0	56.0
77	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1339 wdt:P19 ?uri . } 
 Where:
 wd:Q1339 has human-readable name ""Johann Sebastian Bach.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where was Bach born? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q9696 wdt:P20 ?uri . } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did John F. Kennedy die?	Where was JFK assassinated?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q9696 wdt:P20 ?uri . }	['Where', 'did', 'John', 'F.', 'Kennedy', 'die', '?']	['Where', 'was', 'JFK', 'assassinated', '?']	0.2368	0.6634	0.2	19.0
78	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . } 
 Where:
 wd:Q40984 has human-readable name ""Skype.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who developed Skype? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q4970706> . }  
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q4970706 has human-readable name ""Federal Chancellor of Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals have held the position of Federal Chancellor of Germany?	Give me all federal chancellors of Germany.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q4970706> . } 	['Which', 'individuals', 'have', 'held', 'the', 'position', 'of', 'Federal', 'Chancellor', 'of', 'Germany', '?']	['Give', 'me', 'all', 'federal', 'chancellors', 'of', 'Germany', '.']	0.1657	0.5	0.1176	40.0
80	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P162> <http://www.wikidata.org/entity/Q72792> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 http://www.wikidata.org/entity/Q72792 has human-readable name ""Hal Roach.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all films produced by Hal Roach. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?beerType { wd:Q44 wd:Q15075508 } ?uri wdt:P31 ?beerType ; wdt:P17 wd:Q27 . } 
 Where:
 wd:Q44 has human-readable name ""beer.""
 wd:Q15075508 has human-readable name ""beer brand.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P17 has human-readable name ""country.""
 wd:Q27 has human-readable name ""Republic of Ireland.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are all the beers and beer brands produced in the Republic of Ireland?	Which beer originated in Ireland?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?beerType { wd:Q44 wd:Q15075508 } ?uri wdt:P31 ?beerType ; wdt:P17 wd:Q27 . }	['What', 'are', 'all', 'the', 'beers', 'and', 'beer', 'brands', 'produced', 'in', 'the', 'Republic', 'of', 'Ireland', '?']	['Which', 'beer', 'originated', 'in', 'Ireland', '?']	0.1788	0.6893	0.3333	50.0
81	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q37876> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q37876 has human-readable name ""Natalie Portman.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who produced films starring Natalie Portman? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?uri . } 
 Where:
 wd:Q5451 has human-readable name ""Himalayas.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which country are the Himalayas located?	To which countries does the Himalayan mountain system extend?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?uri . }	['In', 'which', 'country', 'are', 'the', 'Himalayas', 'located', '?']	['To', 'which', 'countries', 'does', 'the', 'Himalayan', 'mountain', 'system', 'extend', '?']	0.2031	1.0098	0.25	26.0
82	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q2685 has human-readable name ""Arnold Schwarzenegger.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Arnold Schwarzenegger attend a university? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q10800557 has human-readable name ""film actor.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Was there a film actor born in Germany?	Which actors were born in Germany?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } }	['Was', 'there', 'a', 'film', 'actor', 'born', 'in', 'Germany', '?']	['Which', 'actors', 'were', 'born', 'in', 'Germany', '?']	0.2985	1.2477	0.4286	17.0
84	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q30 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the largest city in america? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?film)) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the most prolific film producer?	Who produced the most films?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?film)) LIMIT 1	['Who', 'is', 'the', 'most', 'prolific', 'film', 'producer', '?']	['Who', 'produced', 'the', 'most', 'films', '?']	0.234	1.2925	0.5	26.0
85	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q476028 ; wdt:P118 wd:Q82595 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q476028 has human-readable name ""association football club.""
 wdt:P118 has human-readable name ""league.""
 wd:Q82595 has human-readable name ""Bundesliga.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Show a list of soccer clubs that play in the Bundesliga. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q95 wdt:P1128 ?uri . } 
 Where:
 wd:Q95 has human-readable name ""Google.""
 wdt:P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Show a list of employees working at Google.	How many employees does Google have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q95 wdt:P1128 ?uri . }	['Show', 'a', 'list', 'of', 'employees', 'working', 'at', 'Google', '.']	['How', 'many', 'employees', 'does', 'Google', 'have', '?']	0.2342	0.6239	0.2857	26.0
86	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q190679 wdt:P170 ?uri . } 
 Where:
 wd:Q190679 has human-readable name ""Captain America.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created the comic Captain America? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q64 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q64 has human-readable name ""Berlin.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where were the actors born in Berlin?	Give me all actors who were born in Berlin.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q64 . }	['Where', 'were', 'the', 'actors', 'born', 'in', 'Berlin', '?']	['Give', 'me', 'all', 'actors', 'who', 'were', 'born', 'in', 'Berlin', '.']	0.2122	1.683	0.375	20.0
87	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?s1 WHERE {   ?s1  <http://www.wikidata.org/prop/direct/P27>  <http://www.wikidata.org/entity/Q34> .   ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3546255> .  } 
 Where:
 http://www.wikidata.org/prop/direct/P27 has human-readable name ""country of citizenship.""
 http://www.wikidata.org/entity/Q34 has human-readable name ""Sweden.""
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q3546255 has human-readable name ""oceanographer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Swedish oceanographers. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111135> <http://www.wikidata.org/prop/direct/P170> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q111135 has human-readable name ""Goofy.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who created Goofy?	Who created Goofy?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111135> <http://www.wikidata.org/prop/direct/P170> ?uri . }	['Who', 'created', 'Goofy', '?']	['Who', 'created', 'Goofy', '?']	1.0	0.0	1.0	0.0
88	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q30461> . ?uri <http://www.wikidata.org/prop/direct/P569> ?date . FILTER(year(?date)=1945) } 
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q30461 has human-readable name ""president.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which presidents were born in 1945? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { { wd:Q1318118 wdt:P361 ?uri . } UNION { VALUES ?albumType { wd:Q482994 wd:Q208569 } ?uri wdt:P31|wdt:P7937 ?albumType ; wdt:P658 wd:Q1318118 . }} 
 Where:
 wd:Q1318118 has human-readable name ""Last Christmas.""
 wdt:P361 has human-readable name ""part of.""
 wd:Q482994 has human-readable name ""album.""
 wd:Q208569 has human-readable name ""studio album.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P7937 has human-readable name ""form of creative work.""
 wdt:P658 has human-readable name ""tracklist.""
 wd:Q1318118 has human-readable name ""Last Christmas.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What albums are part of or have a tracklist for ""Last Christmas"" and are either studio albums or albums?"	Which music albums contain the song Last Christmas?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { { wd:Q1318118 wdt:P361 ?uri . } UNION { VALUES ?albumType { wd:Q482994 wd:Q208569 } ?uri wdt:P31|wdt:P7937 ?albumType ; wdt:P658 wd:Q1318118 . }}	"['What', 'albums', 'are', 'part', 'of', 'or', 'have', 'a', 'tracklist', 'for', '``', 'Last', 'Christmas', ""''"", 'and', 'are', 'either', 'studio', 'albums', 'or', 'albums', '?']"	['Which', 'music', 'albums', 'contain', 'the', 'song', 'Last', 'Christmas', '?']	0.1509	0.5764	0.0833	77.0
89	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q418 has human-readable name ""telecommunication.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q31 has human-readable name ""Belgium.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which telecommunications organizations are located in Belgium? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q1951 wdt:P571 ?date . } 
 Where:
 wd:Q1951 has human-readable name ""Alberta.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did Alberta come into existence?	When was Alberta admitted as province?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q1951 wdt:P571 ?date . }	['When', 'did', 'Alberta', 'come', 'into', 'existence', '?']	['When', 'was', 'Alberta', 'admitted', 'as', 'province', '?']	0.2621	1.2032	0.3333	18.0
90	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7366 ; wdt:P577 ?date ; wdt:P175 wd:Q1225 . BIND(YEAR(?date) as ?year) . FILTER(?year >= 1980 && ?year <= 1990) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7366 has human-readable name ""song.""
 wdt:P577 has human-readable name ""publication date.""
 wdt:P175 has human-readable name ""performer.""
 wd:Q1225 has human-readable name ""Bruce Springsteen.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Show me all songs from Bruce Springsteen released between 1980 and 1990. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P361 wd:Q207329 } 
 Where:
 wdt:P361 has human-readable name ""part of.""
 wd:Q207329 has human-readable name ""Soyuz programme.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many entities are part of the Soyuz programme?	How many missions does the Soyuz programme have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P361 wd:Q207329 }	['How', 'many', 'entities', 'are', 'part', 'of', 'the', 'Soyuz', 'programme', '?']	['How', 'many', 'missions', 'does', 'the', 'Soyuz', 'programme', 'have', '?']	0.2637	1.902	0.4706	22.0
91	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q12206942 wdt:P40 wd:Q51746 . } 
 Where:
 wd:Q12206942 has human-readable name ""Darth Vader.""
 wdt:P40 has human-readable name ""child.""
 wd:Q51746 has human-readable name ""Luke Skywalker.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Darth Vader Luke’s father? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?type wdt:P279* wd:Q15416 . ?uri wdt:P161 wd:Q485310 . ?uri wdt:P31 ?type . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q15416 has human-readable name ""television program.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q485310 has human-readable name ""Neil Patrick Harris.""
 wdt:P31 has human-readable name ""instance of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is a cast member of a television program in which Neil Patrick Harris appeared?	Give me all the TV shows with Neil Patrick Harris.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?type wdt:P279* wd:Q15416 . ?uri wdt:P161 wd:Q485310 . ?uri wdt:P31 ?type . }	['Who', 'is', 'a', 'cast', 'member', 'of', 'a', 'television', 'program', 'in', 'which', 'Neil', 'Patrick', 'Harris', 'appeared', '?']	['Give', 'me', 'all', 'the', 'TV', 'shows', 'with', 'Neil', 'Patrick', 'Harris', '.']	0.1389	0.6486	0.25	49.0
92	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q211> <http://www.wikidata.org/prop/P463> ?membership . ?membership <http://www.wikidata.org/prop/statement/P463> <http://www.wikidata.org/entity/Q458> . ?membership <http://www.wikidata.org/prop/qualifier/P580> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q211 has human-readable name ""Latvia.""
 http://www.wikidata.org/prop/P463 has human-readable name ""member of.""
 http://www.wikidata.org/prop/statement/P463 has human-readable name ""member of.""
 http://www.wikidata.org/entity/Q458 has human-readable name ""European Union.""
 http://www.wikidata.org/prop/qualifier/P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did Latvia join the EU? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q622188 wdt:P571 ?date . } 
 Where:
 wd:Q622188 has human-readable name ""Hells Angels.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was Hells Angels founded?	When were the Hells Angels founded?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q622188 wdt:P571 ?date . }	['When', 'was', 'Hells', 'Angels', 'founded', '?']	['When', 'were', 'the', 'Hells', 'Angels', 'founded', '?']	0.4548	2.1164	0.7273	7.0
93	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q14169302> <http://www.wikidata.org/prop/direct/P527> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q14169302 has human-readable name ""chocolate chip cookie.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is in a chocolate chip cookie? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q312 wdt:P2295 ?uri . } 
 Where:
 wd:Q312 has human-readable name ""Apple.""
 wdt:P2295 has human-readable name ""net profit.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the net profit of an Apple?	What is the net income of Apple?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q312 wdt:P2295 ?uri . }	['What', 'is', 'the', 'net', 'profit', 'of', 'an', 'Apple', '?']	['What', 'is', 'the', 'net', 'income', 'of', 'Apple', '?']	0.3689	2.3333	0.8	9.0
94	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q159> <http://www.wikidata.org/prop/P122> ?q . ?q <http://www.wikidata.org/prop/statement/P122> ?uri . FILTER NOT EXISTS { ?q <http://www.wikidata.org/prop/qualifier/P582> ?x }}  
 Where:
 http://www.wikidata.org/entity/Q159 has human-readable name ""Russia.""
 http://www.wikidata.org/prop/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/statement/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What form of government does Russia have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q1401522 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q1401522 has human-readable name ""public holidays in Sweden.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the public holidays in Sweden?	Give me all Swedish holidays.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q1401522 . }	['What', 'are', 'the', 'public', 'holidays', 'in', 'Sweden', '?']	['Give', 'me', 'all', 'Swedish', 'holidays', '.']	0.1982	0.3231	0.1667	26.0
95	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?res wdt:P39 wd:Q55375123 . } 
 Where:
 wdt:P39 has human-readable name ""position held.""
 wd:Q55375123 has human-readable name ""King of Rome.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List the seven kings of Rome. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q154946 wdt:P119 ?uri . } 
 Where:
 wd:Q154946 has human-readable name ""Juliana of the Netherlands.""
 wdt:P119 has human-readable name ""place of burial.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was Juliana of the Netherlands buried?	In which city was the former Dutch queen Juliana buried?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q154946 wdt:P119 ?uri . }	['Where', 'was', 'Juliana', 'of', 'the', 'Netherlands', 'buried', '?']	['In', 'which', 'city', 'was', 'the', 'former', 'Dutch', 'queen', 'Juliana', 'buried', '?']	0.1701	1.4099	0.3529	36.0
96	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P102 wd:Q29552 . } 
 Where:
 wd:Q76 has human-readable name ""Barack Obama.""
 wdt:P102 has human-readable name ""member of political party.""
 wd:Q29552 has human-readable name ""Democratic Party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Barack Obama a democrat? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q2743 ; wdt:P86 wd:Q152505 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q2743 has human-readable name ""musical.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q152505 has human-readable name ""Leonard Bernstein.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is there a distinct musical that Leonard Bernstein composed?	List all the musicals with music by Leonard Bernstein.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q2743 ; wdt:P86 wd:Q152505 . }	['Is', 'there', 'a', 'distinct', 'musical', 'that', 'Leonard', 'Bernstein', 'composed', '?']	['List', 'all', 'the', 'musicals', 'with', 'music', 'by', 'Leonard', 'Bernstein', '.']	0.1792	0.6644	0.2222	36.0
97	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q380 wdt:P127 ?res . }  
 Where:
 wd:Q380 has human-readable name ""Meta Platforms.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Facebook? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4830453 ; wdt:P452 wd:Q39809 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P452 has human-readable name ""industry.""
 wd:Q39809 has human-readable name ""marketing.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What businesses are in the marketing industry?	Give me all companies in the advertising industry.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4830453 ; wdt:P452 wd:Q39809 . }	['What', 'businesses', 'are', 'in', 'the', 'marketing', 'industry', '?']	['Give', 'me', 'all', 'companies', 'in', 'the', 'advertising', 'industry', '.']	0.1922	1.1212	0.2667	25.0
99	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q131436 has human-readable name ""board game.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all boardgames by GMT. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1203 wdt:P157 ?uri . } 
 Where:
 wd:Q1203 has human-readable name ""John Lennon.""
 wdt:P157 has human-readable name ""killed by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who killed John Lennon?	Who killed John Lennon?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1203 wdt:P157 ?uri . }	['Who', 'killed', 'John', 'Lennon', '?']	['Who', 'killed', 'John', 'Lennon', '?']	1.0	2.3219	1.0	0.0
100	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q1726 has human-readable name ""Munich.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all companies in Munich. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>  <http://www.wikidata.org/entity/Q406> . } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q36180 has human-readable name ""writer.""
 http://www.wikidata.org/prop/direct/P69 has human-readable name ""educated at.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/entity/Q406 has human-readable name ""Istanbul.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Give me all writers who are educated at institutions located in Istanbul.	Which writers studied in Istanbul?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>  <http://www.wikidata.org/entity/Q406> . }	['Give', 'me', 'all', 'writers', 'who', 'are', 'educated', 'at', 'institutions', 'located', 'in', 'Istanbul', '.']	['Which', 'writers', 'studied', 'in', 'Istanbul', '?']	0.1771	0.5965	0.2353	46.0
101	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P2046 has human-readable name ""area.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which state of the USA has the highest population density? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q215380 ; wdt:P495 wd:Q408 ; wdt:P136 wd:Q183862 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q215380 has human-readable name ""musical group.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P136 has human-readable name ""genre.""
 wd:Q183862 has human-readable name ""metalcore.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What musical group from Australia plays metalcore music?	Give me all Australian metalcore bands.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q215380 ; wdt:P495 wd:Q408 ; wdt:P136 wd:Q183862 . }	['What', 'musical', 'group', 'from', 'Australia', 'plays', 'metalcore', 'music', '?']	['Give', 'me', 'all', 'Australian', 'metalcore', 'bands', '.']	0.1969	0.3119	0.1429	31.0
102	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>  <http://www.wikidata.org/entity/Q406> . } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q36180 has human-readable name ""writer.""
 http://www.wikidata.org/prop/direct/P69 has human-readable name ""educated at.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/entity/Q406 has human-readable name ""Istanbul.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which writers studied in Istanbul? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P38> <http://www.wikidata.org/entity/Q4916>   . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 http://www.wikidata.org/entity/Q4916 has human-readable name ""euro.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What countries use the Euro currency?	Which countries adopted the Euro?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P38> <http://www.wikidata.org/entity/Q4916>   . }	['What', 'countries', 'use', 'the', 'Euro', 'currency', '?']	['Which', 'countries', 'adopted', 'the', 'Euro', '?']	0.2473	1.4771	0.3636	18.0
103	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q692 wdt:P570 ?uri . } 
 Where:
 wd:Q692 has human-readable name ""William Shakespeare.""
 wdt:P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was the death of Shakespeare? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279 wd:Q373822 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q373822 has human-readable name ""eating disorder.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the subclasses of eating disorders?	Give me all types of eating disorders.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279 wd:Q373822 . }	['What', 'are', 'the', 'subclasses', 'of', 'eating', 'disorders', '?']	['Give', 'me', 'all', 'types', 'of', 'eating', 'disorders', '.']	0.2398	1.125	0.2857	18.0
104	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q158852 ; wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q158852 has human-readable name ""conductor.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all trumpet players that were bandleaders. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q93284 wdt:P172 wd:Q7325 . } 
 Where:
 wd:Q93284 has human-readable name ""Marc Chagall.""
 wdt:P172 has human-readable name ""ethnic group.""
 wd:Q7325 has human-readable name ""Jewish people.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Marc Chagall a member of the Jewish people ethnic group?	Was Marc Chagall a jew?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q93284 wdt:P172 wd:Q7325 . }	['Is', 'Marc', 'Chagall', 'a', 'member', 'of', 'the', 'Jewish', 'people', 'ethnic', 'group', '?']	['Was', 'Marc', 'Chagall', 'a', 'jew', '?']	0.1865	0.8617	0.375	40.0
105	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159|wdt:P17 wd:Q408 . } UNION { ?uri wdt:P159|wdt:P17 ?city . ?city wdt:P159 wd:Q408 } } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q163740 has human-readable name ""nonprofit organization.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q408 has human-readable name ""Australia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Australian nonprofit organizations. 
 ----End Example ---- 
Having a SPARQL query: PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?value WHERE { wd:Q83459 p:P1352 ?statement . ?statement pq:P459 wd:Q180825 ; ps:P1352 ?value . } ORDER BY DESC(?value) LIMIT 1 
 Where:
 wd:Q83459 has human-readable name ""Brazil national football team.""
 p:P1352 has human-readable name ""ranking.""
 pq:P459 has human-readable name ""determination method.""
 wd:Q180825 has human-readable name ""FIFA World Rankings.""
 ps:P1352 has human-readable name ""ranking.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the latest FIFA World Rankings ranking for the Brazil national football team determined by FIFA World Rankings?	What was Brazil's lowest rank in the FIFA World Ranking?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?value WHERE { wd:Q83459 p:P1352 ?statement . ?statement pq:P459 wd:Q180825 ; ps:P1352 ?value . } ORDER BY DESC(?value) LIMIT 1	['What', 'is', 'the', 'latest', 'FIFA', 'World', 'Rankings', 'ranking', 'for', 'the', 'Brazil', 'national', 'football', 'team', 'determined', 'by', 'FIFA', 'World', 'Rankings', '?']	"['What', 'was', 'Brazil', ""'s"", 'lowest', 'rank', 'in', 'the', 'FIFA', 'World', 'Ranking', '?']"	0.1742	1.0755	0.3077	76.0
106	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q55> <http://www.wikidata.org/prop/direct/P35> ?uri . ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q2045066> . } 
 Where:
 http://www.wikidata.org/entity/Q55 has human-readable name ""Netherlands.""
 http://www.wikidata.org/prop/direct/P35 has human-readable name ""head of state.""
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q2045066 has human-readable name ""King of the Netherlands.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the king of the Netherlands? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q38111 has human-readable name ""Leonardo DiCaprio.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many films does Leonardo DiCaprio appear in?	How many films did Leonardo DiCaprio star in?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . }	['How', 'many', 'films', 'does', 'Leonardo', 'DiCaprio', 'appear', 'in', '?']	['How', 'many', 'films', 'did', 'Leonardo', 'DiCaprio', 'star', 'in', '?']	0.3203	2.4655	0.75	7.0
107	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P17 has human-readable name ""country.""
 wd:Q38 has human-readable name ""Italy.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the highest mountain in Italy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q7416 wdt:P106 wd:Q593644 . } 
 Where:
 wd:Q7416 has human-readable name ""Margaret Thatcher.""
 wdt:P106 has human-readable name ""occupation.""
 wd:Q593644 has human-readable name ""chemist.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Margaret Thatcher a chemist?	Was Margaret Thatcher a chemist?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q7416 wdt:P106 wd:Q593644 . }	['Is', 'Margaret', 'Thatcher', 'a', 'chemist', '?']	['Was', 'Margaret', 'Thatcher', 'a', 'chemist', '?']	0.7598	2.1541	0.8	2.0
108	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P113 ?uri . } 
 Where:
 wd:Q51747 has human-readable name ""Air China.""
 wdt:P113 has human-readable name ""airline hub.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which airports does Air China serve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q829 wdt:P421 ?timezone . ?uri wdt:P31 wd:Q35657 ; wdt:P421 ?timezone . FILTER(?uri != wd:Q829) } 
 Where:
 wd:Q829 has human-readable name ""Utah.""
 wdt:P421 has human-readable name ""located in time zone.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P421 has human-readable name ""located in time zone.""
 wd:Q829 has human-readable name ""Utah.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which U.S. states are located in the same time zone as Utah, excluding Utah itself?	Which U.S. states are in the same time zone as Utah?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q829 wdt:P421 ?timezone . ?uri wdt:P31 wd:Q35657 ; wdt:P421 ?timezone . FILTER(?uri != wd:Q829) }	['Which', 'U.S.', 'states', 'are', 'located', 'in', 'the', 'same', 'time', 'zone', 'as', 'Utah', ',', 'excluding', 'Utah', 'itself', '?']	['Which', 'U.S.', 'states', 'are', 'in', 'the', 'same', 'time', 'zone', 'as', 'Utah', '?']	0.5072	2.5306	0.7857	31.0
109	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q211> <http://www.wikidata.org/prop/P463> ?membership . ?membership <http://www.wikidata.org/prop/statement/P463> <http://www.wikidata.org/entity/Q458> . ?membership <http://www.wikidata.org/prop/qualifier/P580> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q211 has human-readable name ""Latvia.""
 http://www.wikidata.org/prop/P463 has human-readable name ""member of.""
 http://www.wikidata.org/prop/statement/P463 has human-readable name ""member of.""
 http://www.wikidata.org/entity/Q458 has human-readable name ""European Union.""
 http://www.wikidata.org/prop/qualifier/P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did Latvia join the EU? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q72653> . }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q72653 has human-readable name ""Danielle Steel.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the author of books categorized as ""book"" with author ""Danielle Steel""?"	Give me all books written by Danielle Steel.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q72653> . } 	"['Who', 'is', 'the', 'author', 'of', 'books', 'categorized', 'as', '``', 'book', ""''"", 'with', 'author', '``', 'Danielle', 'Steel', ""''"", '?']"	['Give', 'me', 'all', 'books', 'written', 'by', 'Danielle', 'Steel', '.']	0.1535	0.5283	0.1	48.0
110	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7075 ; wdt:P571 ?date . FILTER (YEAR(?date) < 1400 ) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7075 has human-readable name ""library.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all libraries established earlier than 1400. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> ?language . } GROUP BY ?uri ORDER BY DESC(COUNT(?language)) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the country that has the highest count of official languages?	Which country has the most official languages?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> ?language . } GROUP BY ?uri ORDER BY DESC(COUNT(?language)) LIMIT 1	['What', 'is', 'the', 'country', 'that', 'has', 'the', 'highest', 'count', 'of', 'official', 'languages', '?']	['Which', 'country', 'has', 'the', 'most', 'official', 'languages', '?']	0.2146	1.3846	0.5556	26.0
112	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q159> <http://www.wikidata.org/prop/P122> ?q . ?q <http://www.wikidata.org/prop/statement/P122> ?uri . FILTER NOT EXISTS { ?q <http://www.wikidata.org/prop/qualifier/P582> ?x }}  
 Where:
 http://www.wikidata.org/entity/Q159 has human-readable name ""Russia.""
 http://www.wikidata.org/prop/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/statement/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What form of government does Russia have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51803 wdt:P175 ?uri } 
 Where:
 wd:Q51803 has human-readable name ""Chewbacca.""
 wdt:P175 has human-readable name ""performer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the performer of Chewbacca?	Which actor played Chewbacca?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51803 wdt:P175 ?uri }	['Who', 'is', 'the', 'performer', 'of', 'Chewbacca', '?']	['Which', 'actor', 'played', 'Chewbacca', '?']	0.208	0.6634	0.2	17.0
113	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:279* wd:Q515 ; wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which city has the most inhabitants? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7075 ; wdt:P571 ?date . FILTER (YEAR(?date) < 1400 ) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7075 has human-readable name ""library.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was the oldest library founded?	Give me all libraries established earlier than 1400.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7075 ; wdt:P571 ?date . FILTER (YEAR(?date) < 1400 ) }	['When', 'was', 'the', 'oldest', 'library', 'founded', '?']	['Give', 'me', 'all', 'libraries', 'established', 'earlier', 'than', '1400', '.']	0.0	0.0	0.0	40.0
114	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q62408 wdt:P131 ?uri . } 
 Where:
 wd:Q62408 has human-readable name ""Palace of Westminster.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the location of the Houses of Parliament? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q9143 ; wdt:P737 wd:Q42478 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q9143 has human-readable name ""programming language.""
 wdt:P737 has human-readable name ""influenced by.""
 wd:Q42478 has human-readable name ""Perl.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which programming languages were influenced by Perl?	Which programming languages were influenced by Perl?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q9143 ; wdt:P737 wd:Q42478 . }	['Which', 'programming', 'languages', 'were', 'influenced', 'by', 'Perl', '?']	['Which', 'programming', 'languages', 'were', 'influenced', 'by', 'Perl', '?']	1.0	3.0	1.0	0.0
115	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q48410 has human-readable name ""Richard Gere.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which films did Julia Roberts as well as Richard Gere play? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q130018 has human-readable name ""Denali.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is Denali located in terms of administrative territorial entity?	In which U.S. state is Mount McKinley located?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?uri}	['Where', 'is', 'Denali', 'located', 'in', 'terms', 'of', 'administrative', 'territorial', 'entity', '?']	['In', 'which', 'U.S.', 'state', 'is', 'Mount', 'McKinley', 'located', '?']	0.2554	0.8645	0.1053	54.0
116	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q30461> . ?uri <http://www.wikidata.org/prop/direct/P569> ?date . FILTER(year(?date)=1945) } 
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q30461 has human-readable name ""president.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which presidents were born in 1945? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P114 wd:Q212282 . } 
 Where:
 wdt:P114 has human-readable name ""airline alliance.""
 wd:Q212282 has human-readable name ""SkyTeam.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which airlines are part of the SkyTeam alliance?	What airlines are part of the SkyTeam alliance?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P114 wd:Q212282 . }	['Which', 'airlines', 'are', 'part', 'of', 'the', 'SkyTeam', 'alliance', '?']	['What', 'airlines', 'are', 'part', 'of', 'the', 'SkyTeam', 'alliance', '?']	0.8633	2.8177	0.875	3.0
118	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?year WHERE { wd:Q241665 wdt:P569 ?date . BIND(YEAR(?date) as ?year) } 
 Where:
 wd:Q241665 has human-readable name ""Rachel Stevens.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which year was Rachel Stevens born? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q82955 ; wdt:P140 wd:Q33203 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q82955 has human-readable name ""politician.""
 wdt:P140 has human-readable name ""religion or worldview.""
 wd:Q33203 has human-readable name ""Methodism.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which politicians have a religion or worldview of Methodism?	Give me all Methodist politicians.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q82955 ; wdt:P140 wd:Q33203 . }	['Which', 'politicians', 'have', 'a', 'religion', 'or', 'worldview', 'of', 'Methodism', '?']	['Give', 'me', 'all', 'Methodist', 'politicians', '.']	0.1955	0.2585	0.1429	48.0
119	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q7725310 has human-readable name ""series of creative works.""
 wdt:P170 has human-readable name ""creator.""
 wd:Q8704 has human-readable name ""Walt Disney.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which television shows were created by Walt Disney? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q658375 wdt:P50 ?author . ?uri wdt:P50 ?author . FILTER(?uri != wd:Q658375) } 
 Where:
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 wdt:P50 has human-readable name ""author.""
 wdt:P50 has human-readable name ""author.""
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which other works were authored by the same author as ""The Fault in Our Stars""?"	What other books have been written by the author of The Fault in Our Stars?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q658375 wdt:P50 ?author . ?uri wdt:P50 ?author . FILTER(?uri != wd:Q658375) }	"['Which', 'other', 'works', 'were', 'authored', 'by', 'the', 'same', 'author', 'as', '``', 'The', 'Fault', 'in', 'Our', 'Stars', ""''"", '?']"	['What', 'other', 'books', 'have', 'been', 'written', 'by', 'the', 'author', 'of', 'The', 'Fault', 'in', 'Our', 'Stars', '?']	0.2528	2.2222	0.4667	27.0
120	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q36> <http://www.wikidata.org/prop/direct/P1082> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q36 has human-readable name ""Poland.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many people live in Poland? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest mountain in terms of elevation above sea level?	What is the highest mountain?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1	['What', 'is', 'the', 'highest', 'mountain', 'in', 'terms', 'of', 'elevation', 'above', 'sea', 'level', '?']	['What', 'is', 'the', 'highest', 'mountain', '?']	0.3027	1.1931	0.4706	38.0
121	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q168383 wdt:P127 ?uri . } 
 Where:
 wd:Q168383 has human-readable name ""Universal Pictures.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Universal Studios? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q49757> . ?s2  <http://www.wikidata.org/prop/direct/P50>  ?s1 . ?s2  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q571> .  } GROUP BY ?s1 ORDER BY DESC(COUNT(?s2)) OFFSET 0 LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q49757 has human-readable name ""poet.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the poet who is also an author and has the most books?	Which poet wrote the most books?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q49757> . ?s2  <http://www.wikidata.org/prop/direct/P50>  ?s1 . ?s2  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q571> .  } GROUP BY ?s1 ORDER BY DESC(COUNT(?s2)) OFFSET 0 LIMIT 1	['Who', 'is', 'the', 'poet', 'who', 'is', 'also', 'an', 'author', 'and', 'has', 'the', 'most', 'books', '?']	['Which', 'poet', 'wrote', 'the', 'most', 'books', '?']	0.174	0.9358	0.4444	32.0
122	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12495 wdt:P1101 ?bkFloors . ?uri wdt:P1101 ?otherFloors . FILTER (?otherFloors > ?bkFloors) } ORDER BY ?otherFloors LIMIT 1 
 Where:
 wd:Q12495 has human-readable name ""Burj Khalifa.""
 wdt:P1101 has human-readable name ""floors above ground.""
 wdt:P1101 has human-readable name ""floors above ground.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which building after the Burj Khalifa has the most floors? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2005 wdt:P737 ?uri . } 
 Where:
 wd:Q2005 has human-readable name ""JavaScript.""
 wdt:P737 has human-readable name ""influenced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which programming language was influenced by JavaScript?	Which programming languages influenced Javascript?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2005 wdt:P737 ?uri . }	['Which', 'programming', 'language', 'was', 'influenced', 'by', 'JavaScript', '?']	['Which', 'programming', 'languages', 'influenced', 'Javascript', '?']	0.234	1.2925	0.5	7.0
123	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q60 wdt:P6 ?uri . } 
 Where:
 wd:Q60 has human-readable name ""New York City.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of New York City? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P106 wd:Q639669 . ?x wdt:P31 wd:Q571 ; wdt:P50 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q639669 has human-readable name ""musician.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q571 has human-readable name ""book.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the musician with the most authored books?	Which musician wrote the most books?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P106 wd:Q639669 . ?x wdt:P31 wd:Q571 ; wdt:P50 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1	['Who', 'is', 'the', 'musician', 'with', 'the', 'most', 'authored', 'books', '?']	['Which', 'musician', 'wrote', 'the', 'most', 'books', '?']	0.2679	1.4037	0.5714	18.0
124	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q928 wdt:P37 ?uri . } 
 Where:
 wd:Q928 has human-readable name ""Philippines.""
 wdt:P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What are the official languages of the Philippines? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P57 wd:Q43203 ; wdt:P161 wd:Q43203 . } 
 Where:
 wdt:P57 has human-readable name ""director.""
 wd:Q43203 has human-readable name ""Clint Eastwood.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q43203 has human-readable name ""Clint Eastwood.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who directed and starred in movies with Clint Eastwood?	Which films starring Clint Eastwood did he direct himself?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P57 wd:Q43203 ; wdt:P161 wd:Q43203 . }	['Who', 'directed', 'and', 'starred', 'in', 'movies', 'with', 'Clint', 'Eastwood', '?']	['Which', 'films', 'starring', 'Clint', 'Eastwood', 'did', 'he', 'direct', 'himself', '?']	0.1983	0.9966	0.1111	43.0
125	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub wdt:P31/wdt:P279* wd:Q9143 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q9143 has human-readable name ""programming language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many programming languages are there? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P178 ?com ; wdt:P31* wd:Q17155032 . ?type wdt:P279* wd:Q4830453 . ?com wdt:P31 ?type ; wdt:P740 wd:Q99 . } 
 Where:
 wdt:P178 has human-readable name ""developer.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q17155032 has human-readable name ""software category.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P740 has human-readable name ""location of formation.""
 wd:Q99 has human-readable name ""California.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which software categories developed in California are related to business?	Which software has been developed by organizations founded in California?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P178 ?com ; wdt:P31* wd:Q17155032 . ?type wdt:P279* wd:Q4830453 . ?com wdt:P31 ?type ; wdt:P740 wd:Q99 . }	['Which', 'software', 'categories', 'developed', 'in', 'California', 'are', 'related', 'to', 'business', '?']	['Which', 'software', 'has', 'been', 'developed', 'by', 'organizations', 'founded', 'in', 'California', '?']	0.2692	1.887	0.4	39.0
126	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q11817> <http://www.wikidata.org/prop/direct/P607> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q11817 has human-readable name ""Andrew Jackson.""
 http://www.wikidata.org/prop/direct/P607 has human-readable name ""conflict.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Was U.S. president Jackson involved in a war? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . }  
 Where:
 http://www.wikidata.org/entity/Q154216 has human-readable name ""Cat Stevens.""
 http://www.wikidata.org/prop/direct/P1303 has human-readable name ""instrument.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What type of instruments does musician Cat Stevens play?	Which instruments does Cat Stevens play?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . } 	['What', 'type', 'of', 'instruments', 'does', 'musician', 'Cat', 'Stevens', 'play', '?']	['Which', 'instruments', 'does', 'Cat', 'Stevens', 'play', '?']	0.3124	1.6844	0.6667	19.0
127	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q3624078 has human-readable name ""sovereign state.""
 http://www.wikidata.org/prop/direct/P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the largest country in the world? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { ?uri wdt:P114 wd:Q189709 . } 
 Where:
 wdt:P114 has human-readable name ""airline alliance.""
 wd:Q189709 has human-readable name ""Star Alliance.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many airlines are part of the Star Alliance?	How many airlines are members of the Star Alliance?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { ?uri wdt:P114 wd:Q189709 . }	['How', 'many', 'airlines', 'are', 'part', 'of', 'the', 'Star', 'Alliance', '?']	['How', 'many', 'airlines', 'are', 'members', 'of', 'the', 'Star', 'Alliance', '?']	0.658	2.9897	0.8889	6.0
128	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q85 wdt:P1082 ?val . } 
 Where:
 wd:Q85 has human-readable name ""Cairo.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the population of Cairo? 
 ----End Example ---- 
Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; rdfs:label ?label . FILTER(CONTAINS(?label, ""Baldwin""))} 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What actors with the last name ""Baldwin"" are listed in the database?"	Give me all actors called Baldwin.	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; rdfs:label ?label . FILTER(CONTAINS(?label, ""Baldwin""))}"	"['What', 'actors', 'with', 'the', 'last', 'name', '``', 'Baldwin', ""''"", 'are', 'listed', 'in', 'the', 'database', '?']"	['Give', 'me', 'all', 'actors', 'called', 'Baldwin', '.']	0.2239	0.3743	0.1176	54.0
129	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q730> <http://www.wikidata.org/prop/direct/P37> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q730 has human-readable name ""Suriname.""
 http://www.wikidata.org/prop/direct/P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the official language of Suriname? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q11679 wdt:P50 ?uri . } 
 Where:
 wd:Q11679 has human-readable name ""The Hunger Games.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the author of The Hunger Games?	Who wrote The Hunger Games?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q11679 wdt:P50 ?uri . }	['Who', 'is', 'the', 'author', 'of', 'The', 'Hunger', 'Games', '?']	['Who', 'wrote', 'The', 'Hunger', 'Games', '?']	0.3156	1.4361	0.6154	14.0
130	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q25173 wdt:P729 ?date . } 
 Where:
 wd:Q25173 has human-readable name ""Titanic.""
 wdt:P729 has human-readable name ""service entry.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was the Titanic completed? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?label WHERE { wd:Q59150527 wdt:P527 ?uri . ?uri wdt:P577 ?date . ?uri wdt:P264 ?label . } ORDER BY ?date LIMIT 1 
 Where:
 wd:Q59150527 has human-readable name ""Elvis Presley's albums in chronological order.""
 wdt:P527 has human-readable name ""has part(s).""
 wdt:P577 has human-readable name ""publication date.""
 wdt:P264 has human-readable name ""record label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the publication date of the first album in chronological order of Elvis Presley's albums?	For which label did Elvis record his first album?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?label WHERE { wd:Q59150527 wdt:P527 ?uri . ?uri wdt:P577 ?date . ?uri wdt:P264 ?label . } ORDER BY ?date LIMIT 1	"['What', 'is', 'the', 'publication', 'date', 'of', 'the', 'first', 'album', 'in', 'chronological', 'order', 'of', 'Elvis', 'Presley', ""'s"", 'albums', '?']"	['For', 'which', 'label', 'did', 'Elvis', 'record', 'his', 'first', 'album', '?']	0.165	0.7382	0.087	67.0
131	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q82955 ; wdt:P140 wd:Q33203 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q82955 has human-readable name ""politician.""
 wdt:P140 has human-readable name ""religion or worldview.""
 wd:Q33203 has human-readable name ""Methodism.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Methodist politicians. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q166262 wdt:P161 wd:Q45772 } 
 Where:
 wd:Q166262 has human-readable name ""Batman Begins.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q45772 has human-readable name ""Christian Bale.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Is Christian Bale a cast member in the film ""Batman Begins""?"	Is Christian Bale starring in Batman Begins?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q166262 wdt:P161 wd:Q45772 }	"['Is', 'Christian', 'Bale', 'a', 'cast', 'member', 'in', 'the', 'film', '``', 'Batman', 'Begins', ""''"", '?']"	['Is', 'Christian', 'Bale', 'starring', 'in', 'Batman', 'Begins', '?']	0.2105	1.5	0.4444	20.0
132	"---- Start Example ---- 
 Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q739> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q34770> .  } 
 Where:
 http://www.wikidata.org/entity/Q739 has human-readable name ""Colombia.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q34770 has human-readable name ""language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many languages are spoken in Colombia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q844587 wdt:P263 ?uri } 
 Where:
 wd:Q844587 has human-readable name ""Prime Minister of Spain.""
 wdt:P263 has human-readable name ""official residence.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	 What is the official residence of the Prime Minister of Spain?	Where is the residence of the prime minister of Spain?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q844587 wdt:P263 ?uri }	['What', 'is', 'the', 'official', 'residence', 'of', 'the', 'Prime', 'Minister', 'of', 'Spain', '?']	['Where', 'is', 'the', 'residence', 'of', 'the', 'prime', 'minister', 'of', 'Spain', '?']	0.3316	2.1548	0.5882	15.0
133	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q34969 wdt:P40 ?uri . } 
 Where:
 wd:Q34969 has human-readable name ""Benjamin Franklin.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many children did Benjamin Franklin have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 . ?film wdt:P161 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT(?film))) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the actor who appeared in the most films as a cast member?	Which actor was casted in the most movies?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 . ?film wdt:P161 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT(?film))) LIMIT 1	['Who', 'is', 'the', 'actor', 'who', 'appeared', 'in', 'the', 'most', 'films', 'as', 'a', 'cast', 'member', '?']	['Which', 'actor', 'was', 'casted', 'in', 'the', 'most', 'movies', '?']	0.1658	1.0566	0.381	34.0
134	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q656071 wdt:P527 ?uri . } 
 Where:
 wd:Q656071 has human-readable name ""carrot cake.""
 wdt:P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which ingredients do I need for carrot cake? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> ?language . } GROUP BY ?uri HAVING(COUNT(?language)>2) 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which countries have more than two official languages?	Which countries have more than two official languages?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> ?language . } GROUP BY ?uri HAVING(COUNT(?language)>2)	['Which', 'countries', 'have', 'more', 'than', 'two', 'official', 'languages', '?']	['Which', 'countries', 'have', 'more', 'than', 'two', 'official', 'languages', '?']	1.0	3.1699	1.0	0.0
136	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q162371 has human-readable name ""Charmed.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the birthdays of all actors of the television show Charmed. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7366 ; wdt:P577 ?date ; wdt:P175 wd:Q1225 . BIND(YEAR(?date) as ?year) . FILTER(?year >= 1980 && ?year <= 1990) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7366 has human-readable name ""song.""
 wdt:P577 has human-readable name ""publication date.""
 wdt:P175 has human-readable name ""performer.""
 wd:Q1225 has human-readable name ""Bruce Springsteen.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the songs performed by Bruce Springsteen between 1980 and 1990?	Show me all songs from Bruce Springsteen released between 1980 and 1990.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7366 ; wdt:P577 ?date ; wdt:P175 wd:Q1225 . BIND(YEAR(?date) as ?year) . FILTER(?year >= 1980 && ?year <= 1990) }	['What', 'are', 'the', 'songs', 'performed', 'by', 'Bruce', 'Springsteen', 'between', '1980', 'and', '1990', '?']	['Show', 'me', 'all', 'songs', 'from', 'Bruce', 'Springsteen', 'released', 'between', '1980', 'and', '1990', '.']	0.239	1.9925	0.5	27.0
137	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { ?res p:P39 _:a . _:a ps:P39 wd:Q22575092 . :a pq:P580 ?start . } ORDER BY DESC(?start) LIMIT 1 
 Where:
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q22575092 has human-readable name ""Federal Minister of Finance.""
 pq:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the current federal minister of finance in Germany? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q5398426>  . { ?uri <http://www.wikidata.org/prop/direct/P170> <http://www.wikidata.org/entity/Q25014> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P170>/<http://www.wikidata.org/prop/direct/P527> <http://www.wikidata.org/entity/Q25014> . }  } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q5398426 has human-readable name ""television series.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who created the television series with John Cleese as the creator or as part of it?	Which television shows were created by John Cleese?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q5398426>  . { ?uri <http://www.wikidata.org/prop/direct/P170> <http://www.wikidata.org/entity/Q25014> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P170>/<http://www.wikidata.org/prop/direct/P527> <http://www.wikidata.org/entity/Q25014> . }  }	['Who', 'created', 'the', 'television', 'series', 'with', 'John', 'Cleese', 'as', 'the', 'creator', 'or', 'as', 'part', 'of', 'it', '?']	['Which', 'television', 'shows', 'were', 'created', 'by', 'John', 'Cleese', '?']	0.1789	0.9323	0.1818	52.0
138	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1339 wdt:P19 ?uri . } 
 Where:
 wd:Q1339 has human-readable name ""Johann Sebastian Bach.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where was Bach born? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q211> <http://www.wikidata.org/prop/P463> ?membership . ?membership <http://www.wikidata.org/prop/statement/P463> <http://www.wikidata.org/entity/Q458> . ?membership <http://www.wikidata.org/prop/qualifier/P580> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q211 has human-readable name ""Latvia.""
 http://www.wikidata.org/prop/P463 has human-readable name ""member of.""
 http://www.wikidata.org/prop/statement/P463 has human-readable name ""member of.""
 http://www.wikidata.org/entity/Q458 has human-readable name ""European Union.""
 http://www.wikidata.org/prop/qualifier/P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did Latvia become a member of the European Union?	When did Latvia join the EU?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q211> <http://www.wikidata.org/prop/P463> ?membership . ?membership <http://www.wikidata.org/prop/statement/P463> <http://www.wikidata.org/entity/Q458> . ?membership <http://www.wikidata.org/prop/qualifier/P580> ?date . }	['When', 'did', 'Latvia', 'become', 'a', 'member', 'of', 'the', 'European', 'Union', '?']	['When', 'did', 'Latvia', 'join', 'the', 'EU', '?']	0.2111	1.2761	0.5	29.0
139	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q30971 wdt:P36 ?capital . ?capital wdt:P6 ?uri . } 
 Where:
 wd:Q30971 has human-readable name ""French Polynesia.""
 wdt:P36 has human-readable name ""capital.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of the capital of French Polynesia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q937857 ; wdt:P19 ?birthPlace . ?birthPlace wdt:P17 wd:Q233 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q937857 has human-readable name ""association football player.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q233 has human-readable name ""Malta.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was the place of birth of association football players from Malta?	Which soccer players were born on Malta?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q937857 ; wdt:P19 ?birthPlace . ?birthPlace wdt:P17 wd:Q233 . }	['Where', 'was', 'the', 'place', 'of', 'birth', 'of', 'association', 'football', 'players', 'from', 'Malta', '?']	['Which', 'soccer', 'players', 'were', 'born', 'on', 'Malta', '?']	0.1771	0.6923	0.2222	49.0
140	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE {  <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> <http://www.wikidata.org/entity/Q8682>} 
 Where:
 http://www.wikidata.org/entity/Q142794 has human-readable name ""Neymar.""
 http://www.wikidata.org/prop/direct/P54 has human-readable name ""member of sports team.""
 http://www.wikidata.org/entity/Q8682 has human-readable name ""Real Madrid CF.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does Neymar play for Real Madrid? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q82955 ; wdt:P69 wd:Q49088 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q82955 has human-readable name ""politician.""
 wdt:P69 has human-readable name ""educated at.""
 wd:Q49088 has human-readable name ""Columbia University.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many politicians are educated at Columbia University?	How many politicians graduated from Columbia University?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q82955 ; wdt:P69 wd:Q49088 . }	['How', 'many', 'politicians', 'are', 'educated', 'at', 'Columbia', 'University', '?']	['How', 'many', 'politicians', 'graduated', 'from', 'Columbia', 'University', '?']	0.3666	2.0	0.6667	9.0
141	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P20>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P856>  ?o2 .  }   
 Where:
 http://www.wikidata.org/entity/Q91 has human-readable name ""Abraham Lincoln.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 http://www.wikidata.org/prop/direct/P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does Abraham Lincoln's death place have a website? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q162371 has human-readable name ""Charmed.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"When was the date of birth of the cast members of the TV show ""Charmed""?"	Give me the birthdays of all actors of the television show Charmed.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . }	"['When', 'was', 'the', 'date', 'of', 'birth', 'of', 'the', 'cast', 'members', 'of', 'the', 'TV', 'show', '``', 'Charmed', ""''"", '?']"	['Give', 'me', 'the', 'birthdays', 'of', 'all', 'actors', 'of', 'the', 'television', 'show', 'Charmed', '.']	0.1826	1.0701	0.2857	43.0
142	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q58483083 ; wdt:P86 wd:Q2808 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q58483083 has human-readable name ""dramatico-musical work.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q2808 has human-readable name ""Elton John.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all the musicals with music by Elton John. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q43229 has human-readable name ""organization.""
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q418 has human-readable name ""telecommunication.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q31 has human-readable name ""Belgium.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which organizations in Belgium are involved in the telecommunication industry?	Which telecommunications organizations are located in Belgium?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . }	['Which', 'organizations', 'in', 'Belgium', 'are', 'involved', 'in', 'the', 'telecommunication', 'industry', '?']	['Which', 'telecommunications', 'organizations', 'are', 'located', 'in', 'Belgium', '?']	0.2264	1.6364	0.5	53.0
143	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q171684> <http://www.wikidata.org/prop/direct/P119> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q171684 has human-readable name ""Syngman Rhee.""
 http://www.wikidata.org/prop/direct/P119 has human-readable name ""place of burial.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is Syngman Rhee buried? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23397 ; wdt:P17 wd:Q35 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23397 has human-readable name ""lake.""
 wdt:P17 has human-readable name ""country.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the lakes located in Denmark?	Give me a list of all lakes in Denmark.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23397 ; wdt:P17 wd:Q35 . }	['What', 'are', 'the', 'lakes', 'located', 'in', 'Denmark', '?']	['Give', 'me', 'a', 'list', 'of', 'all', 'lakes', 'in', 'Denmark', '.']	0.1696	1.0098	0.25	22.0
144	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q130018 has human-readable name ""Denali.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which U.S. state is Mount McKinley located? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { wd:Q43874 wdt:P40 ?uri . } 
 Where:
 wd:Q43874 has human-readable name ""Eddie Murphy.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many children does Eddie Murphy have?	How many children does Eddie Murphy have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { wd:Q43874 wdt:P40 ?uri . }	['How', 'many', 'children', 'does', 'Eddie', 'Murphy', 'have', '?']	['How', 'many', 'children', 'does', 'Eddie', 'Murphy', 'have', '?']	1.0	3.0	1.0	0.0
145	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q4977246>  <http://www.wikidata.org/prop/direct/P509>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q4977246 has human-readable name ""Bruce Carver.""
 http://www.wikidata.org/prop/direct/P509 has human-readable name ""cause of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What did Bruce Carver die from? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?type wdt:P279* wd:Q176483 . ?uri wdt:P149 ?type ; wdt:P7959 wd:Q67479626 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q176483 has human-readable name ""Gothic architecture.""
 wdt:P149 has human-readable name ""architectural style.""
 wdt:P7959 has human-readable name ""historic county.""
 wd:Q67479626 has human-readable name ""Kent.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What historic counties in Kent exhibit architectural styles that are subclasses of Gothic architecture?	Show me all English Gothic buildings in Kent.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?type wdt:P279* wd:Q176483 . ?uri wdt:P149 ?type ; wdt:P7959 wd:Q67479626 . }	['What', 'historic', 'counties', 'in', 'Kent', 'exhibit', 'architectural', 'styles', 'that', 'are', 'subclasses', 'of', 'Gothic', 'architecture', '?']	['Show', 'me', 'all', 'English', 'Gothic', 'buildings', 'in', 'Kent', '.']	0.1664	0.634	0.1818	83.0
147	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P463 wd:Q7256860 . } 
 Where:
 wdt:P463 has human-readable name ""member of.""
 wd:Q7256860 has human-readable name ""The Prodigy.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all members of Prodigy. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q861690 . } 
 Where:
 wdt:P38 has human-readable name ""currency.""
 wd:Q861690 has human-readable name ""West African CFA franc.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the currency used in West African CFA franc?	In which countries can you pay using the West African CFA franc?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q861690 . }	['What', 'is', 'the', 'currency', 'used', 'in', 'West', 'African', 'CFA', 'franc', '?']	['In', 'which', 'countries', 'can', 'you', 'pay', 'using', 'the', 'West', 'African', 'CFA', 'franc', '?']	0.3062	1.7944	0.4545	29.0
148	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q186924 wdt:P20 ?uri . } 
 Where:
 wd:Q186924 has human-readable name ""Hillel Slovak.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where did Hillel Slovak die? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q1445650 . ?uri wdt:P31 ?type . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q1445650 has human-readable name ""holiday.""
 wdt:P31 has human-readable name ""instance of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are instances of holidays?	Which holidays are celebrated around the world?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q1445650 . ?uri wdt:P31 ?type . }	['What', 'are', 'instances', 'of', 'holidays', '?']	['Which', 'holidays', 'are', 'celebrated', 'around', 'the', 'world', '?']	0.1882	1.0582	0.1667	33.0
149	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q30461> . ?uri <http://www.wikidata.org/prop/direct/P569> ?date . FILTER(year(?date)=1945) } 
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q30461 has human-readable name ""president.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which presidents were born in 1945? 
 ----End Example ---- 
Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 p:P2043 has human-readable name ""length.""
 psv:P2043 has human-readable name ""psv:P2043.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wikibase:quantityLowerBound has human-readable name ""wikibase:quantityLowerBound.""
 wikibase:quantityUpperBound has human-readable name ""wikibase:quantityUpperBound.""
 p:P2370 has human-readable name ""conversion to SI unit.""
 psv:P2370 has human-readable name ""psv:P2370.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the length of the longest river in meters?	What is the longest river?	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1"	['What', 'is', 'the', 'length', 'of', 'the', 'longest', 'river', 'in', 'meters', '?']	['What', 'is', 'the', 'longest', 'river', '?']	0.3125	1.41	0.5714	24.0
150	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q38280 FILTER(?uri != wd:Q38280) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all breeds of the German Shepherd dog. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?sub WHERE { ?sub wdt:P571 ?year . ?sub wdt:P31/wdt:P131* wd:Q43229 . FILTER(year(?year) = 1930) . }  
 Where:
 wdt:P571 has human-readable name ""inception.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q43229 has human-readable name ""organization.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What organizations were established in 1930 and located in administrative territorial entities?	Which organizations were founded in 1930?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?sub WHERE { ?sub wdt:P571 ?year . ?sub wdt:P31/wdt:P131* wd:Q43229 . FILTER(year(?year) = 1930) . } 	['What', 'organizations', 'were', 'established', 'in', '1930', 'and', 'located', 'in', 'administrative', 'territorial', 'entities', '?']	['Which', 'organizations', 'were', 'founded', 'in', '1930', '?']	0.2393	1.0798	0.3529	63.0
151	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q6386177> <http://www.wikidata.org/prop/direct/P17> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q6386177 has human-readable name ""Limerick Lake.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which country is the Limerick Lake? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?name WHERE { wd:Q567 wdt:P1477 ?name . }  
 Where:
 wd:Q567 has human-readable name ""Angela Merkel.""
 wdt:P1477 has human-readable name ""birth name.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is Angela Merkel's birth name?	What is the birth name of Angela Merkel?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?name WHERE { wd:Q567 wdt:P1477 ?name . } 	"['What', 'is', 'Angela', 'Merkel', ""'s"", 'birth', 'name', '?']"	['What', 'is', 'the', 'birth', 'name', 'of', 'Angela', 'Merkel', '?']	0.3126	2.6161	0.4286	27.0
152	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1564644> <http://www.wikidata.org/prop/direct/P527> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q1564644 has human-readable name ""Foundation series.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Show me all books in Asimov's Foundation series. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?o1 WHERE { wd:Q37079 wdt:P26 ?o1 . } 
 Where:
 wd:Q37079 has human-readable name ""Tom Cruise.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is Tom Cruise married to?	Who has Tom Cruise been married to?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?o1 WHERE { wd:Q37079 wdt:P26 ?o1 . }	['Who', 'is', 'Tom', 'Cruise', 'married', 'to', '?']	['Who', 'has', 'Tom', 'Cruise', 'been', 'married', 'to', '?']	0.3053	2.3852	0.7692	7.0
153	"---- Start Example ---- 
 Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE {    ?s1  ?p1  <http://www.wikidata.org/entity/Q56008> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> .  ?s1  <http://www.wikidata.org/prop/direct/P2769> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/entity/Q56008 has human-readable name ""Tim Burton.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P2769 has human-readable name ""budget.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which of Tim Burton's films had the highest budget? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P176 wd:Q152815 . ?res wdt:P279*/wdt:P31 wd:Q15142889 . }  
 Where:
 wdt:P176 has human-readable name ""manufacturer.""
 wd:Q152815 has human-readable name ""Heckler & Koch.""
 wdt:P279 has human-readable name ""subclass of.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q15142889 has human-readable name ""weapon family.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which weapon families are manufactured by Heckler & Koch?	Which weapons did Heckler & Koch develop?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P176 wd:Q152815 . ?res wdt:P279*/wdt:P31 wd:Q15142889 . } 	['Which', 'weapon', 'families', 'are', 'manufactured', 'by', 'Heckler', '&', 'Koch', '?']	['Which', 'weapons', 'did', 'Heckler', '&', 'Koch', 'develop', '?']	0.2276	1.5	0.375	34.0
154	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7416 wdt:P40 ?uri . } 
 Where:
 wd:Q7416 has human-readable name ""Margaret Thatcher.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List the children of Margaret Thatcher. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q183 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?inhabitants . } ORDER BY ?inhabitants LIMIt 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q183 has human-readable name ""Germany.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the most populous city in Germany?	What is the smallest city by area in Germany?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q183 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?inhabitants . } ORDER BY ?inhabitants LIMIt 1	['What', 'is', 'the', 'most', 'populous', 'city', 'in', 'Germany', '?']	['What', 'is', 'the', 'smallest', 'city', 'by', 'area', 'in', 'Germany', '?']	0.3409	2.4656	0.7059	17.0
155	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the highest mountain? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?mayor wdt:P31 wd:Q5 . ?mayor p:P39 _:a ._:a ps:P39 wd:Q43185970 ._:a pq:P580 ?date . ?mayor wdt:P102 ?res . } ORDER BY DESC(?date) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q5 has human-readable name ""human.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q43185970 has human-readable name ""Mayor of Lisbon.""
 pq:P580 has human-readable name ""start time.""
 wdt:P102 has human-readable name ""member of political party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was the most recent member of a political party to serve as Mayor of Lisbon?	What is the ruling party in Lisbon?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?mayor wdt:P31 wd:Q5 . ?mayor p:P39 _:a ._:a ps:P39 wd:Q43185970 ._:a pq:P580 ?date . ?mayor wdt:P102 ?res . } ORDER BY DESC(?date) LIMIT 1	['Who', 'was', 'the', 'most', 'recent', 'member', 'of', 'a', 'political', 'party', 'to', 'serve', 'as', 'Mayor', 'of', 'Lisbon', '?']	['What', 'is', 'the', 'ruling', 'party', 'in', 'Lisbon', '?']	0.1692	0.7059	0.2727	53.0
156	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?company WHERE { ?company  <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q581105> ;  <http://www.wikidata.org/prop/direct/P740> <http://www.wikidata.org/entity/Q956> . }  
 Where:
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q581105 has human-readable name ""consumer electronics.""
 http://www.wikidata.org/prop/direct/P740 has human-readable name ""location of formation.""
 http://www.wikidata.org/entity/Q956 has human-readable name ""Beijing.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which electronics companies were founded in Beijing? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?mass WHERE { ?res wdt:P31 wd:Q61702557 . ?res wdt:P2067 ?mass . } ORDER BY ?mass LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q61702557 has human-readable name ""moon of Jupiter.""
 wdt:P2067 has human-readable name ""mass.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the mass of the smallest moon of Jupiter?	How heavy is Jupiter's lightest moon?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?mass WHERE { ?res wdt:P31 wd:Q61702557 . ?res wdt:P2067 ?mass . } ORDER BY ?mass LIMIT 1	['What', 'is', 'the', 'mass', 'of', 'the', 'smallest', 'moon', 'of', 'Jupiter', '?']	"['How', 'heavy', 'is', 'Jupiter', ""'s"", 'lightest', 'moon', '?']"	0.2745	1.0909	0.1429	37.0
157	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q215380 ; wdt:P495 wd:Q408 ; wdt:P136 wd:Q183862 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q215380 has human-readable name ""musical group.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P136 has human-readable name ""genre.""
 wd:Q183862 has human-readable name ""metalcore.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Australian metalcore bands. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?emloyees WHERE { wd:Q37156 wdt:P1128 ?emloyees . }  
 Where:
 wd:Q37156 has human-readable name ""IBM.""
 wdt:P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many employees does IBM have?	How many employees does IBM have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?emloyees WHERE { wd:Q37156 wdt:P1128 ?emloyees . } 	['How', 'many', 'employees', 'does', 'IBM', 'have', '?']	['How', 'many', 'employees', 'does', 'IBM', 'have', '?']	1.0	2.8074	1.0	0.0
158	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P17 has human-readable name ""country.""
 wd:Q38 has human-readable name ""Italy.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the highest mountain in Italy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(?episode) AS ?count) WHERE { ?episode wdt:P4908 wd:Q5274359 . } 
 Where:
 wdt:P4908 has human-readable name ""season.""
 wd:Q5274359 has human-readable name ""The Sopranos, season 1.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"How many episodes are in season 1 of ""The Sopranos""?"	List all episodes of the first season of the HBO television series The Sopranos!	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(?episode) AS ?count) WHERE { ?episode wdt:P4908 wd:Q5274359 . }	"['How', 'many', 'episodes', 'are', 'in', 'season', '1', 'of', '``', 'The', 'Sopranos', ""''"", '?']"	['List', 'all', 'episodes', 'of', 'the', 'first', 'season', 'of', 'the', 'HBO', 'television', 'series', 'The', 'Sopranos', '!']	0.1725	1.3078	0.2727	44.0
160	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P113 ?uri . } 
 Where:
 wd:Q51747 has human-readable name ""Air China.""
 wdt:P113 has human-readable name ""airline hub.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which airports does Air China serve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q237072 wdt:P1113 ?newNumOfEpisodes . wd:Q2367132 wdt:P1113 ?oldNumOfEpisodes . FILTER (?newNumOfEpisodes > ?oldNumOfEpisodes) } 
 Where:
 wd:Q237072 has human-readable name ""Battlestar Galactica.""
 wdt:P1113 has human-readable name ""number of episodes.""
 wd:Q2367132 has human-readable name ""Battlestar Galactica.""
 wdt:P1113 has human-readable name ""number of episodes.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Does the new series ""Battlestar Galactica"" have more episodes than the old series ""Battlestar Galactica""?"	Does the new Battlestar Galactica series have more episodes than the old one?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q237072 wdt:P1113 ?newNumOfEpisodes . wd:Q2367132 wdt:P1113 ?oldNumOfEpisodes . FILTER (?newNumOfEpisodes > ?oldNumOfEpisodes) }	"['Does', 'the', 'new', 'series', '``', 'Battlestar', 'Galactica', ""''"", 'have', 'more', 'episodes', 'than', 'the', 'old', 'series', '``', 'Battlestar', 'Galactica', ""''"", '?']"	['Does', 'the', 'new', 'Battlestar', 'Galactica', 'series', 'have', 'more', 'episodes', 'than', 'the', 'old', 'one', '?']	0.3403	2.48	0.75	43.0
161	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/direct/P20>/<http://www.wikidata.org/prop/direct/P131> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515>  .  }  
 Where:
 http://www.wikidata.org/entity/Q9696 has human-readable name ""John F. Kennedy.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which city did John F. Kennedy die? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P162> <http://www.wikidata.org/entity/Q72792> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 http://www.wikidata.org/entity/Q72792 has human-readable name ""Hal Roach.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who produced films categorized as ""film""?"	Give me all films produced by Hal Roach.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P162> <http://www.wikidata.org/entity/Q72792> . }	"['Who', 'produced', 'films', 'categorized', 'as', '``', 'film', ""''"", '?']"	['Give', 'me', 'all', 'films', 'produced', 'by', 'Hal', 'Roach', '.']	0.2342	0.7044	0.1429	32.0
162	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315087> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q315087 has human-readable name ""Garry Marshall.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which films directed by Garry Marshall was Julia Roberts starring? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { wd:Q83495 p:P161 _:a ._:a pq:P453 wd:Q2085488 ._:a ps:P161 ?res . } 
 Where:
 wd:Q83495 has human-readable name ""The Matrix.""
 p:P161 has human-readable name ""cast member.""
 pq:P453 has human-readable name ""character role.""
 wd:Q2085488 has human-readable name ""Agent Smith.""
 ps:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which actor played the character role of Agent Smith in the film ""The Matrix""?"	Who played Agent Smith in Matrix?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { wd:Q83495 p:P161 _:a ._:a pq:P453 wd:Q2085488 ._:a ps:P161 ?res . }	"['Which', 'actor', 'played', 'the', 'character', 'role', 'of', 'Agent', 'Smith', 'in', 'the', 'film', '``', 'The', 'Matrix', ""''"", '?']"	['Who', 'played', 'Agent', 'Smith', 'in', 'Matrix', '?']	0.1576	0.9908	0.4211	45.0
163	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P17> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q2663195 has human-readable name ""Sitecore.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Sitecore from? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7278 ; wdt:P17 wd:Q41 ; wdt:P1142 wd:Q3781399 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7278 has human-readable name ""political party.""
 wdt:P17 has human-readable name ""country.""
 wd:Q41 has human-readable name ""Greece.""
 wdt:P1142 has human-readable name ""political ideology.""
 wd:Q3781399 has human-readable name ""pro-Europeanism.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What political party in Greece has a political ideology of pro-Europeanism?	Which Greek parties are pro-European?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7278 ; wdt:P17 wd:Q41 ; wdt:P1142 wd:Q3781399 . }	['What', 'political', 'party', 'in', 'Greece', 'has', 'a', 'political', 'ideology', 'of', 'pro-Europeanism', '?']	['Which', 'Greek', 'parties', 'are', 'pro-European', '?']	0.1926	0.2154	0.0	46.0
164	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q30 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the largest city in america? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q806349 has human-readable name ""bandleader.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the bandleaders who play the trumpet?	Give me a list of all bandleaders that play trumpet.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . }	['Who', 'are', 'the', 'bandleaders', 'who', 'play', 'the', 'trumpet', '?']	['Give', 'me', 'a', 'list', 'of', 'all', 'bandleaders', 'that', 'play', 'trumpet', '.']	0.2075	0.9731	0.2353	26.0
165	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q567 wdt:P69 ?res . ?res wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q567 has human-readable name ""Angela Merkel.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the alma mater of the chancellor of Germany Angela Merkel? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P31/wdt:P279* wd:Q8502 . ?res wdt:P2044 ?elevation . ?res wdt:P30/wdt:P361 wd:Q2 . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 wdt:P30 has human-readable name ""continent.""
 wdt:P361 has human-readable name ""part of.""
 wd:Q2 has human-readable name ""Earth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the second highest mountain on Earth based on its elevation above sea level?	What is the second highest mountain on Earth?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P31/wdt:P279* wd:Q8502 . ?res wdt:P2044 ?elevation . ?res wdt:P30/wdt:P361 wd:Q2 . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1	['What', 'is', 'the', 'second', 'highest', 'mountain', 'on', 'Earth', 'based', 'on', 'its', 'elevation', 'above', 'sea', 'level', '?']	['What', 'is', 'the', 'second', 'highest', 'mountain', 'on', 'Earth', '?']	0.4561	1.7831	0.6364	39.0
166	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P162> <http://www.wikidata.org/entity/Q72792> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 http://www.wikidata.org/entity/Q72792 has human-readable name ""Hal Roach.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all films produced by Hal Roach. 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { { SELECT ?largest WHERE { ?largest <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?largest <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q79> . ?largest <http://www.wikidata.org/prop/direct/P1082> ?population . } ORDER BY DESC(?population) LIMIT 1 } <http://www.wikidata.org/entity/Q79> <http://www.wikidata.org/prop/direct/P36> ?largest . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q79 has human-readable name ""Egypt.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 http://www.wikidata.org/entity/Q79 has human-readable name ""Egypt.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the largest city in Egypt by population and is it the capital of Egypt?	Is Egypts largest city also its capital?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { { SELECT ?largest WHERE { ?largest <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?largest <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q79> . ?largest <http://www.wikidata.org/prop/direct/P1082> ?population . } ORDER BY DESC(?population) LIMIT 1 } <http://www.wikidata.org/entity/Q79> <http://www.wikidata.org/prop/direct/P36> ?largest . }	['What', 'is', 'the', 'largest', 'city', 'in', 'Egypt', 'by', 'population', 'and', 'is', 'it', 'the', 'capital', 'of', 'Egypt', '?']	['Is', 'Egypts', 'largest', 'city', 'also', 'its', 'capital', '?']	0.1692	0.7059	0.1905	50.0
167	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } } 
 Where:
 wdt:P488 has human-readable name ""chairperson.""
 wd:Q22686 has human-readable name ""Donald Trump.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is Donald Trump's main business? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q41291 . ?uri wdt:P1427 wd:Q177477  . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q41291 has human-readable name ""rocket.""
 wdt:P1427 has human-readable name ""start point.""
 wd:Q177477 has human-readable name ""Baikonur Cosmodrome.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What rockets have their start point at the Baikonur Cosmodrome?	Which rockets were launched from Baikonur?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q41291 . ?uri wdt:P1427 wd:Q177477  . }	['What', 'rockets', 'have', 'their', 'start', 'point', 'at', 'the', 'Baikonur', 'Cosmodrome', '?']	['Which', 'rockets', 'were', 'launched', 'from', 'Baikonur', '?']	0.2554	0.7656	0.125	38.0
168	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q16397 wdt:P40 ?children . ?children wdt:P40 ?uri . } 
 Where:
 wd:Q16397 has human-readable name ""Bruce Lee.""
 wdt:P40 has human-readable name ""child.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the grandchildren of Bruce Lee. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub wdt:P31/wdt:P279* wd:Q9143 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q9143 has human-readable name ""programming language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many programming languages are considered instances or subclasses of programming languages in Wikidata?	How many programming languages are there?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub wdt:P31/wdt:P279* wd:Q9143 . }	['How', 'many', 'programming', 'languages', 'are', 'considered', 'instances', 'or', 'subclasses', 'of', 'programming', 'languages', 'in', 'Wikidata', '?']	['How', 'many', 'programming', 'languages', 'are', 'there', '?']	0.2575	1.1229	0.5556	67.0
169	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q5398426>  . { ?uri <http://www.wikidata.org/prop/direct/P170> <http://www.wikidata.org/entity/Q25014> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P170>/<http://www.wikidata.org/prop/direct/P527> <http://www.wikidata.org/entity/Q25014> . }  } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q5398426 has human-readable name ""television series.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which television shows were created by John Cleese? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 _:a . ?uri wdt:P20 _:a . ?uri wdt:P106/wdt:P279* wd:Q10873124 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P106 has human-readable name ""occupation.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q10873124 has human-readable name ""chess player.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What chess players were born and died in the same place?	Which Chess players died in the same place they were born in?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 _:a . ?uri wdt:P20 _:a . ?uri wdt:P106/wdt:P279* wd:Q10873124 . }	['What', 'chess', 'players', 'were', 'born', 'and', 'died', 'in', 'the', 'same', 'place', '?']	['Which', 'Chess', 'players', 'died', 'in', 'the', 'same', 'place', 'they', 'were', 'born', 'in', '?']	0.3572	2.7087	0.4348	34.0
170	"---- Start Example ---- 
 Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?statement . ?statement ps:P39 wd:Q11696 ; pq:P1366 ?uri . } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the successor of John F. Kennedy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q380 wdt:P127 ?res . }  
 Where:
 wd:Q380 has human-readable name ""Meta Platforms.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who owns Meta Platforms?	Who is the owner of Facebook?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q380 wdt:P127 ?res . } 	['Who', 'owns', 'Meta', 'Platforms', '?']	['Who', 'is', 'the', 'owner', 'of', 'Facebook', '?']	0.1585	0.6967	0.2	21.0
171	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?film)) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who produced the most films? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. } 
 Where:
 wdt:P161 has human-readable name ""cast member.""
 wd:Q37079 has human-readable name ""Tom Cruise.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is a cast member in movies with Tom Cruise?	Give me all movies with Tom Cruise.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. }	['Who', 'is', 'a', 'cast', 'member', 'in', 'movies', 'with', 'Tom', 'Cruise', '?']	['Give', 'me', 'all', 'movies', 'with', 'Tom', 'Cruise', '.']	0.2346	1.0909	0.3529	20.0
172	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q158852 ; wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q158852 has human-readable name ""conductor.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all trumpet players that were bandleaders. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q983650 wdt:P131+ ?res . ?res wdt:P31 wd:Q35657 . } 
 Where:
 wd:Q983650 has human-readable name ""Fort Knox.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which U.S. state is Fort Knox located?	In which U.S. state is Fort Knox located?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q983650 wdt:P131+ ?res . ?res wdt:P31 wd:Q35657 . }	['In', 'which', 'U.S.', 'state', 'is', 'Fort', 'Knox', 'located', '?']	['In', 'which', 'U.S.', 'state', 'is', 'Fort', 'Knox', 'located', '?']	1.0	3.1699	1.0	0.0
173	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q3392 wdt:P885/wdt:P17 ?res . } 
 Where:
 wd:Q3392 has human-readable name ""Nile.""
 wdt:P885 has human-readable name ""origin of the watercourse.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which country does the Nile start? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?uri <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q1408> . ?uri <http://www.wikidata.org/prop/direct/P1082> ?population . FILTER(?population > 100000) } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/entity/Q1408 has human-readable name ""New Jersey.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What cities located in New Jersey have a population greater than 100,000?	Give me all cities in New Jersey with more than 100000 inhabitants.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?uri <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q1408> . ?uri <http://www.wikidata.org/prop/direct/P1082> ?population . FILTER(?population > 100000) }	['What', 'cities', 'located', 'in', 'New', 'Jersey', 'have', 'a', 'population', 'greater', 'than', '100,000', '?']	['Give', 'me', 'all', 'cities', 'in', 'New', 'Jersey', 'with', 'more', 'than', '100000', 'inhabitants', '.']	0.1852	1.4232	0.4167	47.0
174	"---- Start Example ---- 
 Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 p:P2043 has human-readable name ""length.""
 psv:P2043 has human-readable name ""psv:P2043.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wikibase:quantityLowerBound has human-readable name ""wikibase:quantityLowerBound.""
 wikibase:quantityUpperBound has human-readable name ""wikibase:quantityUpperBound.""
 p:P2370 has human-readable name ""conversion to SI unit.""
 psv:P2370 has human-readable name ""psv:P2370.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the longest river? 
 ----End Example ---- 
Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 . ?uri p:P2044 ?stmnode. ?stmnode psv:P2044 ?valuenode . ?valuenode wikibase:quantityAmount ?elevation . ?valuenode wikibase:quantityUnit ?unit . wd:Q130736 wdt:P2044 ?elevationNangaParbat . FILTER(?unit = wd:Q11573) FILTER (?elevation > ?elevationNangaParbat) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 p:P2044 has human-readable name ""elevation above sea level.""
 psv:P2044 has human-readable name ""psv:P2044.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q130736 has human-readable name ""Nanga Parbat.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the mountain with elevation above sea level higher than Nanga Parbat?	Which mountains are higher than the Nanga Parbat?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 . ?uri p:P2044 ?stmnode. ?stmnode psv:P2044 ?valuenode . ?valuenode wikibase:quantityAmount ?elevation . ?valuenode wikibase:quantityUnit ?unit . wd:Q130736 wdt:P2044 ?elevationNangaParbat . FILTER(?unit = wd:Q11573) FILTER (?elevation > ?elevationNangaParbat) }	['What', 'is', 'the', 'mountain', 'with', 'elevation', 'above', 'sea', 'level', 'higher', 'than', 'Nanga', 'Parbat', '?']	['Which', 'mountains', 'are', 'higher', 'than', 'the', 'Nanga', 'Parbat', '?']	0.2026	1.3585	0.381	39.0
175	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?p { wdt:P17 wdt:P276 wdt:P131 } wd:Q41085 ?p ?uri . } 
 Where:
 wdt:P17 has human-readable name ""country.""
 wdt:P276 has human-readable name ""location.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q41085 has human-readable name ""Sungkyunkwan University.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is Sungkyunkwan University? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . } 
 Where:
 wdt:P175 has human-readable name ""performer.""
 wd:Q483407 has human-readable name ""Ramones.""
 p:P1433 has human-readable name ""published in.""
 pq:P2868 has human-readable name ""subject has role.""
 wd:Q13432985 has human-readable name ""B-side.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What performer had a B-side published referring to the Ramones?	Give me all B-sides of the Ramones.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . }	['What', 'performer', 'had', 'a', 'B-side', 'published', 'referring', 'to', 'the', 'Ramones', '?']	['Give', 'me', 'all', 'B-sides', 'of', 'the', 'Ramones', '.']	0.172	0.5455	0.1176	36.0
177	"---- Start Example ---- 
 Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  wdt:P136  <http://www.wikidata.org/entity/Q11365> . ?s1  wdt:P31  <http://www.wikidata.org/entity/Q18127> . ?s1  wdt:P17 <http://www.wikidata.org/entity/Q16> . } 
 Where:
 wdt:P136 has human-readable name ""genre.""
 http://www.wikidata.org/entity/Q11365 has human-readable name ""grunge.""
 wdt:P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q18127 has human-readable name ""record label.""
 wdt:P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q16 has human-readable name ""Canada.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Canadian Grunge record labels. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q53713> <http://www.wikidata.org/prop/P570> ?date } 
 Where:
 http://www.wikidata.org/entity/Q53713 has human-readable name ""Olof Palme.""
 http://www.wikidata.org/prop/P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did Olof Palme die?	When was Olof Palme shot?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q53713> <http://www.wikidata.org/prop/P570> ?date }	['When', 'did', 'Olof', 'Palme', 'die', '?']	['When', 'was', 'Olof', 'Palme', 'shot', '?']	0.2633	1.7233	0.6	7.0
178	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), ""1950"") } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q43229 has human-readable name ""organization.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which organizations were founded in 1950? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?res wdt:P39 wd:Q55375123 . } 
 Where:
 wdt:P39 has human-readable name ""position held.""
 wd:Q55375123 has human-readable name ""King of Rome.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who held the position of King of Rome?	List the seven kings of Rome.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?res wdt:P39 wd:Q55375123 . }	['Who', 'held', 'the', 'position', 'of', 'King', 'of', 'Rome', '?']	['List', 'the', 'seven', 'kings', 'of', 'Rome', '.']	0.2073	0.9358	0.3077	20.0
179	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q794 wdt:P47 ?uri . } 
 Where:
 wd:Q794 has human-readable name ""Iran.""
 wdt:P47 has human-readable name ""shares border with.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. With how many countries Iran has borders? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE {{ ?uri wdt:P19/wdt:P131* wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20 wd:Q64 . }}} UNION { ?uri wdt:P20/wdt:P131* wd:Q64 . { SELECT ?uri WHERE { ?uri wdt:P19 wd:Q1741 . }}} UNION { ?uri wdt:P19/wdt:P131+ wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20/wdt:P131+ wd:Q64 . }}}} 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P20 has human-readable name ""place of death.""
 wd:Q64 has human-readable name ""Berlin.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q64 has human-readable name ""Berlin.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q64 has human-readable name ""Berlin.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which cities were people born in Vienna and died in Berlin located or have relationships with administrative territorial entities?	Give me all people that were born in Vienna and died in Berlin.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE {{ ?uri wdt:P19/wdt:P131* wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20 wd:Q64 . }}} UNION { ?uri wdt:P20/wdt:P131* wd:Q64 . { SELECT ?uri WHERE { ?uri wdt:P19 wd:Q1741 . }}} UNION { ?uri wdt:P19/wdt:P131+ wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20/wdt:P131+ wd:Q64 . }}}}	['In', 'which', 'cities', 'were', 'people', 'born', 'in', 'Vienna', 'and', 'died', 'in', 'Berlin', 'located', 'or', 'have', 'relationships', 'with', 'administrative', 'territorial', 'entities', '?']	['Give', 'me', 'all', 'people', 'that', 'were', 'born', 'in', 'Vienna', 'and', 'died', 'in', 'Berlin', '.']	0.2945	1.6365	0.4516	96.0
180	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q243278> <http://www.wikidata.org/prop/direct/P127> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q243278 has human-readable name ""Rolls-Royce.""
 http://www.wikidata.org/prop/direct/P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Rolls-Royce? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q12206942 wdt:P40 wd:Q51746 . } 
 Where:
 wd:Q12206942 has human-readable name ""Darth Vader.""
 wdt:P40 has human-readable name ""child.""
 wd:Q51746 has human-readable name ""Luke Skywalker.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Does Darth Vader have Luke Skywalker as his child?	Is Darth Vader Luke’s father?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q12206942 wdt:P40 wd:Q51746 . }	['Does', 'Darth', 'Vader', 'have', 'Luke', 'Skywalker', 'as', 'his', 'child', '?']	['Is', 'Darth', 'Vader', 'Luke', '’', 's', 'father', '?']	0.213	1.2	0.2857	28.0
181	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q43247 wdt:P40 ?child . ?child wdt:P26 ?uri . } 
 Where:
 wd:Q43247 has human-readable name ""Ingrid Bergman.""
 wdt:P40 has human-readable name ""child.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the daughter of Ingrid Bergman married to? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P17 wd:Q408 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q131734 has human-readable name ""brewery.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the breweries in Australia?	Show me all the breweries in Australia.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P17 wd:Q408 . }	['What', 'are', 'the', 'breweries', 'in', 'Australia', '?']	['Show', 'me', 'all', 'the', 'breweries', 'in', 'Australia', '.']	0.3564	1.5901	0.4615	9.0
182	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P119 wd:Q3411252 . } 
 Where:
 wdt:P119 has human-readable name ""place of burial.""
 wd:Q3411252 has human-readable name ""Pyramid G1-a.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was buried in the Great Pyramid of Giza? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P162 wd:Q8877 ; wdt:P31/wdt:P279* wd:Q11424 ; wdt:P2130 ?cost . FILTER(?cost > 80000000)} 
 Where:
 wdt:P162 has human-readable name ""producer.""
 wd:Q8877 has human-readable name ""Steven Spielberg.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How much did Steven Spielberg spend on producing films that cost more than 80 million?	Give me all films produced by Steven Spielberg with a budget of at least $80 million.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P162 wd:Q8877 ; wdt:P31/wdt:P279* wd:Q11424 ; wdt:P2130 ?cost . FILTER(?cost > 80000000)}	['How', 'much', 'did', 'Steven', 'Spielberg', 'spend', 'on', 'producing', 'films', 'that', 'cost', 'more', 'than', '80', 'million', '?']	['Give', 'me', 'all', 'films', 'produced', 'by', 'Steven', 'Spielberg', 'with', 'a', 'budget', 'of', 'at', 'least', '$', '80', 'million', '.']	0.1929	1.2291	0.129	60.0
183	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . } 
 Where:
 wd:Q513 has human-readable name ""Mount Everest.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Mount Everest in? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q476028> . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q29> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q476028 has human-readable name ""association football club.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q29 has human-readable name ""Spain.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What association football clubs are located in Spain?	Give me all soccer clubs in Spain.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q476028> . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q29> . }	['What', 'association', 'football', 'clubs', 'are', 'located', 'in', 'Spain', '?']	['Give', 'me', 'all', 'soccer', 'clubs', 'in', 'Spain', '.']	0.2073	1.0	0.2667	34.0
184	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?val WHERE { wd:Q171048 wdt:P2047 ?val . } 
 Where:
 wd:Q171048 has human-readable name ""Toy Story.""
 wdt:P2047 has human-readable name ""duration.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the runtime of Toy Story. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q37876> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q37876 has human-readable name ""Natalie Portman.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of the films that are instances of a film, have Natalie Portman as a cast member, and have a producer?	Who produced films starring Natalie Portman?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q37876> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . }	['What', 'are', 'the', 'URIs', 'of', 'the', 'films', 'that', 'are', 'instances', 'of', 'a', 'film', ',', 'have', 'Natalie', 'Portman', 'as', 'a', 'cast', 'member', ',', 'and', 'have', 'a', 'producer', '?']	['Who', 'produced', 'films', 'starring', 'Natalie', 'Portman', '?']	0.1376	0.4159	0.1667	86.0
185	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q1501505 wdt:P170 ?creator . ?creator wdt:P27 ?uri . } 
 Where:
 wd:Q1501505 has human-readable name ""Miffy.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P27 has human-readable name ""country of citizenship.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which country does the creator of Miffy come from? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q38280 FILTER(?uri != wd:Q38280) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the subclasses of German Shepherd?	Give me all breeds of the German Shepherd dog.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q38280 FILTER(?uri != wd:Q38280) }	['What', 'are', 'the', 'subclasses', 'of', 'German', 'Shepherd', '?']	['Give', 'me', 'all', 'breeds', 'of', 'the', 'German', 'Shepherd', 'dog', '.']	0.1823	1.3464	0.25	26.0
186	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11410 ; wdt:P123 wd:Q928726 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11410 has human-readable name ""game.""
 wdt:P123 has human-readable name ""publisher.""
 wd:Q928726 has human-readable name ""GMT Games.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all games by GMT. 
 ----End Example ---- 
Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P54 wd:Q128109 ; p:P54 ?memberOfStatement . ?memberOfStatement a wikibase:BestRank; ?_ wd:Q128109 ; pq:P580 ?startTime . MINUS { ?memberOfStatement pq:P582 ?endTime . } MINUS { ?uri wdt:P2032 ?endCareer . } ?uri p:P2067 ?stmnode . ?stmnode psv:P2067 ?valuenode . ?valuenode wikibase:quantityAmount ?mass . ?valuenode wikibase:quantityUnit ?unit . BIND(IF(?unit = wd:Q11570, ?mass, ?mass*0.453592) AS ?massUnified) } ORDER BY DESC(?massUnified) LIMIT 1 
 Where:
 wdt:P54 has human-readable name ""member of sports team.""
 wd:Q128109 has human-readable name ""Chicago Bulls.""
 p:P54 has human-readable name ""member of sports team.""
 http://www.w3.org/1999/02/22-rdf-syntax-ns#type has human-readable name ""type.""
 wikibase:BestRank has human-readable name ""wikibase:BestRank.""
 wd:Q128109 has human-readable name ""Chicago Bulls.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 wdt:P2032 has human-readable name ""work period (end).""
 p:P2067 has human-readable name ""mass.""
 psv:P2067 has human-readable name ""psv:P2067.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11570 has human-readable name ""kilogram.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the maximum mass of a player who is a member of the Chicago Bulls sports team?	Who is the heaviest player of the Chicago Bulls?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P54 wd:Q128109 ; p:P54 ?memberOfStatement . ?memberOfStatement a wikibase:BestRank; ?_ wd:Q128109 ; pq:P580 ?startTime . MINUS { ?memberOfStatement pq:P582 ?endTime . } MINUS { ?uri wdt:P2032 ?endCareer . } ?uri p:P2067 ?stmnode . ?stmnode psv:P2067 ?valuenode . ?valuenode wikibase:quantityAmount ?mass . ?valuenode wikibase:quantityUnit ?unit . BIND(IF(?unit = wd:Q11570, ?mass, ?mass*0.453592) AS ?massUnified) } ORDER BY DESC(?massUnified) LIMIT 1	['What', 'is', 'the', 'maximum', 'mass', 'of', 'a', 'player', 'who', 'is', 'a', 'member', 'of', 'the', 'Chicago', 'Bulls', 'sports', 'team', '?']	['Who', 'is', 'the', 'heaviest', 'player', 'of', 'the', 'Chicago', 'Bulls', '?']	0.162	1.349	0.4545	45.0
187	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } } 
 Where:
 wdt:P488 has human-readable name ""chairperson.""
 wd:Q22686 has human-readable name ""Donald Trump.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is Donald Trump's main business? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * WHERE { wd:Q191 wdt:P2936 ?lang . } 
 Where:
 wd:Q191 has human-readable name ""Estonia.""
 wdt:P2936 has human-readable name ""language used.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What language is used in Estonia?	Which languages are spoken in Estonia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * WHERE { wd:Q191 wdt:P2936 ?lang . }	['What', 'language', 'is', 'used', 'in', 'Estonia', '?']	['Which', 'languages', 'are', 'spoken', 'in', 'Estonia', '?']	0.2676	1.2032	0.3333	12.0
188	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q10800557 has human-readable name ""film actor.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actors were born in Germany? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q3624078 has human-readable name ""sovereign state.""
 http://www.wikidata.org/prop/direct/P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the largest sovereign state by area?	What is the largest country in the world?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1	['What', 'is', 'the', 'largest', 'sovereign', 'state', 'by', 'area', '?']	['What', 'is', 'the', 'largest', 'country', 'in', 'the', 'world', '?']	0.3156	1.775	0.5333	16.0
189	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q85 wdt:P1082 ?val . } 
 Where:
 wd:Q85 has human-readable name ""Cairo.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the population of Cairo? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q30 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the largest city by population in the United States of America?	What is the largest city in america?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q30 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1	['What', 'is', 'the', 'largest', 'city', 'by', 'population', 'in', 'the', 'United', 'States', 'of', 'America', '?']	['What', 'is', 'the', 'largest', 'city', 'in', 'america', '?']	0.2892	1.5	0.6316	35.0
190	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?label WHERE { wd:Q59150527 wdt:P527 ?uri . ?uri wdt:P577 ?date . ?uri wdt:P264 ?label . } ORDER BY ?date LIMIT 1 
 Where:
 wd:Q59150527 has human-readable name ""Elvis Presley's albums in chronological order.""
 wdt:P527 has human-readable name ""has part(s).""
 wdt:P577 has human-readable name ""publication date.""
 wdt:P264 has human-readable name ""record label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. For which label did Elvis record his first album? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { wd:Q1471987 wdt:P571 ?founded . ?res wdt:P39 wd:Q19546 . ?res p:P39 _:a . _:a ps:P39 wd:Q19546 . _:a pq:P580 ?start . _:a pq:P582 ?end . FILTER( ?start <= ?founded && ?founded <= ?end) . } 
 Where:
 wd:Q1471987 has human-readable name ""Vatican Media.""
 wdt:P571 has human-readable name ""inception.""
 wdt:P39 has human-readable name ""position held.""
 wd:Q19546 has human-readable name ""pope.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q19546 has human-readable name ""pope.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was Vatican Media founded while under the position of Pope?	Who was the pope that founded the Vatican Television?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { wd:Q1471987 wdt:P571 ?founded . ?res wdt:P39 wd:Q19546 . ?res p:P39 _:a . _:a ps:P39 wd:Q19546 . _:a pq:P580 ?start . _:a pq:P582 ?end . FILTER( ?start <= ?founded && ?founded <= ?end) . }	['When', 'was', 'Vatican', 'Media', 'founded', 'while', 'under', 'the', 'position', 'of', 'Pope', '?']	['Who', 'was', 'the', 'pope', 'that', 'founded', 'the', 'Vatican', 'Television', '?']	0.288	1.3008	0.3158	39.0
191	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . }  
 Where:
 http://www.wikidata.org/entity/Q154216 has human-readable name ""Cat Stevens.""
 http://www.wikidata.org/prop/direct/P1303 has human-readable name ""instrument.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which instruments does Cat Stevens play? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q596> <http://www.wikidata.org/prop/direct/P61> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q596 has human-readable name ""Ceres.""
 http://www.wikidata.org/prop/direct/P61 has human-readable name ""discoverer or inventor.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who discovered or invented Ceres?	Who discovered Ceres?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q596> <http://www.wikidata.org/prop/direct/P61> ?uri  . }	['Who', 'discovered', 'or', 'invented', 'Ceres', '?']	['Who', 'discovered', 'Ceres', '?']	0.3131	1.3333	0.75	12.0
192	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q34370 wdt:P6 ?uri . } 
 Where:
 wd:Q34370 has human-readable name ""Rotterdam.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of Rotterdam? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q55> <http://www.wikidata.org/prop/direct/P35> ?uri . ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q2045066> . } 
 Where:
 http://www.wikidata.org/entity/Q55 has human-readable name ""Netherlands.""
 http://www.wikidata.org/prop/direct/P35 has human-readable name ""head of state.""
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q2045066 has human-readable name ""King of the Netherlands.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of state of the Netherlands, holding the position of King of the Netherlands?	Who is the king of the Netherlands?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q55> <http://www.wikidata.org/prop/direct/P35> ?uri . ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q2045066> . }	['Who', 'is', 'the', 'head', 'of', 'state', 'of', 'the', 'Netherlands', ',', 'holding', 'the', 'position', 'of', 'King', 'of', 'the', 'Netherlands', '?']	['Who', 'is', 'the', 'king', 'of', 'the', 'Netherlands', '?']	0.1833	1.0556	0.5882	59.0
193	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q5930 has human-readable name ""Family Guy.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created Family Guy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q134041 wdt:P279+ wd:Q40050 . } 
 Where:
 wd:Q134041 has human-readable name ""cola.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q40050 has human-readable name ""drink.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is cola a subclass of drink?	Is Cola a beverage?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q134041 wdt:P279+ wd:Q40050 . }	['Is', 'cola', 'a', 'subclass', 'of', 'drink', '?']	['Is', 'Cola', 'a', 'beverage', '?']	0.2621	0.9951	0.4	16.0
194	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q4970706> . }  
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q4970706 has human-readable name ""Federal Chancellor of Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all federal chancellors of Germany. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q567 wdt:P69 ?res . ?res wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q567 has human-readable name ""Angela Merkel.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who did Angela Merkel get educated at, where the institution is a university?	What is the alma mater of the chancellor of Germany Angela Merkel?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q567 wdt:P69 ?res . ?res wdt:P31/wdt:P279* wd:Q3918 . }	['Who', 'did', 'Angela', 'Merkel', 'get', 'educated', 'at', ',', 'where', 'the', 'institution', 'is', 'a', 'university', '?']	['What', 'is', 'the', 'alma', 'mater', 'of', 'the', 'chancellor', 'of', 'Germany', 'Angela', 'Merkel', '?']	0.189	1.1668	0.087	58.0
195	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P162 wd:Q8877 ; wdt:P31/wdt:P279* wd:Q11424 ; wdt:P2130 ?cost . FILTER(?cost > 80000000)} 
 Where:
 wdt:P162 has human-readable name ""producer.""
 wd:Q8877 has human-readable name ""Steven Spielberg.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all films produced by Steven Spielberg with a budget of at least $80 million. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q1163227 wdt:P50 ?res. } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the author of ""The Pillars of the Earth""?"	Who wrote the book Les Piliers de la terre?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q1163227 wdt:P50 ?res. }	"['Who', 'is', 'the', 'author', 'of', '``', 'The', 'Pillars', 'of', 'the', 'Earth', ""''"", '?']"	['Who', 'wrote', 'the', 'book', 'Les', 'Piliers', 'de', 'la', 'terre', '?']	0.2515	0.7666	0.2353	27.0
196	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . } 
 Where:
 wdt:P175 has human-readable name ""performer.""
 wd:Q483407 has human-readable name ""Ramones.""
 p:P1433 has human-readable name ""published in.""
 pq:P2868 has human-readable name ""subject has role.""
 wd:Q13432985 has human-readable name ""B-side.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all B-sides of the Ramones. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1480118 wdt:P113 ?uri . } 
 Where:
 wd:Q1480118 has human-readable name ""Yeti Airlines.""
 wdt:P113 has human-readable name ""airline hub.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which airline hub is associated with Yeti Airlines?	Which airports does Yeti Airlines serve?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1480118 wdt:P113 ?uri . }	['Which', 'airline', 'hub', 'is', 'associated', 'with', 'Yeti', 'Airlines', '?']	['Which', 'airports', 'does', 'Yeti', 'Airlines', 'serve', '?']	0.2228	1.2477	0.2857	29.0
197	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q152316 wdt:P22 ?father ; wdt:P25 ?mother . wd:Q36812 wdt:P22 ?father ; wdt:P25 ?mother . } 
 Where:
 wd:Q152316 has human-readable name ""Prince Harry, Duke of Sussex.""
 wdt:P22 has human-readable name ""father.""
 wd:Q152316 has human-readable name ""Prince Harry, Duke of Sussex.""
 wdt:P25 has human-readable name ""mother.""
 wd:Q36812 has human-readable name ""William, Prince of Wales.""
 wdt:P22 has human-readable name ""father.""
 wd:Q36812 has human-readable name ""William, Prince of Wales.""
 wdt:P25 has human-readable name ""mother.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Do Prince Harry and Prince William have the same parents? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q5879 wdt:P19 ?res . }  
 Where:
 wd:Q5879 has human-readable name ""Johann Wolfgang von Goethe.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was Johann Wolfgang von Goethe born?	Where is the birthplace of Goethe?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q5879 wdt:P19 ?res . } 	['Where', 'was', 'Johann', 'Wolfgang', 'von', 'Goethe', 'born', '?']	['Where', 'is', 'the', 'birthplace', 'of', 'Goethe', '?']	0.2608	1.0528	0.1538	22.0
198	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P22> <http://www.wikidata.org/entity/Q179150> . ?uri <http://www.wikidata.org/prop/direct/P25> <http://www.wikidata.org/entity/Q12003> . } 
 Where:
 http://www.wikidata.org/prop/direct/P22 has human-readable name ""father.""
 http://www.wikidata.org/entity/Q179150 has human-readable name ""Sonny Bono.""
 http://www.wikidata.org/prop/direct/P25 has human-readable name ""mother.""
 http://www.wikidata.org/entity/Q12003 has human-readable name ""Cher.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the son of Sonny and Cher? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q128160> <http://www.wikidata.org/prop/direct/P582> ?date1 . <http://www.wikidata.org/entity/Q191721> <http://www.wikidata.org/prop/direct/P580> ?date2 . FILTER(?date1 < ?date2) } 
 Where:
 http://www.wikidata.org/entity/Q128160 has human-readable name ""Cuban Missile Crisis.""
 http://www.wikidata.org/prop/direct/P582 has human-readable name ""end time.""
 http://www.wikidata.org/entity/Q191721 has human-readable name ""Bay of Pigs invasion.""
 http://www.wikidata.org/prop/direct/P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Has the Cuban Missile Crisis ended before the start of the Bay of Pigs invasion?	Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q128160> <http://www.wikidata.org/prop/direct/P582> ?date1 . <http://www.wikidata.org/entity/Q191721> <http://www.wikidata.org/prop/direct/P580> ?date2 . FILTER(?date1 < ?date2) }	['Has', 'the', 'Cuban', 'Missile', 'Crisis', 'ended', 'before', 'the', 'start', 'of', 'the', 'Bay', 'of', 'Pigs', 'invasion', '?']	['Was', 'the', 'Cuban', 'Missile', 'Crisis', 'earlier', 'than', 'the', 'Bay', 'of', 'Pigs', 'Invasion', '?']	0.3154	2.0898	0.6087	20.0
199	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q163740 . { ?uri wdt:P159|wdt:P17 wd:Q408 . } UNION { ?uri wdt:P159|wdt:P17 ?city . ?city wdt:P159 wd:Q408 } } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q163740 has human-readable name ""nonprofit organization.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P17 has human-readable name ""country.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q408 has human-readable name ""Australia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Australian nonprofit organizations. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q656071 wdt:P527 ?uri . } 
 Where:
 wd:Q656071 has human-readable name ""carrot cake.""
 wdt:P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the parts of a carrot cake?	Which ingredients do I need for carrot cake?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q656071 wdt:P527 ?uri . }	['What', 'are', 'the', 'parts', 'of', 'a', 'carrot', 'cake', '?']	['Which', 'ingredients', 'do', 'I', 'need', 'for', 'carrot', 'cake', '?']	0.218	1.0566	0.25	23.0
200	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . } 
 Where:
 wd:Q513 has human-readable name ""Mount Everest.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Mount Everest in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q52 wdt:P112 ?uri . } 
 Where:
 wd:Q52 has human-readable name ""Wikipedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was Wikipedia founded by?	Who created Wikipedia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q52 wdt:P112 ?uri . }	['Who', 'was', 'Wikipedia', 'founded', 'by', '?']	['Who', 'created', 'Wikipedia', '?']	0.2626	1.0	0.25	17.0
201	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?hovercraft wdt:P31/wdt:P279* wd:Q185757 ; wdt:P176 ?uri . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q185757 has human-readable name ""hovercraft.""
 wdt:P176 has human-readable name ""manufacturer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which companies produce hovercrafts? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P31 wd:Q8502 . ?res wdt:P131+ wd:Q1202 . ?res wdt:P2044 ?height . } ORDER BY DESC(?height) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1202 has human-readable name ""Saxony.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest mountain located in Saxony and what is its elevation above sea level?	What is the highest mountain in Saxony Germany?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P31 wd:Q8502 . ?res wdt:P131+ wd:Q1202 . ?res wdt:P2044 ?height . } ORDER BY DESC(?height) LIMIT 1	['What', 'is', 'the', 'highest', 'mountain', 'located', 'in', 'Saxony', 'and', 'what', 'is', 'its', 'elevation', 'above', 'sea', 'level', '?']	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Saxony', 'Germany', '?']	0.2546	1.4917	0.6087	46.0
202	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q60 wdt:P6 ?uri . } 
 Where:
 wd:Q60 has human-readable name ""New York City.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the mayor of New York City? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { ?res p:P39 _:a . _:a ps:P39 wd:Q22575092 . :a pq:P580 ?start . } ORDER BY DESC(?start) LIMIT 1 
 Where:
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q22575092 has human-readable name ""Federal Minister of Finance.""
 pq:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did the latest Federal Minister of Finance begin their position?	Who is the current federal minister of finance in Germany?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/>  SELECT ?res WHERE { ?res p:P39 _:a . _:a ps:P39 wd:Q22575092 . :a pq:P580 ?start . } ORDER BY DESC(?start) LIMIT 1	['When', 'did', 'the', 'latest', 'Federal', 'Minister', 'of', 'Finance', 'begin', 'their', 'position', '?']	['Who', 'is', 'the', 'current', 'federal', 'minister', 'of', 'finance', 'in', 'Germany', '?']	0.2535	0.8649	0.1905	27.0
203	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2105 wdt:P26 ?uri . } 
 Where:
 wd:Q2105 has human-readable name ""Jacques Chirac.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was married to president Chirac? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q5806 wdt:P131+ ?res . ?res wdt:P31 wd:Q6256 . } 
 Where:
 wd:Q5806 has human-readable name ""Mecca.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q6256 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which country is Mecca located?	In which country is Mecca located?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q5806 wdt:P131+ ?res . ?res wdt:P31 wd:Q6256 . }	['In', 'which', 'country', 'is', 'Mecca', 'located', '?']	['In', 'which', 'country', 'is', 'Mecca', 'located', '?']	1.0	2.8074	1.0	0.0
204	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub wdt:P31/wdt:P279* wd:Q9143 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q9143 has human-readable name ""programming language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many programming languages are there? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5620660> ^<http://www.wikidata.org/prop/qualifier/P453>/<http://www.wikidata.org/prop/statement/P161> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q5620660 has human-readable name ""Gus Fring.""
 http://www.wikidata.org/prop/qualifier/P453 has human-readable name ""character role.""
 http://www.wikidata.org/prop/statement/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which cast members have played the character role of Gus Fring?	Who played Gus Fring in Breaking Bad?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5620660> ^<http://www.wikidata.org/prop/qualifier/P453>/<http://www.wikidata.org/prop/statement/P161> ?uri } 	['Which', 'cast', 'members', 'have', 'played', 'the', 'character', 'role', 'of', 'Gus', 'Fring', '?']	['Who', 'played', 'Gus', 'Fring', 'in', 'Breaking', 'Bad', '?']	0.197	1.0	0.2222	48.0
205	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q79784 wdt:P582 ?uri . } 
 Where:
 wd:Q79784 has human-readable name ""Friends.""
 wdt:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was the last episode of the TV series Friends aired? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q3392 wdt:P885/wdt:P17 ?res . } 
 Where:
 wd:Q3392 has human-readable name ""Nile.""
 wdt:P885 has human-readable name ""origin of the watercourse.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which country is the origin of the watercourse of the Nile?	In which country does the Nile start?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q3392 wdt:P885/wdt:P17 ?res . }	['Which', 'country', 'is', 'the', 'origin', 'of', 'the', 'watercourse', 'of', 'the', 'Nile', '?']	['In', 'which', 'country', 'does', 'the', 'Nile', 'start', '?']	0.197	1.0	0.2667	38.0
206	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P17> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q2663195 has human-readable name ""Sitecore.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Sitecore from? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q739627 wdt:P131 ?res . ?res wdt:P31/wdt:P279* wd:Q106458883 . } 
 Where:
 wd:Q739627 has human-readable name ""Pennsylvania State University.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q106458883 has human-readable name ""state.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What state is Pennsylvania State University located in?	In which state Penn State University is located?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q739627 wdt:P131 ?res . ?res wdt:P31/wdt:P279* wd:Q106458883 . }	['What', 'state', 'is', 'Pennsylvania', 'State', 'University', 'located', 'in', '?']	['In', 'which', 'state', 'Penn', 'State', 'University', 'is', 'located', '?']	0.2465	2.1133	0.375	24.0
207	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P162> <http://www.wikidata.org/entity/Q72792> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 http://www.wikidata.org/entity/Q72792 has human-readable name ""Hal Roach.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all films produced by Hal Roach. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q483110> .  } UNION { ?uri <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q483110> } ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q29> .  ?uri <http://www.wikidata.org/prop/direct/P1083> ?num .  } ORDER BY DESC(?num) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q483110 has human-readable name ""stadium.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q483110 has human-readable name ""stadium.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q29 has human-readable name ""Spain.""
 http://www.wikidata.org/prop/direct/P1083 has human-readable name ""maximum capacity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the stadium in Spain with the highest maximum capacity?	What is the biggest stadium in Spain?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q483110> .  } UNION { ?uri <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q483110> } ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q29> .  ?uri <http://www.wikidata.org/prop/direct/P1083> ?num .  } ORDER BY DESC(?num) LIMIT 1	['What', 'is', 'the', 'stadium', 'in', 'Spain', 'with', 'the', 'highest', 'maximum', 'capacity', '?']	['What', 'is', 'the', 'biggest', 'stadium', 'in', 'Spain', '?']	0.3033	1.75	0.5882	39.0
209	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q482994> . ?uri <http://www.wikidata.org/prop/direct/P175> <http://www.wikidata.org/entity/Q15862> . ?uri <http://www.wikidata.org/prop/direct/P577> ?date } ORDER BY ?date LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q482994 has human-readable name ""album.""
 http://www.wikidata.org/prop/direct/P175 has human-readable name ""performer.""
 http://www.wikidata.org/entity/Q15862 has human-readable name ""Queen.""
 http://www.wikidata.org/prop/direct/P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What was the first Queen album? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?area WHERE { wd:Q145 wdt:P2046 ?area . } 
 Where:
 wd:Q145 has human-readable name ""United Kingdom.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the area of the United Kingdom?	How large is the area of UK?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?area WHERE { wd:Q145 wdt:P2046 ?area . }	['What', 'is', 'the', 'area', 'of', 'the', 'United', 'Kingdom', '?']	['How', 'large', 'is', 'the', 'area', 'of', 'UK', '?']	0.3156	1.6667	0.5714	24.0
210	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q9903 has human-readable name ""Ming dynasty.""
 http://www.wikidata.org/prop/direct/P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Ming dynasty dissolve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2695156 wdt:P170 ?uri . } 
 Where:
 wd:Q2695156 has human-readable name ""Batman.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the creator of Batman?	Who created Batman?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2695156 wdt:P170 ?uri . }	['Who', 'is', 'the', 'creator', 'of', 'Batman', '?']	['Who', 'created', 'Batman', '?']	0.2302	0.8571	0.4444	12.0
211	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q25173 wdt:P729 ?date . } 
 Where:
 wd:Q25173 has human-readable name ""Titanic.""
 wdt:P729 has human-readable name ""service entry.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was the Titanic completed? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q9215 wdt:P26 ?o1 . } 
 Where:
 wd:Q9215 has human-readable name ""Sigmund Freud.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Sigmund Freud married?	Was Sigmund Freud married?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q9215 wdt:P26 ?o1 . }	['Is', 'Sigmund', 'Freud', 'married', '?']	['Was', 'Sigmund', 'Freud', 'married', '?']	0.6687	1.8575	0.75	2.0
212	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q208008 . } 
 Where:
 wdt:P38 has human-readable name ""currency.""
 wd:Q208008 has human-readable name ""cocoa bean.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which ancient empire could you pay with cocoa beans? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q465 wdt:P112 ?uri . } 
 Where:
 wd:Q465 has human-readable name ""DBpedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	By whom was DBpedia founded?	Who are the developers of DBpedia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q465 wdt:P112 ?uri . }	['By', 'whom', 'was', 'DBpedia', 'founded', '?']	['Who', 'are', 'the', 'developers', 'of', 'DBpedia', '?']	0.2009	0.8466	0.0	26.0
213	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q38111 has human-readable name ""Leonardo DiCaprio.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many films did Leonardo DiCaprio star in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11424 ; wdt:P57 wd:Q56094 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P57 has human-readable name ""director.""
 wd:Q56094 has human-readable name ""Francis Ford Coppola.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many films directed by Francis Ford Coppola are there?	Give me all movies directed by Francis Ford Coppola.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11424 ; wdt:P57 wd:Q56094 . }	['How', 'many', 'films', 'directed', 'by', 'Francis', 'Ford', 'Coppola', 'are', 'there', '?']	['Give', 'me', 'all', 'movies', 'directed', 'by', 'Francis', 'Ford', 'Coppola', '.']	0.3508	1.51	0.5263	24.0
214	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q12280 has human-readable name ""bridge.""
 wdt:P177 has human-readable name ""crosses.""
 wd:Q1471 has human-readable name ""Seine.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which bridges cross the Seine? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q53696> <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q10908> . } 
 Where:
 http://www.wikidata.org/entity/Q53696 has human-readable name ""Hylidae.""
 http://www.wikidata.org/prop/direct/P171 has human-readable name ""parent taxon.""
 http://www.wikidata.org/entity/Q10908 has human-readable name ""Amphibia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Does the family Hylidae belong to the parent taxon Amphibia?	Are tree frogs a type of amphibian?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q53696> <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q10908> . }	['Does', 'the', 'family', 'Hylidae', 'belong', 'to', 'the', 'parent', 'taxon', 'Amphibia', '?']	['Are', 'tree', 'frogs', 'a', 'type', 'of', 'amphibian', '?']	0.1941	0.2727	0.0	38.0
215	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q458 wdt:P1082 ?uri . } 
 Where:
 wd:Q458 has human-readable name ""European Union.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. how much is the total population of european union? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q62408 wdt:P131 ?uri . } 
 Where:
 wd:Q62408 has human-readable name ""Palace of Westminster.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which administrative territorial entity is the Palace of Westminster located?	What is the location of the Houses of Parliament?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q62408 wdt:P131 ?uri . }	['In', 'which', 'administrative', 'territorial', 'entity', 'is', 'the', 'Palace', 'of', 'Westminster', 'located', '?']	['What', 'is', 'the', 'location', 'of', 'the', 'Houses', 'of', 'Parliament', '?']	0.197	0.9406	0.3333	55.0
216	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q64 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q64 has human-readable name ""Berlin.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors who were born in Berlin. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q58226 wdt:P2044 ?uri . } 
 Where:
 wd:Q58226 has human-readable name ""Düsseldorf Airport.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the elevation above sea level of Düsseldorf Airport?	how much is the elevation of Düsseldorf Airport ?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q58226 wdt:P2044 ?uri . }	['What', 'is', 'the', 'elevation', 'above', 'sea', 'level', 'of', 'Düsseldorf', 'Airport', '?']	['how', 'much', 'is', 'the', 'elevation', 'of', 'Düsseldorf', 'Airport', '?']	0.3393	2.0172	0.5263	25.0
217	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q130018 has human-readable name ""Denali.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which U.S. state is Mount McKinley located? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1489 wdt:P1082 ?uri . } 
 Where:
 wd:Q1489 has human-readable name ""Mexico City.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Mexico City?	How much is the population of mexico city ?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1489 wdt:P1082 ?uri . }	['What', 'is', 'the', 'population', 'of', 'Mexico', 'City', '?']	['How', 'much', 'is', 'the', 'population', 'of', 'mexico', 'city', '?']	0.3226	1.8686	0.5	11.0
218	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q168383 wdt:P127 ?uri . } 
 Where:
 wd:Q168383 has human-readable name ""Universal Pictures.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Universal Studios? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q200686 wdt:P571 ?uri . } 
 Where:
 wd:Q200686 has human-readable name ""French Fifth Republic.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did the French Fifth Republic begin?	when was the founding date of french fifth republic?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q200686 wdt:P571 ?uri . }	['When', 'did', 'the', 'French', 'Fifth', 'Republic', 'begin', '?']	['when', 'was', 'the', 'founding', 'date', 'of', 'french', 'fifth', 'republic', '?']	0.1835	0.6732	0.125	30.0
219	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?film <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?film <http://www.wikidata.org/prop/direct/P162> ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?film)) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who produced the most films? 
 ----End Example ---- 
Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P39 wd:Q18810062 . ?uri p:P39 ?stmnode . ?stmnode pq:P580 ?startDate . } ORDER BY ?startDate LIMIT 1 
 Where:
 wdt:P39 has human-readable name ""position held.""
 wd:Q18810062 has human-readable name ""monarch of England.""
 p:P39 has human-readable name ""position held.""
 pq:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did the monarch of England begin their position?	Who was the first King of England?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P39 wd:Q18810062 . ?uri p:P39 ?stmnode . ?stmnode pq:P580 ?startDate . } ORDER BY ?startDate LIMIT 1	['When', 'did', 'the', 'monarch', 'of', 'England', 'begin', 'their', 'position', '?']	['Who', 'was', 'the', 'first', 'King', 'of', 'England', '?']	0.213	1.2	0.25	36.0
220	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q213959> <http://www.wikidata.org/prop/direct/P115> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q213959 has human-readable name ""Boston Red Sox.""
 http://www.wikidata.org/prop/direct/P115 has human-readable name ""home venue.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where do the Red Sox play? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q25161472 wdt:P98 ?uri . } 
 Where:
 wd:Q25161472 has human-readable name ""Forbes.""
 wdt:P98 has human-readable name ""editor.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the editor of Forbes?	Who is the editor of Forbes?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q25161472 wdt:P98 ?uri . }	['Who', 'is', 'the', 'editor', 'of', 'Forbes', '?']	['Who', 'is', 'the', 'editor', 'of', 'Forbes', '?']	1.0	2.8074	1.0	0.0
221	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri . } 
 Where:
 wd:Q131007 has human-readable name ""World of Warcraft.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who developed the video game World of Warcraft? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q319308> <http://www.wikidata.org/prop/direct/P166> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q319308 has human-readable name ""Douglas Hofstadter.""
 http://www.wikidata.org/prop/direct/P166 has human-readable name ""award received.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What award did Douglas Hofstadter receive?	Which awards did Douglas Hofstadter win?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q319308> <http://www.wikidata.org/prop/direct/P166> ?uri . }	['What', 'award', 'did', 'Douglas', 'Hofstadter', 'receive', '?']	['Which', 'awards', 'did', 'Douglas', 'Hofstadter', 'win', '?']	0.2876	1.6042	0.5	10.0
222	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1009> <http://www.wikidata.org/prop/direct/P36> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q1009 has human-readable name ""Cameroon.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the capital of Cameroon? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q18574233 ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q18574233 has human-readable name ""darts player.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the occupation and date of birth of the oldest living darts player?	Who is the youngest Darts player?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q18574233 ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1	['What', 'is', 'the', 'occupation', 'and', 'date', 'of', 'birth', 'of', 'the', 'oldest', 'living', 'darts', 'player', '?']	['Who', 'is', 'the', 'youngest', 'Darts', 'player', '?']	0.2126	0.7486	0.3333	47.0
223	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q622188 wdt:P571 ?date . } 
 Where:
 wd:Q622188 has human-readable name ""Hells Angels.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When were the Hells Angels founded? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q187916 wdt:P279* wd:Q349 . } 
 Where:
 wd:Q187916 has human-readable name ""horse racing.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q349 has human-readable name ""sport.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is horse racing a sport?	Is horse racing a sport?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q187916 wdt:P279* wd:Q349 . }	['Is', 'horse', 'racing', 'a', 'sport', '?']	['Is', 'horse', 'racing', 'a', 'sport', '?']	1.0	2.585	1.0	0.0
224	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7416 wdt:P40 ?uri . } 
 Where:
 wd:Q7416 has human-readable name ""Margaret Thatcher.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List the children of Margaret Thatcher. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q125006> <http://www.wikidata.org/prop/direct/P177> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q125006 has human-readable name ""Brooklyn Bridge.""
 http://www.wikidata.org/prop/direct/P177 has human-readable name ""crosses.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What structures does the Brooklyn Bridge cross?	Which river does the Brooklyn Bridge cross?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q125006> <http://www.wikidata.org/prop/direct/P177> ?uri . }	['What', 'structures', 'does', 'the', 'Brooklyn', 'Bridge', 'cross', '?']	['Which', 'river', 'does', 'the', 'Brooklyn', 'Bridge', 'cross', '?']	0.6804	2.25	0.7143	11.0
225	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1214 wdt:P6 ?uri . } 
 Where:
 wd:Q1214 has human-readable name ""Wyoming.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the governor of Wyoming? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q36> <http://www.wikidata.org/prop/direct/P1082> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q36 has human-readable name ""Poland.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Poland?	How many people live in Poland?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q36> <http://www.wikidata.org/prop/direct/P1082> ?uri }	['What', 'is', 'the', 'population', 'of', 'Poland', '?']	['How', 'many', 'people', 'live', 'in', 'Poland', '?']	0.208	0.8021	0.1667	19.0
226	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q151114 wdt:P658 ?track . ?track wdt:P162 ?uri . } 
 Where:
 wd:Q151114 has human-readable name ""The Wall.""
 wdt:P658 has human-readable name ""tracklist.""
 wdt:P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who are the writers of the Wall album of Pink Floyd? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q79784 wdt:P582 ?uri . } 
 Where:
 wd:Q79784 has human-readable name ""Friends.""
 wdt:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"When did the TV show ""Friends"" end?"	When was the last episode of the TV series Friends aired?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q79784 wdt:P582 ?uri . }	"['When', 'did', 'the', 'TV', 'show', '``', 'Friends', ""''"", 'end', '?']"	['When', 'was', 'the', 'last', 'episode', 'of', 'the', 'TV', 'series', 'Friends', 'aired', '?']	0.1844	1.5677	0.3529	32.0
227	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q2685 has human-readable name ""Arnold Schwarzenegger.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Arnold Schwarzenegger attend a university? 
 ----End Example ---- 
Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?wife . ?wife rdfs:label ?name . FILTER regex(?name, ""Michelle"") } 
 Where:
 wd:Q76 has human-readable name ""Barack Obama.""
 wdt:P26 has human-readable name ""spouse.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did Barack Obama have a spouse named Michelle?	Is the wife of president Obama called Michelle?	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?wife . ?wife rdfs:label ?name . FILTER regex(?name, ""Michelle"") }"	['Did', 'Barack', 'Obama', 'have', 'a', 'spouse', 'named', 'Michelle', '?']	['Is', 'the', 'wife', 'of', 'president', 'Obama', 'called', 'Michelle', '?']	0.2073	1.0566	0.25	31.0
229	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q125006 wdt:P287 ?uri . } 
 Where:
 wd:Q125006 has human-readable name ""Brooklyn Bridge.""
 wdt:P287 has human-readable name ""designed by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who designed the Brooklyn Bridge? 
 ----End Example ---- 
Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { wd:Q30 p:P6 ?statement . ?statement pq:P580 ?startTime ; ps:P6 ?uri . } ORDER BY ?startTime OFFSET 7 LIMIT 1 
 Where:
 wd:Q30 has human-readable name ""United States of America.""
 p:P6 has human-readable name ""head of government.""
 pq:P580 has human-readable name ""start time.""
 ps:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was the 7th head of government of the United States of America?	Who is 8th president of US?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { wd:Q30 p:P6 ?statement . ?statement pq:P580 ?startTime ; ps:P6 ?uri . } ORDER BY ?startTime OFFSET 7 LIMIT 1	['Who', 'was', 'the', '7th', 'head', 'of', 'government', 'of', 'the', 'United', 'States', 'of', 'America', '?']	['Who', 'is', '8th', 'president', 'of', 'US', '?']	0.2496	0.6016	0.25	47.0
230	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q40026> <http://www.wikidata.org/prop/direct/P551> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . } 
 Where:
 http://www.wikidata.org/entity/Q40026 has human-readable name ""Sylvester Stallone.""
 http://www.wikidata.org/prop/direct/P551 has human-readable name ""residence.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which city does Sylvester Stallone live? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q458 wdt:P1082 ?uri . } 
 Where:
 wd:Q458 has human-readable name ""European Union.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of the European Union?	how much is the total population of european union?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q458 wdt:P1082 ?uri . }	['What', 'is', 'the', 'population', 'of', 'the', 'European', 'Union', '?']	['how', 'much', 'is', 'the', 'total', 'population', 'of', 'european', 'union', '?']	0.2507	1.7611	0.5	19.0
231	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q90 ; wdt:P569 ?birthDate . BIND(YEAR(?birthDate) as ?birthYear) . FILTER(?birthYear > 1950) } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q90 has human-readable name ""Paris.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors who were born in Paris after 1950. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q194188 ; wdt:P137 wd:Q23548 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q194188 has human-readable name ""spaceport.""
 wdt:P137 has human-readable name ""operator.""
 wd:Q23548 has human-readable name ""National Aeronautics and Space Administration.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which spaceports are operated by the National Aeronautics and Space Administration (NASA)?	Give me all launch pads operated by NASA.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q194188 ; wdt:P137 wd:Q23548 . }	['Which', 'spaceports', 'are', 'operated', 'by', 'the', 'National', 'Aeronautics', 'and', 'Space', 'Administration', '(', 'NASA', ')', '?']	['Give', 'me', 'all', 'launch', 'pads', 'operated', 'by', 'NASA', '.']	0.1664	0.634	0.2	69.0
232	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?name WHERE { wd:Q23215 wdt:P1477 ?name. } 
 Where:
 wd:Q23215 has human-readable name ""Adele.""
 wdt:P1477 has human-readable name ""birth name.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the birth name of Adele? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri . } 
 Where:
 wd:Q131007 has human-readable name ""World of Warcraft.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the developer of World of Warcraft?	Who developed the video game World of Warcraft?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri . }	['Who', 'is', 'the', 'developer', 'of', 'World', 'of', 'Warcraft', '?']	['Who', 'developed', 'the', 'video', 'game', 'World', 'of', 'Warcraft', '?']	0.3303	2.1133	0.6667	19.0
233	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . } 
 Where:
 wd:Q513 has human-readable name ""Mount Everest.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Mount Everest in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?name WHERE { wd:Q23215 wdt:P1477 ?name. } 
 Where:
 wd:Q23215 has human-readable name ""Adele.""
 wdt:P1477 has human-readable name ""birth name.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is Adele's birth name?	What is the birth name of Adele?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?name WHERE { wd:Q23215 wdt:P1477 ?name. }	"['What', 'is', 'Adele', ""'s"", 'birth', 'name', '?']"	['What', 'is', 'the', 'birth', 'name', 'of', 'Adele', '?']	0.2822	2.3852	0.5	15.0
234	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { ?uri wdt:P17 wd:Q16 ; wdt:P31/wdt:P279* wd:Q515 ; wdt:P1082 ?val } ORDER BY DESC(?val) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q16 has human-readable name ""Canada.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many inhabitants does the largest city in Canada have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q85 wdt:P1082 ?val . } 
 Where:
 wd:Q85 has human-readable name ""Cairo.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Cairo?	What is the population of Cairo?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q85 wdt:P1082 ?val . }	['What', 'is', 'the', 'population', 'of', 'Cairo', '?']	['What', 'is', 'the', 'population', 'of', 'Cairo', '?']	1.0	2.8074	1.0	0.0
235	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q90 has human-readable name ""Paris.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 http://www.wikidata.org/prop/direct/P102 has human-readable name ""member of political party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. To which party does the mayor of Paris belong? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q7934> <http://www.wikidata.org/prop/direct/P570> ?date . FILTER(!BOUND(?date)) } 
 Where:
 http://www.wikidata.org/entity/Q7934 has human-readable name ""Frank Herbert.""
 http://www.wikidata.org/prop/direct/P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did Frank Herbert have a date of death?	Is Frank Herbert still alive?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q7934> <http://www.wikidata.org/prop/direct/P570> ?date . FILTER(!BOUND(?date)) }	['Did', 'Frank', 'Herbert', 'have', 'a', 'date', 'of', 'death', '?']	['Is', 'Frank', 'Herbert', 'still', 'alive', '?']	0.2073	0.8617	0.3077	20.0
236	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P1128 ?num . FILTER(?num > 1000000) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which companies have more than 1 million employees? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q7345 ; wdt:P577 ?date . } ORDER BY DESC(?date) LIMIT 1 
 Where:
 wdt:P50 has human-readable name ""author.""
 wd:Q7345 has human-readable name ""Dan Brown.""
 wdt:P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the latest publication date of works authored by Dan Brown?	What is the last work of Dan Brown?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q7345 ; wdt:P577 ?date . } ORDER BY DESC(?date) LIMIT 1	['What', 'is', 'the', 'latest', 'publication', 'date', 'of', 'works', 'authored', 'by', 'Dan', 'Brown', '?']	['What', 'is', 'the', 'last', 'work', 'of', 'Dan', 'Brown', '?']	0.285	1.7069	0.6	33.0
237	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q219512 has human-readable name ""Jesse Eisenberg.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What movies does Jesse Eisenberg play in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?p { wdt:P17 wdt:P276 wdt:P131 } wd:Q41085 ?p ?uri . } 
 Where:
 wdt:P17 has human-readable name ""country.""
 wdt:P276 has human-readable name ""location.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q41085 has human-readable name ""Sungkyunkwan University.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In what countries, locations, and administrative territorial entities is Sungkyunkwan University located?	Where is Sungkyunkwan University?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?p { wdt:P17 wdt:P276 wdt:P131 } wd:Q41085 ?p ?uri . }	['In', 'what', 'countries', ',', 'locations', ',', 'and', 'administrative', 'territorial', 'entities', 'is', 'Sungkyunkwan', 'University', 'located', '?']	['Where', 'is', 'Sungkyunkwan', 'University', '?']	0.1568	0.6192	0.25	73.0
238	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q52 wdt:P112 ?uri . } 
 Where:
 wd:Q52 has human-readable name ""Wikipedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created Wikipedia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q726382 wdt:P50 ?uri . } 
 Where:
 wd:Q726382 has human-readable name ""Die Traumdeutung.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the author of ""Die Traumdeutung""?"	Who is the author of the interpretation of dreams?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q726382 wdt:P50 ?uri . }	"['Who', 'is', 'the', 'author', 'of', '``', 'Die', 'Traumdeutung', ""''"", '?']"	['Who', 'is', 'the', 'author', 'of', 'the', 'interpretation', 'of', 'dreams', '?']	0.4111	1.9043	0.7143	24.0
239	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q62408 wdt:P131 ?uri . } 
 Where:
 wd:Q62408 has human-readable name ""Palace of Westminster.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the location of the Houses of Parliament? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q692 wdt:P570 ?uri . } 
 Where:
 wd:Q692 has human-readable name ""William Shakespeare.""
 wdt:P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did William Shakespeare die?	When was the death of Shakespeare?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q692 wdt:P570 ?uri . }	['When', 'did', 'William', 'Shakespeare', 'die', '?']	['When', 'was', 'the', 'death', 'of', 'Shakespeare', '?']	0.2223	1.2699	0.1818	18.0
241	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q48410 has human-readable name ""Richard Gere.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which films did Julia Roberts as well as Richard Gere play? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P1056> <http://www.wikidata.org/entity/Q17130715>} 
 Where:
 http://www.wikidata.org/prop/direct/P1056 has human-readable name ""product or material produced or service provided.""
 http://www.wikidata.org/entity/Q17130715 has human-readable name ""Slack.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What products or services are produced by Slack?	Who developed Slack?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P1056> <http://www.wikidata.org/entity/Q17130715>}	['What', 'products', 'or', 'services', 'are', 'produced', 'by', 'Slack', '?']	['Who', 'developed', 'Slack', '?']	0.1873	0.4444	0.1818	31.0
243	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q7725310 has human-readable name ""series of creative works.""
 wdt:P170 has human-readable name ""creator.""
 wd:Q8704 has human-readable name ""Walt Disney.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which television shows were created by Walt Disney? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?year WHERE { wd:Q241665 wdt:P569 ?date . BIND(YEAR(?date) as ?year) } 
 Where:
 wd:Q241665 has human-readable name ""Rachel Stevens.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was Rachel Stevens born?	In which year was Rachel Stevens born?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?year WHERE { wd:Q241665 wdt:P569 ?date . BIND(YEAR(?date) as ?year) }	['When', 'was', 'Rachel', 'Stevens', 'born', '?']	['In', 'which', 'year', 'was', 'Rachel', 'Stevens', 'born', '?']	0.5444	1.7636	0.6667	11.0
244	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q844587 wdt:P263 ?uri } 
 Where:
 wd:Q844587 has human-readable name ""Prime Minister of Spain.""
 wdt:P263 has human-readable name ""official residence.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is the residence of the prime minister of Spain? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q41142 wdt:P26 ?uri . } 
 Where:
 wd:Q41142 has human-readable name ""Jane Fonda.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many spouses does Jane Fonda have?	How often did Jane Fonda marry?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q41142 wdt:P26 ?uri . }	['How', 'many', 'spouses', 'does', 'Jane', 'Fonda', 'have', '?']	['How', 'often', 'did', 'Jane', 'Fonda', 'marry', '?']	0.234	1.4037	0.4615	17.0
245	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23397 ; wdt:P17 wd:Q35 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23397 has human-readable name ""lake.""
 wdt:P17 has human-readable name ""country.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all lakes in Denmark. 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?spouse .  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  FILTER(regex(?name,'Mary')) } 
 Where:
 http://www.wikidata.org/entity/Q91 has human-readable name ""Abraham Lincoln.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 http://www.w3.org/2000/01/rdf-schema#label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Is Abraham Lincoln married to someone whose name contains ""Mary""?"	Was the wife of president Lincoln called Mary?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?spouse .  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  FILTER(regex(?name,'Mary')) }	"['Is', 'Abraham', 'Lincoln', 'married', 'to', 'someone', 'whose', 'name', 'contains', '``', 'Mary', ""''"", '?']"	['Was', 'the', 'wife', 'of', 'president', 'Lincoln', 'called', 'Mary', '?']	0.2515	0.7315	0.1111	45.0
247	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q7345 ; wdt:P577 ?date . } ORDER BY DESC(?date) LIMIT 1 
 Where:
 wdt:P50 has human-readable name ""author.""
 wd:Q7345 has human-readable name ""Dan Brown.""
 wdt:P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the last work of Dan Brown? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q8038 wdt:P277 ?uri . } 
 Where:
 wd:Q8038 has human-readable name ""GIMP.""
 wdt:P277 has human-readable name ""programmed in.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What programming languages is GIMP written in?	In which programming language is GIMP written?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q8038 wdt:P277 ?uri . }	['What', 'programming', 'languages', 'is', 'GIMP', 'written', 'in', '?']	['In', 'which', 'programming', 'language', 'is', 'GIMP', 'written', '?']	0.2724	1.875	0.4286	11.0
248	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1481540 wdt:P161 wd:Q45772 . } 
 Where:
 wd:Q1481540 has human-readable name ""Velvet Goldmine.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q45772 has human-readable name ""Christian Bale.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Christian Bale starring in Velvet Goldmine? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?types { wd:Q3918 wd:Q875538 } wd:Q567 wdt:P69 ?uri . ?uri wdt:P31 ?types . } 
 Where:
 wd:Q3918 has human-readable name ""university.""
 wd:Q875538 has human-readable name ""public university.""
 wd:Q567 has human-readable name ""Angela Merkel.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Angela Merkel educated at a university or public university?	Which university did Angela Merkel attend?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?types { wd:Q3918 wd:Q875538 } wd:Q567 wdt:P69 ?uri . ?uri wdt:P31 ?types . }	['Is', 'Angela', 'Merkel', 'educated', 'at', 'a', 'university', 'or', 'public', 'university', '?']	['Which', 'university', 'did', 'Angela', 'Merkel', 'attend', '?']	0.2045	1.0209	0.25	49.0
249	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 _:a . ?uri wdt:P20 _:a . ?uri wdt:P106/wdt:P279* wd:Q10873124 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P106 has human-readable name ""occupation.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q10873124 has human-readable name ""chess player.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which Chess players died in the same place they were born in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q58483083 ; wdt:P86 wd:Q2808 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q58483083 has human-readable name ""dramatico-musical work.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q2808 has human-readable name ""Elton John.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which dramatico-musical works were composed by Elton John?	List all the musicals with music by Elton John.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q58483083 ; wdt:P86 wd:Q2808 . }	['Which', 'dramatico-musical', 'works', 'were', 'composed', 'by', 'Elton', 'John', '?']	['List', 'all', 'the', 'musicals', 'with', 'music', 'by', 'Elton', 'John', '.']	0.195	1.0567	0.2353	28.0
251	"---- Start Example ---- 
 Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P123>  <http://www.wikidata.org/entity/Q921536> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q47461344> . ?s1  <http://www.wikidata.org/prop/direct/P50>  <http://www.wikidata.org/entity/Q160534> . } 
 Where:
 http://www.wikidata.org/prop/direct/P123 has human-readable name ""publisher.""
 http://www.wikidata.org/entity/Q921536 has human-readable name ""Viking Press.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q47461344 has human-readable name ""written work.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q160534 has human-readable name ""Jack Kerouac.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which books by Kerouac were published by Viking Press? 
 ----End Example ---- 
Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 p:P2043 has human-readable name ""length.""
 psv:P2043 has human-readable name ""psv:P2043.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wikibase:quantityLowerBound has human-readable name ""wikibase:quantityLowerBound.""
 wikibase:quantityUpperBound has human-readable name ""wikibase:quantityUpperBound.""
 p:P2370 has human-readable name ""conversion to SI unit.""
 psv:P2370 has human-readable name ""psv:P2370.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the length of the longest river in meters and with precision for the measurement?	What is the longest river in the world?	en	gpt-3.5-turbo	ONE_SHOT	"PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1"	['What', 'is', 'the', 'length', 'of', 'the', 'longest', 'river', 'in', 'meters', 'and', 'with', 'precision', 'for', 'the', 'measurement', '?']	['What', 'is', 'the', 'longest', 'river', 'in', 'the', 'world', '?']	0.2141	1.4366	0.5714	53.0
252	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q37876 wdt:P19 ?uri . ?uri wdt:P17 wd:Q30 . } 
 Where:
 wd:Q37876 has human-readable name ""Natalie Portman.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Was Natalie Portman born in the United States? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q11806 wdt:P569 ?val . } 
 Where:
 wd:Q11806 has human-readable name ""John Adams.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was John Adams born?	When was John Adams born?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q11806 wdt:P569 ?val . }	['When', 'was', 'John', 'Adams', 'born', '?']	['When', 'was', 'John', 'Adams', 'born', '?']	1.0	2.585	1.0	0.0
253	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q2685 has human-readable name ""Arnold Schwarzenegger.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Arnold Schwarzenegger attend a university? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?hovercraft wdt:P31/wdt:P279* wd:Q185757 ; wdt:P176 ?uri . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q185757 has human-readable name ""hovercraft.""
 wdt:P176 has human-readable name ""manufacturer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who manufactures hovercrafts?	Which companies produce hovercrafts?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?hovercraft wdt:P31/wdt:P279* wd:Q185757 ; wdt:P176 ?uri . }	['Who', 'manufactures', 'hovercrafts', '?']	['Which', 'companies', 'produce', 'hovercrafts', '?']	0.2017	0.0	0.2857	16.0
254	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), ""1950"") } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q43229 has human-readable name ""organization.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which organizations were founded in 1950? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P26 ?uri . } 
 Where:
 wd:Q91 has human-readable name ""Abraham Lincoln.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was Abraham Lincoln's spouse?	Who was the wife of U.S. president Lincoln?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P26 ?uri . }	"['Who', 'was', 'Abraham', 'Lincoln', ""'s"", 'spouse', '?']"	['Who', 'was', 'the', 'wife', 'of', 'U.S.', 'president', 'Lincoln', '?']	0.1859	1.3879	0.2857	31.0
255	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q9696 wdt:P20 ?uri . } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where was JFK assassinated? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are some specific subclasses of an elephant?	Which species does an elephant belong?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . }	['What', 'are', 'some', 'specific', 'subclasses', 'of', 'an', 'elephant', '?']	['Which', 'species', 'does', 'an', 'elephant', 'belong', '?']	0.2073	0.9358	0.1429	32.0
256	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q2743 ; wdt:P86 wd:Q152505 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q2743 has human-readable name ""musical.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q152505 has human-readable name ""Leonard Bernstein.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all the musicals with music by Leonard Bernstein. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?number WHERE { <http://www.wikidata.org/entity/Q408> <http://www.wikidata.org/prop/direct/P36> ?uri . ?uri <http://www.wikidata.org/prop/direct/P1082> ?number . } 
 Where:
 http://www.wikidata.org/entity/Q408 has human-readable name ""Australia.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of the capital of Australia?	How many people live in the capital of Australia?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?number WHERE { <http://www.wikidata.org/entity/Q408> <http://www.wikidata.org/prop/direct/P36> ?uri . ?uri <http://www.wikidata.org/prop/direct/P1082> ?number . }	['What', 'is', 'the', 'population', 'of', 'the', 'capital', 'of', 'Australia', '?']	['How', 'many', 'people', 'live', 'in', 'the', 'capital', 'of', 'Australia', '?']	0.3928	1.661	0.5	19.0
257	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which species does an elephant belong? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q208008 . } 
 Where:
 wdt:P38 has human-readable name ""currency.""
 wd:Q208008 has human-readable name ""cocoa bean.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the currency used for trading cocoa beans?	In which ancient empire could you pay with cocoa beans?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q208008 . }	['What', 'is', 'the', 'currency', 'used', 'for', 'trading', 'cocoa', 'beans', '?']	['In', 'which', 'ancient', 'empire', 'could', 'you', 'pay', 'with', 'cocoa', 'beans', '?']	0.1813	0.9988	0.2105	31.0
258	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P38> <http://www.wikidata.org/entity/Q4916>   . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 http://www.wikidata.org/entity/Q4916 has human-readable name ""euro.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which countries adopted the Euro? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?cnt) WHERE { wd:Q937 wdt:P800 ?uri . } 
 Where:
 wd:Q937 has human-readable name ""Albert Einstein.""
 wdt:P800 has human-readable name ""notable work.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many notable works did Albert Einstein have?	How many theories did Albert Einstein come up with?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?cnt) WHERE { wd:Q937 wdt:P800 ?uri . }	['How', 'many', 'notable', 'works', 'did', 'Albert', 'Einstein', 'have', '?']	['How', 'many', 'theories', 'did', 'Albert', 'Einstein', 'come', 'up', 'with', '?']	0.2567	2.1134	0.5882	20.0
259	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q38280 FILTER(?uri != wd:Q38280) } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 wd:Q38280 has human-readable name ""German Shepherd.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all breeds of the German Shepherd dog. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q44578> <http://www.wikidata.org/prop/direct/P86> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q44578 has human-readable name ""Titanic.""
 http://www.wikidata.org/prop/direct/P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was the composer of the Titanic?	Who composed the soundtrack for Cameron's Titanic?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q44578> <http://www.wikidata.org/prop/direct/P86> ?uri }	['Who', 'was', 'the', 'composer', 'of', 'the', 'Titanic', '?']	"['Who', 'composed', 'the', 'soundtrack', 'for', 'Cameron', ""'s"", 'Titanic', '?']"	0.2065	1.4949	0.4615	26.0
260	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q11679 wdt:P50 ?uri . } 
 Where:
 wd:Q11679 has human-readable name ""The Hunger Games.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote The Hunger Games? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?val WHERE { wd:Q171048 wdt:P2047 ?val . } 
 Where:
 wd:Q171048 has human-readable name ""Toy Story.""
 wdt:P2047 has human-readable name ""duration.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the duration of Toy Story?	Give me the runtime of Toy Story.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?val WHERE { wd:Q171048 wdt:P2047 ?val . }	['What', 'is', 'the', 'duration', 'of', 'Toy', 'Story', '?']	['Give', 'me', 'the', 'runtime', 'of', 'Toy', 'Story', '.']	0.2576	1.5	0.4286	12.0
262	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . } 
 Where:
 wdt:P175 has human-readable name ""performer.""
 wd:Q483407 has human-readable name ""Ramones.""
 p:P1433 has human-readable name ""published in.""
 pq:P2868 has human-readable name ""subject has role.""
 wd:Q13432985 has human-readable name ""B-side.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all B-sides of the Ramones. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q794 wdt:P47 ?uri . } 
 Where:
 wd:Q794 has human-readable name ""Iran.""
 wdt:P47 has human-readable name ""shares border with.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which countries share a border with Iran?	With how many countries Iran has borders?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q794 wdt:P47 ?uri . }	['Which', 'countries', 'share', 'a', 'border', 'with', 'Iran', '?']	['With', 'how', 'many', 'countries', 'Iran', 'has', 'borders', '?']	0.2608	1.125	0.1429	27.0
263	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1617 wdt:P279 ?uri . wd:Q9168 wdt:P279 ?uri . } 
 Where:
 wd:Q1617 has human-readable name ""Urdu.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q9168 has human-readable name ""Persian.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Do Urdu and Persian have a common root? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?company WHERE { ?company  <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q581105> ;  <http://www.wikidata.org/prop/direct/P740> <http://www.wikidata.org/entity/Q956> . }  
 Where:
 http://www.wikidata.org/prop/direct/P452 has human-readable name ""industry.""
 http://www.wikidata.org/entity/Q581105 has human-readable name ""consumer electronics.""
 http://www.wikidata.org/prop/direct/P740 has human-readable name ""location of formation.""
 http://www.wikidata.org/entity/Q956 has human-readable name ""Beijing.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which companies in Beijing are in the consumer electronics industry?	Which electronics companies were founded in Beijing?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?company WHERE { ?company  <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q581105> ;  <http://www.wikidata.org/prop/direct/P740> <http://www.wikidata.org/entity/Q956> . } 	['Which', 'companies', 'in', 'Beijing', 'are', 'in', 'the', 'consumer', 'electronics', 'industry', '?']	['Which', 'electronics', 'companies', 'were', 'founded', 'in', 'Beijing', '?']	0.2264	1.6364	0.375	48.0
264	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q9903 has human-readable name ""Ming dynasty.""
 http://www.wikidata.org/prop/direct/P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Ming dynasty dissolve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?statement . ?statement ps:P39 wd:Q11696 ; pq:P1366 ?uri . } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who replaced John F. Kennedy as President of the United States?	Who was the successor of John F. Kennedy?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?statement . ?statement ps:P39 wd:Q11696 ; pq:P1366 ?uri . }	['Who', 'replaced', 'John', 'F.', 'Kennedy', 'as', 'President', 'of', 'the', 'United', 'States', '?']	['Who', 'was', 'the', 'successor', 'of', 'John', 'F.', 'Kennedy', '?']	0.2145	1.8491	0.4211	44.0
265	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE { { SELECT ?largest WHERE { ?largest <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?largest <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q79> . ?largest <http://www.wikidata.org/prop/direct/P1082> ?population . } ORDER BY DESC(?population) LIMIT 1 } <http://www.wikidata.org/entity/Q79> <http://www.wikidata.org/prop/direct/P36> ?largest . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q79 has human-readable name ""Egypt.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 http://www.wikidata.org/entity/Q79 has human-readable name ""Egypt.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Egypts largest city also its capital? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q90 has human-readable name ""Paris.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government in Paris?	Who is the mayor of Paris?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6> ?uri  . }	['Who', 'is', 'the', 'head', 'of', 'government', 'in', 'Paris', '?']	['Who', 'is', 'the', 'mayor', 'of', 'Paris', '?']	0.2868	1.8716	0.7143	17.0
266	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1079 wdt:P1113 ?nBbEpisodes . wd:Q23572 wdt:P1113 ?nGotEpisodes . FILTER(?nBbEpisodes > ?nGotEpisodes) } 
 Where:
 wd:Q1079 has human-readable name ""Breaking Bad.""
 wdt:P1113 has human-readable name ""number of episodes.""
 wd:Q23572 has human-readable name ""Game of Thrones.""
 wdt:P1113 has human-readable name ""number of episodes.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does Breaking Bad have more episodes than Game of Thrones? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q2685 has human-readable name ""Arnold Schwarzenegger.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did Arnold Schwarzenegger receive his education?	Did Arnold Schwarzenegger attend a university?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . }	['Where', 'did', 'Arnold', 'Schwarzenegger', 'receive', 'his', 'education', '?']	['Did', 'Arnold', 'Schwarzenegger', 'attend', 'a', 'university', '?']	0.2178	1.0528	0.3077	25.0
267	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q1726 has human-readable name ""Munich.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all companies in Munich. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2009573 wdt:P26 ?o1 . } 
 Where:
 wd:Q2009573 has human-readable name ""James Bond.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is James Bond married?	Is James Bond married?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2009573 wdt:P26 ?o1 . }	['Is', 'James', 'Bond', 'married', '?']	['Is', 'James', 'Bond', 'married', '?']	1.0	2.3219	1.0	0.0
268	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q483110> .  } UNION { ?uri <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q483110> } ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q29> .  ?uri <http://www.wikidata.org/prop/direct/P1083> ?num .  } ORDER BY DESC(?num) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q483110 has human-readable name ""stadium.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q483110 has human-readable name ""stadium.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q29 has human-readable name ""Spain.""
 http://www.wikidata.org/prop/direct/P1083 has human-readable name ""maximum capacity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the biggest stadium in Spain? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q106588> <http://www.wikidata.org/prop/direct/P403> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q23397>  . }  
 Where:
 http://www.wikidata.org/entity/Q106588 has human-readable name ""Isar.""
 http://www.wikidata.org/prop/direct/P403 has human-readable name ""mouth of the watercourse.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q23397 has human-readable name ""lake.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is the Isar the mouth of a lake?	Does the Isar flow into a lake?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q106588> <http://www.wikidata.org/prop/direct/P403> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q23397>  . } 	['Is', 'the', 'Isar', 'the', 'mouth', 'of', 'a', 'lake', '?']	['Does', 'the', 'Isar', 'flow', 'into', 'a', 'lake', '?']	0.2741	1.6667	0.5714	13.0
269	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q76334> <http://www.wikidata.org/prop/P106>/<http://www.wikidata.org/prop/qualifier/P582> ?date } 
 Where:
 http://www.wikidata.org/entity/Q76334 has human-readable name ""Boris Becker.""
 http://www.wikidata.org/prop/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did Boris Becker end his active career? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4830453>  . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q668> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?employees . } ORDER BY DESC(?employees) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q4830453 has human-readable name ""business.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q668 has human-readable name ""India.""
 http://www.wikidata.org/prop/direct/P1128 has human-readable name ""employees.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the business in India with the highest number of employees?	Which Indian company has the most employees?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4830453>  . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q668> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?employees . } ORDER BY DESC(?employees) LIMIT 1	['What', 'is', 'the', 'business', 'in', 'India', 'with', 'the', 'highest', 'number', 'of', 'employees', '?']	['Which', 'Indian', 'company', 'has', 'the', 'most', 'employees', '?']	0.1771	0.6923	0.2222	41.0
270	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1480118 wdt:P113 ?uri . } 
 Where:
 wd:Q1480118 has human-readable name ""Yeti Airlines.""
 wdt:P113 has human-readable name ""airline hub.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which airports does Yeti Airlines serve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?presStatement . ?presStatement ps:P39 wd:Q11696 ; pq:P580 ?startPres ; pq:P582 ?endPres . ?uri p:P39 ?viceStatement . ?viceStatement ps:P39 wd:Q11699 ; pq:P580 ?startVice ; pq:P582 ?endVice . FILTER(?startVice >= ?startPres && ?startVice <= ?endPres) } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11699 has human-readable name ""Vice President of the United States.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What were the overlapping periods when John F. Kennedy was President of the United States and Vice President of the United States?	Who was John F. Kennedy's vice president?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?presStatement . ?presStatement ps:P39 wd:Q11696 ; pq:P580 ?startPres ; pq:P582 ?endPres . ?uri p:P39 ?viceStatement . ?viceStatement ps:P39 wd:Q11699 ; pq:P580 ?startVice ; pq:P582 ?endVice . FILTER(?startVice >= ?startPres && ?startVice <= ?endPres) }	['What', 'were', 'the', 'overlapping', 'periods', 'when', 'John', 'F.', 'Kennedy', 'was', 'President', 'of', 'the', 'United', 'States', 'and', 'Vice', 'President', 'of', 'the', 'United', 'States', '?']	"['Who', 'was', 'John', 'F.', 'Kennedy', ""'s"", 'vice', 'president', '?']"	0.1196	0.6891	0.25	93.0
271	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q168383 wdt:P127 ?uri . } 
 Where:
 wd:Q168383 has human-readable name ""Universal Pictures.""
 wdt:P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Universal Studios? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q1501505 wdt:P170 ?creator . ?creator wdt:P27 ?uri . } 
 Where:
 wd:Q1501505 has human-readable name ""Miffy.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P27 has human-readable name ""country of citizenship.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which country is the creator of Miffy from?	Which country does the creator of Miffy come from?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q1501505 wdt:P170 ?creator . ?creator wdt:P27 ?uri . }	['Which', 'country', 'is', 'the', 'creator', 'of', 'Miffy', 'from', '?']	['Which', 'country', 'does', 'the', 'creator', 'of', 'Miffy', 'come', 'from', '?']	0.3609	2.8178	0.8235	8.0
273	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7278 ; wdt:P17 wd:Q41 ; wdt:P1142 wd:Q3781399 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7278 has human-readable name ""political party.""
 wdt:P17 has human-readable name ""country.""
 wd:Q41 has human-readable name ""Greece.""
 wdt:P1142 has human-readable name ""political ideology.""
 wd:Q3781399 has human-readable name ""pro-Europeanism.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which Greek parties are pro-European? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q854383> <http://www.wikidata.org/prop/direct/P176>/<http://www.wikidata.org/prop/direct/P159> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q854383 has human-readable name ""Heineken.""
 http://www.wikidata.org/prop/direct/P176 has human-readable name ""manufacturer.""
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is the headquarters of the manufacturer of Heineken located?	In what city is the Heineken brewery?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q854383> <http://www.wikidata.org/prop/direct/P176>/<http://www.wikidata.org/prop/direct/P159> ?uri . }	['Where', 'is', 'the', 'headquarters', 'of', 'the', 'manufacturer', 'of', 'Heineken', 'located', '?']	['In', 'what', 'city', 'is', 'the', 'Heineken', 'brewery', '?']	0.2045	1.0909	0.4	46.0
274	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7075 ; wdt:P571 ?date . FILTER (YEAR(?date) < 1400 ) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7075 has human-readable name ""library.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all libraries established earlier than 1400. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P102 wd:Q29552 . } 
 Where:
 wd:Q76 has human-readable name ""Barack Obama.""
 wdt:P102 has human-readable name ""member of political party.""
 wd:Q29552 has human-readable name ""Democratic Party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Barack Obama a member of the Democratic Party?	Is Barack Obama a democrat?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P102 wd:Q29552 . }	['Is', 'Barack', 'Obama', 'a', 'member', 'of', 'the', 'Democratic', 'Party', '?']	['Is', 'Barack', 'Obama', 'a', 'democrat', '?']	0.2778	1.2925	0.5714	23.0
275	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q16397 wdt:P40 ?children . ?children wdt:P40 ?uri . } 
 Where:
 wd:Q16397 has human-readable name ""Bruce Lee.""
 wdt:P40 has human-readable name ""child.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the grandchildren of Bruce Lee. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7416 wdt:P40 ?uri . } 
 Where:
 wd:Q7416 has human-readable name ""Margaret Thatcher.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the children of Margaret Thatcher?	List the children of Margaret Thatcher.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7416 wdt:P40 ?uri . }	['Who', 'are', 'the', 'children', 'of', 'Margaret', 'Thatcher', '?']	['List', 'the', 'children', 'of', 'Margaret', 'Thatcher', '.']	0.517	1.7546	0.6154	8.0
278	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?uri) WHERE { ?uri wdt:P31 wd:Q46970 } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q46970 has human-readable name ""airline.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many airlines are there? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q1198 wdt:P2046 ?val . } 
 Where:
 wd:Q1198 has human-readable name ""North Rhine-Westphalia.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the area of North Rhine-Westphalia?	how big is the total area of North Rhine- Westphalia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q1198 wdt:P2046 ?val . }	['What', 'is', 'the', 'area', 'of', 'North', 'Rhine-Westphalia', '?']	['how', 'big', 'is', 'the', 'total', 'area', 'of', 'North', 'Rhine-', 'Westphalia', '?']	0.2169	1.6919	0.5882	14.0
279	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?area WHERE { wd:Q145 wdt:P2046 ?area . } 
 Where:
 wd:Q145 has human-readable name ""United Kingdom.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How large is the area of UK? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:279* wd:Q515 ; wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the city with the largest population?	Which city has the most inhabitants?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:279* wd:Q515 ; wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1	['What', 'is', 'the', 'city', 'with', 'the', 'largest', 'population', '?']	['Which', 'city', 'has', 'the', 'most', 'inhabitants', '?']	0.2592	0.9358	0.3077	26.0
280	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q171684> <http://www.wikidata.org/prop/direct/P119> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q171684 has human-readable name ""Syngman Rhee.""
 http://www.wikidata.org/prop/direct/P119 has human-readable name ""place of burial.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is Syngman Rhee buried? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } } 
 Where:
 wdt:P488 has human-readable name ""chairperson.""
 wd:Q22686 has human-readable name ""Donald Trump.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was Donald Trump chairperson of a business that was not dissolved, abolished, or demolished?	What is Donald Trump's main business?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } }	['When', 'was', 'Donald', 'Trump', 'chairperson', 'of', 'a', 'business', 'that', 'was', 'not', 'dissolved', ',', 'abolished', ',', 'or', 'demolished', '?']	"['What', 'is', 'Donald', 'Trump', ""'s"", 'main', 'business', '?']"	0.165	0.6667	0.1	68.0
281	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE {{ ?uri wdt:P19/wdt:P131* wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20 wd:Q64 . }}} UNION { ?uri wdt:P20/wdt:P131* wd:Q64 . { SELECT ?uri WHERE { ?uri wdt:P19 wd:Q1741 . }}} UNION { ?uri wdt:P19/wdt:P131+ wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20/wdt:P131+ wd:Q64 . }}}} 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P20 has human-readable name ""place of death.""
 wd:Q64 has human-readable name ""Berlin.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q64 has human-readable name ""Berlin.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1741 has human-readable name ""Vienna.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q64 has human-readable name ""Berlin.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all people that were born in Vienna and died in Berlin. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q170645 wdt:P3967 ?finalEvent . ?finalEvent wdt:P580 ?val . } 
 Where:
 wd:Q170645 has human-readable name ""2018 FIFA World Cup.""
 wdt:P3967 has human-readable name ""final event.""
 wdt:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What was the start time of the final event of the 2018 FIFA World Cup?	When will start the final match of the football world cup 2018?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q170645 wdt:P3967 ?finalEvent . ?finalEvent wdt:P580 ?val . }	['What', 'was', 'the', 'start', 'time', 'of', 'the', 'final', 'event', 'of', 'the', '2018', 'FIFA', 'World', 'Cup', '?']	['When', 'will', 'start', 'the', 'final', 'match', 'of', 'the', 'football', 'world', 'cup', '2018', '?']	0.2377	1.5606	0.3478	37.0
282	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q49757> . ?s2  <http://www.wikidata.org/prop/direct/P50>  ?s1 . ?s2  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q571> .  } GROUP BY ?s1 ORDER BY DESC(COUNT(?s2)) OFFSET 0 LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q49757 has human-readable name ""poet.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which poet wrote the most books? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q2001>} 
 Where:
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q2001 has human-readable name ""Stanley Kubrick.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who directed Stanley Kubrick?	Which films did Stanley Kubrick direct?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q2001>}	['Who', 'directed', 'Stanley', 'Kubrick', '?']	['Which', 'films', 'did', 'Stanley', 'Kubrick', 'direct', '?']	0.1765	1.0451	0.2	17.0
283	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { ?uri wdt:P17 wd:Q16 ; wdt:P31/wdt:P279* wd:Q515 ; wdt:P1082 ?val } ORDER BY DESC(?val) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q16 has human-readable name ""Canada.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many inhabitants does the largest city in Canada have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q796 wdt:P1082 ?val . } 
 Where:
 wd:Q796 has human-readable name ""Iraq.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Iraq?	how much is the population Iraq?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q796 wdt:P1082 ?val . }	['What', 'is', 'the', 'population', 'of', 'Iraq', '?']	['how', 'much', 'is', 'the', 'population', 'Iraq', '?']	0.3365	2.0053	0.6667	11.0
284	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q829 wdt:P421 ?timezone . ?uri wdt:P31 wd:Q35657 ; wdt:P421 ?timezone . FILTER(?uri != wd:Q829) } 
 Where:
 wd:Q829 has human-readable name ""Utah.""
 wdt:P421 has human-readable name ""located in time zone.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P421 has human-readable name ""located in time zone.""
 wd:Q829 has human-readable name ""Utah.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which U.S. states are in the same time zone as Utah? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { ?uri wdt:P17 wd:Q16 ; wdt:P31/wdt:P279* wd:Q515 ; wdt:P1082 ?val } ORDER BY DESC(?val) LIMIT 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q16 has human-readable name ""Canada.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the largest city in Canada by population?	How many inhabitants does the largest city in Canada have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { ?uri wdt:P17 wd:Q16 ; wdt:P31/wdt:P279* wd:Q515 ; wdt:P1082 ?val } ORDER BY DESC(?val) LIMIT 1	['What', 'is', 'the', 'largest', 'city', 'in', 'Canada', 'by', 'population', '?']	['How', 'many', 'inhabitants', 'does', 'the', 'largest', 'city', 'in', 'Canada', 'have', '?']	0.372	1.9977	0.5263	32.0
285	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q11679 wdt:P50 ?uri . } 
 Where:
 wd:Q11679 has human-readable name ""The Hunger Games.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote The Hunger Games? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q30971 wdt:P36 ?capital . ?capital wdt:P6 ?uri . } 
 Where:
 wd:Q30971 has human-readable name ""French Polynesia.""
 wdt:P36 has human-readable name ""capital.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of the capital of French Polynesia?	Who is the mayor of the capital of French Polynesia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q30971 wdt:P36 ?capital . ?capital wdt:P6 ?uri . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'the', 'capital', 'of', 'French', 'Polynesia', '?']	['Who', 'is', 'the', 'mayor', 'of', 'the', 'capital', 'of', 'French', 'Polynesia', '?']	0.5784	2.6034	0.8235	15.0
286	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q62408 wdt:P131 ?uri . } 
 Where:
 wd:Q62408 has human-readable name ""Palace of Westminster.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the location of the Houses of Parliament? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?movie wdt:P31 wd:Q11424 ; wdt:P57 wd:Q16297  ; wdt:P161 ?uri . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P57 has human-readable name ""director.""
 wd:Q16297 has human-readable name ""William Shatner.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is a cast member in films directed by William Shatner?	Give me all actors starring in movies directed by William Shatner.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?movie wdt:P31 wd:Q11424 ; wdt:P57 wd:Q16297  ; wdt:P161 ?uri . }	['Who', 'is', 'a', 'cast', 'member', 'in', 'films', 'directed', 'by', 'William', 'Shatner', '?']	['Give', 'me', 'all', 'actors', 'starring', 'in', 'movies', 'directed', 'by', 'William', 'Shatner', '.']	0.2242	1.4937	0.3636	27.0
287	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } } 
 Where:
 wdt:P488 has human-readable name ""chairperson.""
 wd:Q22686 has human-readable name ""Donald Trump.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is Donald Trump's main business? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q76717 wdt:P2048 ?val . } 
 Where:
 wd:Q76717 has human-readable name ""Claudia Schiffer.""
 wdt:P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is Claudia Schiffer's height?	How tall is Claudia Schiffer?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q76717 wdt:P2048 ?val . }	"['What', 'is', 'Claudia', 'Schiffer', ""'s"", 'height', '?']"	['How', 'tall', 'is', 'Claudia', 'Schiffer', '?']	0.2876	1.4771	0.4	16.0
288	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q854383> <http://www.wikidata.org/prop/direct/P176>/<http://www.wikidata.org/prop/direct/P159> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q854383 has human-readable name ""Heineken.""
 http://www.wikidata.org/prop/direct/P176 has human-readable name ""manufacturer.""
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In what city is the Heineken brewery? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?country) as ?cnt) { ?country wdt:P31 wd:Q6256 ; wdt:P1082 ?population ; wdt:P2046 ?area . wd:Q183 wdt:P1082 ?germanPopulation . wd:Q183 wdt:P2046 ?germanArea . BIND((?population/?area) AS ?density ) BIND((?germanPopulation/?germanArea) AS ?germanDensity ) FILTER(?density > ?germanDensity)} 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q6256 has human-readable name ""country.""
 wdt:P1082 has human-readable name ""population.""
 wdt:P2046 has human-readable name ""area.""
 wd:Q183 has human-readable name ""Germany.""
 wdt:P1082 has human-readable name ""population.""
 wd:Q183 has human-readable name ""Germany.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which countries have a population density greater than Germany's?	how much is the population densty rank of germany?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?country) as ?cnt) { ?country wdt:P31 wd:Q6256 ; wdt:P1082 ?population ; wdt:P2046 ?area . wd:Q183 wdt:P1082 ?germanPopulation . wd:Q183 wdt:P2046 ?germanArea . BIND((?population/?area) AS ?density ) BIND((?germanPopulation/?germanArea) AS ?germanDensity ) FILTER(?density > ?germanDensity)}	"['Which', 'countries', 'have', 'a', 'population', 'density', 'greater', 'than', 'Germany', ""'s"", '?']"	['how', 'much', 'is', 'the', 'population', 'densty', 'rank', 'of', 'germany', '?']	0.2308	0.604	0.1111	28.0
289	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q339>  <http://www.wikidata.org/prop/direct/P61>  ?o1 .   ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q5> .  }  
 Where:
 http://www.wikidata.org/entity/Q339 has human-readable name ""Pluto.""
 http://www.wikidata.org/prop/direct/P61 has human-readable name ""discoverer or inventor.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q5 has human-readable name ""human.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who discovered Pluto? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P17 has human-readable name ""country.""
 wd:Q38 has human-readable name ""Italy.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest mountain in Italy by elevation above sea level?	What is the highest mountain in Italy?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Italy', 'by', 'elevation', 'above', 'sea', 'level', '?']	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Italy', '?']	0.4863	1.8462	0.6316	29.0
290	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q35600> <http://www.wikidata.org/prop/direct/P610> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q35600 has human-readable name ""Ural Mountains.""
 http://www.wikidata.org/prop/direct/P610 has human-readable name ""highest point.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the highest place of the Urals? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11410 ; wdt:P123 wd:Q928726 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11410 has human-readable name ""game.""
 wdt:P123 has human-readable name ""publisher.""
 wd:Q928726 has human-readable name ""GMT Games.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What games are published by GMT Games?	List all games by GMT.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11410 ; wdt:P123 wd:Q928726 . }	['What', 'games', 'are', 'published', 'by', 'GMT', 'Games', '?']	['List', 'all', 'games', 'by', 'GMT', '.']	0.2178	0.9694	0.5	25.0
291	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P20>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P856>  ?o2 .  }   
 Where:
 http://www.wikidata.org/entity/Q91 has human-readable name ""Abraham Lincoln.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 http://www.wikidata.org/prop/direct/P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does Abraham Lincoln's death place have a website? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q730> <http://www.wikidata.org/prop/direct/P37> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q730 has human-readable name ""Suriname.""
 http://www.wikidata.org/prop/direct/P37 has human-readable name ""official language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the official language of Suriname?	What is the official language of Suriname?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q730> <http://www.wikidata.org/prop/direct/P37> ?uri . }	['What', 'is', 'the', 'official', 'language', 'of', 'Suriname', '?']	['What', 'is', 'the', 'official', 'language', 'of', 'Suriname', '?']	1.0	3.0	1.0	0.0
292	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P176 wd:Q152815 . ?res wdt:P279*/wdt:P31 wd:Q15142889 . }  
 Where:
 wdt:P176 has human-readable name ""manufacturer.""
 wd:Q152815 has human-readable name ""Heckler & Koch.""
 wdt:P279 has human-readable name ""subclass of.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q15142889 has human-readable name ""weapon family.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which weapons did Heckler & Koch develop? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q214622> <http://www.wikidata.org/prop/direct/P20> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q214622 has human-readable name ""Nikos Kazantzakis.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did Nikos Kazantzakis die?	In which city did Nikos Kazantzakis die?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q214622> <http://www.wikidata.org/prop/direct/P20> ?uri }	['Where', 'did', 'Nikos', 'Kazantzakis', 'die', '?']	['In', 'which', 'city', 'did', 'Nikos', 'Kazantzakis', 'die', '?']	0.5444	1.7636	0.6667	12.0
293	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q208008 . } 
 Where:
 wdt:P38 has human-readable name ""currency.""
 wd:Q208008 has human-readable name ""cocoa bean.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which ancient empire could you pay with cocoa beans? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q14169302> <http://www.wikidata.org/prop/direct/P527> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q14169302 has human-readable name ""chocolate chip cookie.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the parts of a chocolate chip cookie?	What is in a chocolate chip cookie?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q14169302> <http://www.wikidata.org/prop/direct/P527> ?uri}	['What', 'are', 'the', 'parts', 'of', 'a', 'chocolate', 'chip', 'cookie', '?']	['What', 'is', 'in', 'a', 'chocolate', 'chip', 'cookie', '?']	0.4111	1.8	0.625	14.0
294	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { wd:Q43874 wdt:P40 ?uri . } 
 Where:
 wd:Q43874 has human-readable name ""Eddie Murphy.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many children does Eddie Murphy have? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q6386177> <http://www.wikidata.org/prop/direct/P17> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q6386177 has human-readable name ""Limerick Lake.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which country is Limerick Lake located in?	In which country is the Limerick Lake?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q6386177> <http://www.wikidata.org/prop/direct/P17> ?uri . }	['Which', 'country', 'is', 'Limerick', 'Lake', 'located', 'in', '?']	['In', 'which', 'country', 'is', 'the', 'Limerick', 'Lake', '?']	0.2943	1.875	0.4286	19.0
296	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . } 
 Where:
 wd:Q5401 has human-readable name ""Eurasia.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many people live in Eurasia? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P463 wd:Q7256860 . } 
 Where:
 wdt:P463 has human-readable name ""member of.""
 wd:Q7256860 has human-readable name ""The Prodigy.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which entities are members of The Prodigy?	Give me all members of Prodigy.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P463 wd:Q7256860 . }	['Which', 'entities', 'are', 'members', 'of', 'The', 'Prodigy', '?']	['Give', 'me', 'all', 'members', 'of', 'Prodigy', '.']	0.2178	1.0528	0.3077	18.0
297	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P106 wd:Q639669 . ?x wdt:P31 wd:Q571 ; wdt:P50 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q639669 has human-readable name ""musician.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q571 has human-readable name ""book.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which musician wrote the most books? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q220> <http://www.wikidata.org/prop/direct/P421> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q220 has human-readable name ""Rome.""
 http://www.wikidata.org/prop/direct/P421 has human-readable name ""located in time zone.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	In which time zone is Rome located?	In which time zone is Rome?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q220> <http://www.wikidata.org/prop/direct/P421> ?uri }	['In', 'which', 'time', 'zone', 'is', 'Rome', 'located', '?']	['In', 'which', 'time', 'zone', 'is', 'Rome', '?']	0.7071	2.4564	0.7692	8.0
299	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q23572> <http://www.wikidata.org/prop/direct/P86> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q23572 has human-readable name ""Game of Thrones.""
 http://www.wikidata.org/prop/direct/P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the Game of Thrones theme? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q151114 wdt:P658 ?track . ?track wdt:P162 ?uri . } 
 Where:
 wd:Q151114 has human-readable name ""The Wall.""
 wdt:P658 has human-readable name ""tracklist.""
 wdt:P162 has human-readable name ""producer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who produced the tracks on ""The Wall""?"	Who are the writers of the Wall album of Pink Floyd?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q151114 wdt:P658 ?track . ?track wdt:P162 ?uri . }	"['Who', 'produced', 'the', 'tracks', 'on', '``', 'The', 'Wall', ""''"", '?']"	['Who', 'are', 'the', 'writers', 'of', 'the', 'Wall', 'album', 'of', 'Pink', 'Floyd', '?']	0.2264	1.1595	0.25	34.0
300	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 _:a . ?uri wdt:P20 _:a . ?uri wdt:P106/wdt:P279* wd:Q10873124 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P106 has human-readable name ""occupation.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q10873124 has human-readable name ""chess player.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which Chess players died in the same place they were born in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q34370 wdt:P6 ?uri . } 
 Where:
 wd:Q34370 has human-readable name ""Rotterdam.""
 wdt:P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of Rotterdam?	Who is the mayor of Rotterdam?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q34370 wdt:P6 ?uri . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'Rotterdam', '?']	['Who', 'is', 'the', 'mayor', 'of', 'Rotterdam', '?']	0.3666	1.8716	0.7692	15.0
301	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q658375 wdt:P50 ?author . ?uri wdt:P50 ?author . FILTER(?uri != wd:Q658375) } 
 Where:
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 wdt:P50 has human-readable name ""author.""
 wdt:P50 has human-readable name ""author.""
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What other books have been written by the author of The Fault in Our Stars? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q515 ; wdt:P17 wd:Q408 ; wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the largest city in Australia by population?	What is the largest city in Australia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q515 ; wdt:P17 wd:Q408 ; wdt:P1082 ?population . } ORDER BY DESC(?population) LIMIT 1	['What', 'is', 'the', 'largest', 'city', 'in', 'Australia', 'by', 'population', '?']	['What', 'is', 'the', 'largest', 'city', 'in', 'Australia', '?']	0.6606	2.4	0.75	14.0
302	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q36107> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q36107 has human-readable name ""Muhammad Ali.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Show me the book that Muhammad Ali wrote. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2105 wdt:P26 ?uri . } 
 Where:
 wd:Q2105 has human-readable name ""Jacques Chirac.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is Jacques Chirac married to?	Who was married to president Chirac?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2105 wdt:P26 ?uri . }	['Who', 'is', 'Jacques', 'Chirac', 'married', 'to', '?']	['Who', 'was', 'married', 'to', 'president', 'Chirac', '?']	0.2615	2.0053	0.3333	25.0
303	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q937857 ; wdt:P19 ?birthPlace . ?birthPlace wdt:P17 wd:Q233 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q937857 has human-readable name ""association football player.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q233 has human-readable name ""Malta.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which soccer players were born on Malta? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q258 wdt:P122 ?uri . } 
 Where:
 wd:Q258 has human-readable name ""South Africa.""
 wdt:P122 has human-readable name ""basic form of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the basic form of government in South Africa?	What form of government is found in South Africa?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q258 wdt:P122 ?uri . }	['What', 'is', 'the', 'basic', 'form', 'of', 'government', 'in', 'South', 'Africa', '?']	['What', 'form', 'of', 'government', 'is', 'found', 'in', 'South', 'Africa', '?']	0.3613	2.7179	0.7368	22.0
304	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q12206942 wdt:P40 wd:Q51746 . } 
 Where:
 wd:Q12206942 has human-readable name ""Darth Vader.""
 wdt:P40 has human-readable name ""child.""
 wd:Q51746 has human-readable name ""Luke Skywalker.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Darth Vader Luke’s father? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { wd:Q1207989 wdt:P2048 ?num . } 
 Where:
 wd:Q1207989 has human-readable name ""Yokohama Marine Tower.""
 wdt:P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the height of Yokohama Marine Tower?	How high is the Yokohama Marine Tower?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { wd:Q1207989 wdt:P2048 ?num . }	['What', 'is', 'the', 'height', 'of', 'Yokohama', 'Marine', 'Tower', '?']	['How', 'high', 'is', 'the', 'Yokohama', 'Marine', 'Tower', '?']	0.3549	2.0	0.6667	16.0
305	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q49757> . ?s2  <http://www.wikidata.org/prop/direct/P50>  ?s1 . ?s2  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q571> .  } GROUP BY ?s1 ORDER BY DESC(COUNT(?s2)) OFFSET 0 LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q49757 has human-readable name ""poet.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which poet wrote the most books? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q1445650 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q1445650 has human-readable name ""holiday.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are all the holidays and their subclasses?	Which holidays are celebrated around the world?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q1445650 . }	['What', 'are', 'all', 'the', 'holidays', 'and', 'their', 'subclasses', '?']	['Which', 'holidays', 'are', 'celebrated', 'around', 'the', 'world', '?']	0.2785	1.3333	0.2667	34.0
306	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 _:a . ?uri wdt:P20 _:a . ?uri wdt:P106/wdt:P279* wd:Q10873124 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P106 has human-readable name ""occupation.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q10873124 has human-readable name ""chess player.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which Chess players died in the same place they were born in? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q3665646 ; wdt:P2048 ?height . } ORDER BY DESC(?height) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q3665646 has human-readable name ""basketball player.""
 wdt:P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the height of the tallest basketball player?	Who is the tallest basketball player?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q3665646 ; wdt:P2048 ?height . } ORDER BY DESC(?height) LIMIT 1	['What', 'is', 'the', 'height', 'of', 'the', 'tallest', 'basketball', 'player', '?']	['Who', 'is', 'the', 'tallest', 'basketball', 'player', '?']	0.4347	1.6844	0.7143	16.0
307	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P119 wd:Q3411252 . } 
 Where:
 wdt:P119 has human-readable name ""place of burial.""
 wd:Q3411252 has human-readable name ""Pyramid G1-a.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was buried in the Great Pyramid of Giza? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q874 wdt:P2936 ?uri . } 
 Where:
 wd:Q874 has human-readable name ""Turkmenistan.""
 wdt:P2936 has human-readable name ""language used.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many languages are spoken in Turkmenistan?	How many languages are spoken in Turkmenistan?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q874 wdt:P2936 ?uri . }	['How', 'many', 'languages', 'are', 'spoken', 'in', 'Turkmenistan', '?']	['How', 'many', 'languages', 'are', 'spoken', 'in', 'Turkmenistan', '?']	1.0	3.0	1.0	0.0
308	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 ; wdt:P19 wd:Q90 ; wdt:P569 ?birthDate . BIND(YEAR(?birthDate) as ?birthYear) . FILTER(?birthYear > 1950) } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q90 has human-readable name ""Paris.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors who were born in Paris after 1950. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q5809 wdt:P40 ?uri . } 
 Where:
 wd:Q5809 has human-readable name ""Che Guevara.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did Che Guevara have any children?	Did Che Guevara have children?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q5809 wdt:P40 ?uri . }	['Did', 'Che', 'Guevara', 'have', 'any', 'children', '?']	['Did', 'Che', 'Guevara', 'have', 'children', '?']	0.4889	2.2157	0.9091	4.0
309	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the book The Pillars of the Earth? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P166>  <http://www.wikidata.org/entity/Q844804> . } 
 Where:
 http://www.wikidata.org/entity/Q276186 has human-readable name ""Aki Kaurismäki.""
 http://www.wikidata.org/prop/direct/P166 has human-readable name ""award received.""
 http://www.wikidata.org/entity/Q844804 has human-readable name ""Cannes Film Festival Grand Prix.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did Aki Kaurismäki receive the Cannes Film Festival Grand Prix?	Did Kaurismäki ever win the Grand Prix at Cannes?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P166>  <http://www.wikidata.org/entity/Q844804> . }	['Did', 'Aki', 'Kaurismäki', 'receive', 'the', 'Cannes', 'Film', 'Festival', 'Grand', 'Prix', '?']	['Did', 'Kaurismäki', 'ever', 'win', 'the', 'Grand', 'Prix', 'at', 'Cannes', '?']	0.2353	2.114	0.4211	35.0
310	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q134041 wdt:P279+ wd:Q40050 . } 
 Where:
 wd:Q134041 has human-readable name ""cola.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q40050 has human-readable name ""drink.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is Cola a beverage? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q90 has human-readable name ""Paris.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 http://www.wikidata.org/prop/direct/P102 has human-readable name ""member of political party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is a member of a political party and is the head of government in Paris?	To which party does the mayor of Paris belong?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?uri }	['Who', 'is', 'a', 'member', 'of', 'a', 'political', 'party', 'and', 'is', 'the', 'head', 'of', 'government', 'in', 'Paris', '?']	['To', 'which', 'party', 'does', 'the', 'mayor', 'of', 'Paris', 'belong', '?']	0.2775	0.977	0.2727	52.0
311	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the book The pillars of the Earth? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q10841764 ; wdt:P1350 ?num . } ORDER BY DESC(?num) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q10841764 has human-readable name ""Formula One driver.""
 wdt:P1350 has human-readable name ""number of matches played/races/starts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What Formula One driver has played the most number of matches or races?	Who is the Formula 1 race driver with the most races?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q10841764 ; wdt:P1350 ?num . } ORDER BY DESC(?num) LIMIT 1	['What', 'Formula', 'One', 'driver', 'has', 'played', 'the', 'most', 'number', 'of', 'matches', 'or', 'races', '?']	['Who', 'is', 'the', 'Formula', '1', 'race', 'driver', 'with', 'the', 'most', 'races', '?']	0.2425	1.5419	0.4348	43.0
312	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q989 has human-readable name ""John Paul II.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q19546 has human-readable name ""pope.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which pope succeeded John Paul II? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P17> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q2663195 has human-readable name ""Sitecore.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What country is Sitecore associated with?	What country is Sitecore from?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P17> ?uri }	['What', 'country', 'is', 'Sitecore', 'associated', 'with', '?']	['What', 'country', 'is', 'Sitecore', 'from', '?']	0.4347	1.8464	0.7273	14.0
313	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2009573 wdt:P26 ?o1 . } 
 Where:
 wd:Q2009573 has human-readable name ""James Bond.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Is James Bond married? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q40912 wdt:P19 ?uri } 
 Where:
 wd:Q40912 has human-readable name ""Frank Sinatra.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was Frank Sinatra born?	Give me the birth place of Frank Sinatra.	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q40912 wdt:P19 ?uri }	['Where', 'was', 'Frank', 'Sinatra', 'born', '?']	['Give', 'me', 'the', 'birth', 'place', 'of', 'Frank', 'Sinatra', '.']	0.1343	0.5283	0.3077	27.0
314	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5582> <http://www.wikidata.org/prop/direct/P737> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q5582 has human-readable name ""Vincent van Gogh.""
 http://www.wikidata.org/prop/direct/P737 has human-readable name ""influenced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was Vincent van Gogh inspired by? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1481540 wdt:P161 wd:Q45772 . } 
 Where:
 wd:Q1481540 has human-readable name ""Velvet Goldmine.""
 wdt:P161 has human-readable name ""cast member.""
 wd:Q45772 has human-readable name ""Christian Bale.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Was Christian Bale a cast member in Velvet Goldmine?	Is Christian Bale starring in Velvet Goldmine?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1481540 wdt:P161 wd:Q45772 . }	['Was', 'Christian', 'Bale', 'a', 'cast', 'member', 'in', 'Velvet', 'Goldmine', '?']	['Is', 'Christian', 'Bale', 'starring', 'in', 'Velvet', 'Goldmine', '?']	0.3124	1.8	0.625	13.0
315	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q806349 has human-readable name ""bandleader.""
 wdt:P1303 has human-readable name ""instrument.""
 wd:Q8338 has human-readable name ""trumpet.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me a list of all bandleaders that play trumpet. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P22> <http://www.wikidata.org/entity/Q179150> . ?uri <http://www.wikidata.org/prop/direct/P25> <http://www.wikidata.org/entity/Q12003> . } 
 Where:
 http://www.wikidata.org/prop/direct/P22 has human-readable name ""father.""
 http://www.wikidata.org/entity/Q179150 has human-readable name ""Sonny Bono.""
 http://www.wikidata.org/prop/direct/P25 has human-readable name ""mother.""
 http://www.wikidata.org/entity/Q12003 has human-readable name ""Cher.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the father of Sonny Bono and the mother of Cher?	Who is the son of Sonny and Cher?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P22> <http://www.wikidata.org/entity/Q179150> . ?uri <http://www.wikidata.org/prop/direct/P25> <http://www.wikidata.org/entity/Q12003> . }	['Who', 'is', 'the', 'father', 'of', 'Sonny', 'Bono', 'and', 'the', 'mother', 'of', 'Cher', '?']	['Who', 'is', 'the', 'son', 'of', 'Sonny', 'and', 'Cher', '?']	0.2478	1.9507	0.7778	25.0
317	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q515 ; wdt:P1082 ?population . } ORDER BY ?population LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which city has the least inhabitants? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1009> <http://www.wikidata.org/prop/direct/P36> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q1009 has human-readable name ""Cameroon.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the capital of Cameroon?	What is the capital of Cameroon?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1009> <http://www.wikidata.org/prop/direct/P36> ?uri}	['What', 'is', 'the', 'capital', 'of', 'Cameroon', '?']	['What', 'is', 'the', 'capital', 'of', 'Cameroon', '?']	1.0	2.8074	1.0	0.0
318	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the book The Pillars of the Earth? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q37876 wdt:P19 ?uri . ?uri wdt:P17 wd:Q30 . } 
 Where:
 wd:Q37876 has human-readable name ""Natalie Portman.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Natalie Portman born in the United States of America?	Was Natalie Portman born in the United States?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q37876 wdt:P19 ?uri . ?uri wdt:P17 wd:Q30 . }	['Is', 'Natalie', 'Portman', 'born', 'in', 'the', 'United', 'States', 'of', 'America', '?']	['Was', 'Natalie', 'Portman', 'born', 'in', 'the', 'United', 'States', '?']	0.59	2.3054	0.6667	13.0
320	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q12280 has human-readable name ""bridge.""
 wdt:P177 has human-readable name ""crosses.""
 wd:Q1471 has human-readable name ""Seine.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which bridges cross the Seine? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q873 wdt:P40 ?uri . ?uri wdt:P569 ?date . } ORDER BY ASC(?date) LIMIT 1 
 Where:
 wd:Q873 has human-readable name ""Meryl Streep.""
 wdt:P40 has human-readable name ""child.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was Meryl Streep's earliest child born?	Who is the oldest child of Meryl Streep?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q873 wdt:P40 ?uri . ?uri wdt:P569 ?date . } ORDER BY ASC(?date) LIMIT 1	"['When', 'was', 'Meryl', 'Streep', ""'s"", 'earliest', 'child', 'born', '?']"	['Who', 'is', 'the', 'oldest', 'child', 'of', 'Meryl', 'Streep', '?']	0.2228	1.4089	0.1333	33.0
321	"---- Start Example ---- 
 Having a SPARQL query: PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?presStatement . ?presStatement ps:P39 wd:Q11696 ; pq:P580 ?startPres ; pq:P582 ?endPres . ?uri p:P39 ?viceStatement . ?viceStatement ps:P39 wd:Q11699 ; pq:P580 ?startVice ; pq:P582 ?endVice . FILTER(?startVice >= ?startPres && ?startVice <= ?endPres) } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11699 has human-readable name ""Vice President of the United States.""
 pq:P580 has human-readable name ""start time.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was John F. Kennedy's vice president? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q7725310 has human-readable name ""series of creative works.""
 wdt:P170 has human-readable name ""creator.""
 wd:Q8704 has human-readable name ""Walt Disney.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who created a series of creative works related to Walt Disney?	Which television shows were created by Walt Disney?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . }	['Who', 'created', 'a', 'series', 'of', 'creative', 'works', 'related', 'to', 'Walt', 'Disney', '?']	['Which', 'television', 'shows', 'were', 'created', 'by', 'Walt', 'Disney', '?']	0.1865	1.0566	0.3158	29.0
324	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q237072 wdt:P1113 ?newNumOfEpisodes . wd:Q2367132 wdt:P1113 ?oldNumOfEpisodes . FILTER (?newNumOfEpisodes > ?oldNumOfEpisodes) } 
 Where:
 wd:Q237072 has human-readable name ""Battlestar Galactica.""
 wdt:P1113 has human-readable name ""number of episodes.""
 wd:Q2367132 has human-readable name ""Battlestar Galactica.""
 wdt:P1113 has human-readable name ""number of episodes.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does the new Battlestar Galactica series have more episodes than the old one? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q11817> <http://www.wikidata.org/prop/direct/P607> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q11817 has human-readable name ""Andrew Jackson.""
 http://www.wikidata.org/prop/direct/P607 has human-readable name ""conflict.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Does Andrew Jackson have any conflicts documented?	Was U.S. president Jackson involved in a war?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q11817> <http://www.wikidata.org/prop/direct/P607> ?uri . }	['Does', 'Andrew', 'Jackson', 'have', 'any', 'conflicts', 'documented', '?']	['Was', 'U.S.', 'president', 'Jackson', 'involved', 'in', 'a', 'war', '?']	0.208	0.7475	0.125	40.0
325	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5620660> ^<http://www.wikidata.org/prop/qualifier/P453>/<http://www.wikidata.org/prop/statement/P161> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q5620660 has human-readable name ""Gus Fring.""
 http://www.wikidata.org/prop/qualifier/P453 has human-readable name ""character role.""
 http://www.wikidata.org/prop/statement/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who played Gus Fring in Breaking Bad? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q25173 wdt:P729 ?date . } 
 Where:
 wd:Q25173 has human-readable name ""Titanic.""
 wdt:P729 has human-readable name ""service entry.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did the Titanic enter service?	When was the Titanic completed?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q25173 wdt:P729 ?date . }	['When', 'did', 'the', 'Titanic', 'enter', 'service', '?']	['When', 'was', 'the', 'Titanic', 'completed', '?']	0.2473	1.4771	0.5455	15.0
326	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q2743 ; wdt:P86 wd:Q152505 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q2743 has human-readable name ""musical.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q152505 has human-readable name ""Leonard Bernstein.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all the musicals with music by Leonard Bernstein. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q9036 wdt:P166 wd:Q38104 . } 
 Where:
 wd:Q9036 has human-readable name ""Nikola Tesla.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q38104 has human-readable name ""Nobel Prize in Physics.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did Nikola Tesla receive the Nobel Prize in Physics?	Did Tesla win a nobel prize in physics?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q9036 wdt:P166 wd:Q38104 . }	['Did', 'Nikola', 'Tesla', 'receive', 'the', 'Nobel', 'Prize', 'in', 'Physics', '?']	['Did', 'Tesla', 'win', 'a', 'nobel', 'prize', 'in', 'physics', '?']	0.2765	1.268	0.3529	19.0
327	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q25173 wdt:P729 ?date . } 
 Where:
 wd:Q25173 has human-readable name ""Titanic.""
 wdt:P729 has human-readable name ""service entry.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When was the Titanic completed? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri wdt:P31 wd:Q15149663 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q15149663 has human-readable name ""state of Mexico.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many instances are there of the state of Mexico?	How many states are in Mexico?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri wdt:P31 wd:Q15149663 . }	['How', 'many', 'instances', 'are', 'there', 'of', 'the', 'state', 'of', 'Mexico', '?']	['How', 'many', 'states', 'are', 'in', 'Mexico', '?']	0.2572	1.2761	0.5333	25.0
328	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q9036 wdt:P166 wd:Q38104 . } 
 Where:
 wd:Q9036 has human-readable name ""Nikola Tesla.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q38104 has human-readable name ""Nobel Prize in Physics.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Tesla win a nobel prize in physics? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P1344 wd:Q127050 . ?scientist wdt:P279* wd:Q901 . ?uri wdt:P106 ?scientist . ?uri wdt:P166 wd:Q35637 . } 
 Where:
 wdt:P1344 has human-readable name ""participant in.""
 wd:Q127050 has human-readable name ""Manhattan Project.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q901 has human-readable name ""scientist.""
 wdt:P106 has human-readable name ""occupation.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q35637 has human-readable name ""Nobel Peace Prize.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Did any scientist who participated in the Manhattan Project win a Nobel Peace Prize?	Which scientist is known for the Manhattan Project and the Nobel Peace Prize?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P1344 wd:Q127050 . ?scientist wdt:P279* wd:Q901 . ?uri wdt:P106 ?scientist . ?uri wdt:P166 wd:Q35637 . }	['Did', 'any', 'scientist', 'who', 'participated', 'in', 'the', 'Manhattan', 'Project', 'win', 'a', 'Nobel', 'Peace', 'Prize', '?']	['Which', 'scientist', 'is', 'known', 'for', 'the', 'Manhattan', 'Project', 'and', 'the', 'Nobel', 'Peace', 'Prize', '?']	0.246	2.0354	0.5385	31.0
329	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q622188 wdt:P571 ?date . } 
 Where:
 wd:Q622188 has human-readable name ""Hells Angels.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When were the Hells Angels founded? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?val WHERE {  <http://www.wikidata.org/entity/Q2608065> <http://www.wikidata.org/prop/direct/P2130> ?val } 
 Where:
 http://www.wikidata.org/entity/Q2608065 has human-readable name ""The Lego Movie.""
 http://www.wikidata.org/prop/direct/P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the cost of making The Lego Movie?	How much did the Lego Movie cost?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?val WHERE {  <http://www.wikidata.org/entity/Q2608065> <http://www.wikidata.org/prop/direct/P2130> ?val }	['What', 'is', 'the', 'cost', 'of', 'making', 'The', 'Lego', 'Movie', '?']	['How', 'much', 'did', 'the', 'Lego', 'Movie', 'cost', '?']	0.2253	1.5	0.25	28.0
330	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q33506 ; wdt:P131 wd:Q90 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q33506 has human-readable name ""museum.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q90 has human-readable name ""Paris.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many museums does Paris have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q368577 wdt:P86 ?uri . } 
 Where:
 wd:Q368577 has human-readable name ""Harold and Maude.""
 wdt:P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who composed the music for ""Harold and Maude""?"	Who composed the music for Harold and Maude?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q368577 wdt:P86 ?uri . }	"['Who', 'composed', 'the', 'music', 'for', '``', 'Harold', 'and', 'Maude', ""''"", '?']"	['Who', 'composed', 'the', 'music', 'for', 'Harold', 'and', 'Maude', '?']	0.4833	2.5936	0.75	2.0
331	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P106 wd:Q639669 . ?x wdt:P31 wd:Q571 ; wdt:P50 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q639669 has human-readable name ""musician.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q571 has human-readable name ""book.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which musician wrote the most books? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q21191270> . ?uri <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q5274359> }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q21191270 has human-readable name ""television series episode.""
 http://www.wikidata.org/prop/direct/P361 has human-readable name ""part of.""
 http://www.wikidata.org/entity/Q5274359 has human-readable name ""The Sopranos, season 1.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which television series episodes are part of The Sopranos, season 1?	List all episodes of the first season of the HBO television series The Sopranos.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q21191270> . ?uri <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q5274359> } 	['Which', 'television', 'series', 'episodes', 'are', 'part', 'of', 'The', 'Sopranos', ',', 'season', '1', '?']	['List', 'all', 'episodes', 'of', 'the', 'first', 'season', 'of', 'the', 'HBO', 'television', 'series', 'The', 'Sopranos', '.']	0.2232	1.8591	0.2609	59.0
332	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q90> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q90 has human-readable name ""Paris.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 http://www.wikidata.org/prop/direct/P102 has human-readable name ""member of political party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. To which party does the mayor of Paris belong? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q515 ; wdt:P1082 ?population . } ORDER BY ?population LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the city with the smallest population?	Which city has the least inhabitants?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q515 ; wdt:P1082 ?population . } ORDER BY ?population LIMIT 1	['What', 'is', 'the', 'city', 'with', 'the', 'smallest', 'population', '?']	['Which', 'city', 'has', 'the', 'least', 'inhabitants', '?']	0.2592	0.9358	0.3077	26.0
333	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q58483083 ; wdt:P86 wd:Q2808 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q58483083 has human-readable name ""dramatico-musical work.""
 wdt:P86 has human-readable name ""composer.""
 wd:Q2808 has human-readable name ""Elton John.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all the musicals with music by Elton John. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q171684> <http://www.wikidata.org/prop/direct/P119> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q171684 has human-readable name ""Syngman Rhee.""
 http://www.wikidata.org/prop/direct/P119 has human-readable name ""place of burial.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is Syngman Rhee buried?	Where is Syngman Rhee buried?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q171684> <http://www.wikidata.org/prop/direct/P119> ?uri  . }	['Where', 'is', 'Syngman', 'Rhee', 'buried', '?']	['Where', 'is', 'Syngman', 'Rhee', 'buried', '?']	1.0	2.585	1.0	0.0
334	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q5879 wdt:P19 ?res . }  
 Where:
 wd:Q5879 has human-readable name ""Johann Wolfgang von Goethe.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is the birthplace of Goethe? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE {  <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> <http://www.wikidata.org/entity/Q8682>} 
 Where:
 http://www.wikidata.org/entity/Q142794 has human-readable name ""Neymar.""
 http://www.wikidata.org/prop/direct/P54 has human-readable name ""member of sports team.""
 http://www.wikidata.org/entity/Q8682 has human-readable name ""Real Madrid CF.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Neymar a member of Real Madrid CF?	Does Neymar play for Real Madrid?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE {  <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> <http://www.wikidata.org/entity/Q8682>}	['Is', 'Neymar', 'a', 'member', 'of', 'Real', 'Madrid', 'CF', '?']	['Does', 'Neymar', 'play', 'for', 'Real', 'Madrid', '?']	0.2228	1.2477	0.2857	16.0
335	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?uri . } 
 Where:
 wd:Q5451 has human-readable name ""Himalayas.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. To which countries does the Himalayan mountain system extend? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . } 
 Where:
 wd:Q1163227 has human-readable name ""The Pillars of the Earth.""
 wdt:P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the author of ""The Pillars of the Earth""?"	Who wrote the book The Pillars of the Earth?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . }	"['Who', 'is', 'the', 'author', 'of', '``', 'The', 'Pillars', 'of', 'the', 'Earth', ""''"", '?']"	['Who', 'wrote', 'the', 'book', 'The', 'Pillars', 'of', 'the', 'Earth', '?']	0.3252	1.9738	0.5	13.0
336	"---- Start Example ---- 
 Having a SPARQL query: ASK WHERE {  <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> <http://www.wikidata.org/entity/Q8682>} 
 Where:
 http://www.wikidata.org/entity/Q142794 has human-readable name ""Neymar.""
 http://www.wikidata.org/prop/direct/P54 has human-readable name ""member of sports team.""
 http://www.wikidata.org/entity/Q8682 has human-readable name ""Real Madrid CF.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Does Neymar play for Real Madrid? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q152316 wdt:P22 ?father ; wdt:P25 ?mother . wd:Q36812 wdt:P22 ?father ; wdt:P25 ?mother . } 
 Where:
 wd:Q152316 has human-readable name ""Prince Harry, Duke of Sussex.""
 wdt:P22 has human-readable name ""father.""
 wd:Q152316 has human-readable name ""Prince Harry, Duke of Sussex.""
 wdt:P25 has human-readable name ""mother.""
 wd:Q36812 has human-readable name ""William, Prince of Wales.""
 wdt:P22 has human-readable name ""father.""
 wd:Q36812 has human-readable name ""William, Prince of Wales.""
 wdt:P25 has human-readable name ""mother.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Prince Harry, Duke of Sussex, the child of William, Prince of Wales, and the same mother?	Do Prince Harry and Prince William have the same parents?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q152316 wdt:P22 ?father ; wdt:P25 ?mother . wd:Q36812 wdt:P22 ?father ; wdt:P25 ?mother . }	['Is', 'Prince', 'Harry', ',', 'Duke', 'of', 'Sussex', ',', 'the', 'child', 'of', 'William', ',', 'Prince', 'of', 'Wales', ',', 'and', 'the', 'same', 'mother', '?']	['Do', 'Prince', 'Harry', 'and', 'Prince', 'William', 'have', 'the', 'same', 'parents', '?']	0.2134	1.2147	0.2727	55.0
337	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q148>  <http://www.wikidata.org/prop/direct/P38>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q148 has human-readable name ""People's Republic of China.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the currency of China. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q937 has human-readable name ""Albert Einstein.""
 http://www.wikidata.org/prop/direct/P184 has human-readable name ""doctoral advisor.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who was the doctoral advisor of Albert Einstein?	Who was the doctoral supervisor of Albert Einstein?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?uri}	['Who', 'was', 'the', 'doctoral', 'advisor', 'of', 'Albert', 'Einstein', '?']	['Who', 'was', 'the', 'doctoral', 'supervisor', 'of', 'Albert', 'Einstein', '?']	0.5969	2.8177	0.875	5.0
338	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Danish films. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1079 wdt:P1113 ?nBbEpisodes . wd:Q23572 wdt:P1113 ?nGotEpisodes . FILTER(?nBbEpisodes > ?nGotEpisodes) } 
 Where:
 wd:Q1079 has human-readable name ""Breaking Bad.""
 wdt:P1113 has human-readable name ""number of episodes.""
 wd:Q23572 has human-readable name ""Game of Thrones.""
 wdt:P1113 has human-readable name ""number of episodes.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which TV show has more episodes, Breaking Bad or Game of Thrones?	Does Breaking Bad have more episodes than Game of Thrones?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1079 wdt:P1113 ?nBbEpisodes . wd:Q23572 wdt:P1113 ?nGotEpisodes . FILTER(?nBbEpisodes > ?nGotEpisodes) }	['Which', 'TV', 'show', 'has', 'more', 'episodes', ',', 'Breaking', 'Bad', 'or', 'Game', 'of', 'Thrones', '?']	['Does', 'Breaking', 'Bad', 'have', 'more', 'episodes', 'than', 'Game', 'of', 'Thrones', '?']	0.2402	1.9768	0.4545	33.0
339	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q5879 wdt:P19 ?res . }  
 Where:
 wd:Q5879 has human-readable name ""Johann Wolfgang von Goethe.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where is the birthplace of Goethe? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5582> <http://www.wikidata.org/prop/direct/P737> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q5582 has human-readable name ""Vincent van Gogh.""
 http://www.wikidata.org/prop/direct/P737 has human-readable name ""influenced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who influenced Vincent van Gogh?	Who was Vincent van Gogh inspired by?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5582> <http://www.wikidata.org/prop/direct/P737> ?uri . }	['Who', 'influenced', 'Vincent', 'van', 'Gogh', '?']	['Who', 'was', 'Vincent', 'van', 'Gogh', 'inspired', 'by', '?']	0.2482	1.7636	0.5	22.0
340	"---- Start Example ---- 
 Having a SPARQL query:  SELECT ?o2 WHERE { <http://www.wikidata.org/entity/Q5089>  <http://www.wikidata.org/prop/direct/P885>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  ?o2 .  }  
 Where:
 http://www.wikidata.org/entity/Q5089 has human-readable name ""Ganges.""
 http://www.wikidata.org/prop/direct/P885 has human-readable name ""origin of the watercourse.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which country does the Ganges start? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12495 wdt:P1101 ?bkFloors . ?uri wdt:P1101 ?otherFloors . FILTER (?otherFloors > ?bkFloors) } ORDER BY ?otherFloors LIMIT 1 
 Where:
 wd:Q12495 has human-readable name ""Burj Khalifa.""
 wdt:P1101 has human-readable name ""floors above ground.""
 wdt:P1101 has human-readable name ""floors above ground.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What building has the highest number of floors above ground compared to the Burj Khalifa?	Which building after the Burj Khalifa has the most floors?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12495 wdt:P1101 ?bkFloors . ?uri wdt:P1101 ?otherFloors . FILTER (?otherFloors > ?bkFloors) } ORDER BY ?otherFloors LIMIT 1	['What', 'building', 'has', 'the', 'highest', 'number', 'of', 'floors', 'above', 'ground', 'compared', 'to', 'the', 'Burj', 'Khalifa', '?']	['Which', 'building', 'after', 'the', 'Burj', 'Khalifa', 'has', 'the', 'most', 'floors', '?']	0.1964	1.6714	0.2609	59.0
342	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5620660> ^<http://www.wikidata.org/prop/qualifier/P453>/<http://www.wikidata.org/prop/statement/P161> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q5620660 has human-readable name ""Gus Fring.""
 http://www.wikidata.org/prop/qualifier/P453 has human-readable name ""character role.""
 http://www.wikidata.org/prop/statement/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who played Gus Fring in Breaking Bad? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?value WHERE { wd:Q104123 wdt:P2130 ?value . } 
 Where:
 wd:Q104123 has human-readable name ""Pulp Fiction.""
 wdt:P2130 has human-readable name ""cost.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What was the cost of making Pulp Fiction?	How much did Pulp Fiction cost?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?value WHERE { wd:Q104123 wdt:P2130 ?value . }	['What', 'was', 'the', 'cost', 'of', 'making', 'Pulp', 'Fiction', '?']	['How', 'much', 'did', 'Pulp', 'Fiction', 'cost', '?']	0.2228	1.2477	0.1429	27.0
343	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2005 wdt:P737 ?uri . } 
 Where:
 wd:Q2005 has human-readable name ""JavaScript.""
 wdt:P737 has human-readable name ""influenced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which programming languages influenced Javascript? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q426173 wdt:P31/wdt:P279* wd:Q8054 . } 
 Where:
 wd:Q426173 has human-readable name ""proinsulin.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q8054 has human-readable name ""protein.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is proinsulin a type of protein?	Is proinsulin a protein?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q426173 wdt:P31/wdt:P279* wd:Q8054 . }	['Is', 'proinsulin', 'a', 'type', 'of', 'protein', '?']	['Is', 'proinsulin', 'a', 'protein', '?']	0.3365	1.6585	0.8	8.0
344	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q170645 wdt:P3967 ?finalEvent . ?finalEvent wdt:P580 ?val . } 
 Where:
 wd:Q170645 has human-readable name ""2018 FIFA World Cup.""
 wdt:P3967 has human-readable name ""final event.""
 wdt:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When will start the final match of the football world cup 2018? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1617 wdt:P279 ?uri . wd:Q9168 wdt:P279 ?uri . } 
 Where:
 wd:Q1617 has human-readable name ""Urdu.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q9168 has human-readable name ""Persian.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Urdu a subclass of Persian?	Do Urdu and Persian have a common root?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q1617 wdt:P279 ?uri . wd:Q9168 wdt:P279 ?uri . }	['Is', 'Urdu', 'a', 'subclass', 'of', 'Persian', '?']	['Do', 'Urdu', 'and', 'Persian', 'have', 'a', 'common', 'root', '?']	0.2116	1.3879	0.2857	26.0
345	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q9903 has human-readable name ""Ming dynasty.""
 http://www.wikidata.org/prop/direct/P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. When did the Ming dynasty dissolve? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?movie wdt:P31 wd:Q11424 ; wdt:P162 wd:Q193668 ; wdt:P495 wd:Q29 ; wdt:P161 ?uri . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P162 has human-readable name ""producer.""
 wd:Q193668 has human-readable name ""Benicio del Toro.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q29 has human-readable name ""Spain.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the producer of the film in which Benicio del Toro is a cast member and the country of origin is Spain?	Who is starring in Spanish movies produced by Benicio del Toro?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?movie wdt:P31 wd:Q11424 ; wdt:P162 wd:Q193668 ; wdt:P495 wd:Q29 ; wdt:P161 ?uri . }	['Who', 'is', 'the', 'producer', 'of', 'the', 'film', 'in', 'which', 'Benicio', 'del', 'Toro', 'is', 'a', 'cast', 'member', 'and', 'the', 'country', 'of', 'origin', 'is', 'Spain', '?']	['Who', 'is', 'starring', 'in', 'Spanish', 'movies', 'produced', 'by', 'Benicio', 'del', 'Toro', '?']	0.1394	1.0456	0.3448	80.0
346	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q658375 wdt:P50 ?author . ?uri wdt:P50 ?author . FILTER(?uri != wd:Q658375) } 
 Where:
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 wdt:P50 has human-readable name ""author.""
 wdt:P50 has human-readable name ""author.""
 wd:Q658375 has human-readable name ""The Fault in Our Stars.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What other books have been written by the author of The Fault in Our Stars? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q5513> <http://www.wikidata.org/prop/direct/P2046> ?area1 . <http://www.wikidata.org/entity/Q5525> <http://www.wikidata.org/prop/direct/P2046> ?area2 . FILTER(?area1 > ?area2) } 
 Where:
 http://www.wikidata.org/entity/Q5513 has human-readable name ""Lake Baikal.""
 http://www.wikidata.org/prop/direct/P2046 has human-readable name ""area.""
 http://www.wikidata.org/entity/Q5525 has human-readable name ""Great Bear Lake.""
 http://www.wikidata.org/prop/direct/P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which lake has a greater area, Lake Baikal or Great Bear Lake?	Is Lake Baikal bigger than the Great Bear Lake?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q5513> <http://www.wikidata.org/prop/direct/P2046> ?area1 . <http://www.wikidata.org/entity/Q5525> <http://www.wikidata.org/prop/direct/P2046> ?area2 . FILTER(?area1 > ?area2) }	['Which', 'lake', 'has', 'a', 'greater', 'area', ',', 'Lake', 'Baikal', 'or', 'Great', 'Bear', 'Lake', '?']	['Is', 'Lake', 'Baikal', 'bigger', 'than', 'the', 'Great', 'Bear', 'Lake', '?']	0.2114	1.4347	0.4762	32.0
347	"---- Start Example ---- 
 Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE {    ?s1  ?p1  <http://www.wikidata.org/entity/Q56008> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> .  ?s1  <http://www.wikidata.org/prop/direct/P2769> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/entity/Q56008 has human-readable name ""Tim Burton.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P2769 has human-readable name ""budget.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which of Tim Burton's films had the highest budget? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1564644> <http://www.wikidata.org/prop/direct/P527> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q1564644 has human-readable name ""Foundation series.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the parts of the Foundation series?	Show me all books in Asimov's Foundation series.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1564644> <http://www.wikidata.org/prop/direct/P527> ?uri }	['What', 'are', 'the', 'parts', 'of', 'the', 'Foundation', 'series', '?']	"['Show', 'me', 'all', 'books', 'in', 'Asimov', ""'s"", 'Foundation', 'series', '.']"	0.1676	0.7045	0.1333	23.0
348	"---- Start Example ---- 
 Having a SPARQL query:  SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q170596>  <http://www.wikidata.org/prop/direct/P607>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q170596 has human-readable name ""T. E. Lawrence.""
 http://www.wikidata.org/prop/direct/P607 has human-readable name ""conflict.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which military conflicts did Lawrence of Arabia participate? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1339 wdt:P19 ?uri . } 
 Where:
 wd:Q1339 has human-readable name ""Johann Sebastian Bach.""
 wdt:P19 has human-readable name ""place of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where was Johann Sebastian Bach born?	Where was Bach born?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1339 wdt:P19 ?uri . }	['Where', 'was', 'Johann', 'Sebastian', 'Bach', 'born', '?']	['Where', 'was', 'Bach', 'born', '?']	0.3365	1.6585	0.8	17.0
349	"---- Start Example ---- 
 Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?uri WHERE { wd:Q9696 p:P39 ?statement . ?statement ps:P39 wd:Q11696 ; pq:P1366 ?uri . } 
 Where:
 wd:Q9696 has human-readable name ""John F. Kennedy.""
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the successor of John F. Kennedy? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?metro wdt:P31 wd:Q5503 ; wdt:P571 ?inception ; wdt:P131 ?uri . } ORDER BY ?inception LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q5503 has human-readable name ""rapid transit.""
 wdt:P571 has human-readable name ""inception.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the earliest located administrative territorial entity of a rapid transit system?	Which city has the oldest running metro?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?metro wdt:P31 wd:Q5503 ; wdt:P571 ?inception ; wdt:P131 ?uri . } ORDER BY ?inception LIMIT 1	['What', 'is', 'the', 'earliest', 'located', 'administrative', 'territorial', 'entity', 'of', 'a', 'rapid', 'transit', 'system', '?']	['Which', 'city', 'has', 'the', 'oldest', 'running', 'metro', '?']	0.2256	0.4286	0.1	67.0
350	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q868 wdt:P737 wd:Q913 . } 
 Where:
 wd:Q868 has human-readable name ""Aristotle.""
 wdt:P737 has human-readable name ""influenced by.""
 wd:Q913 has human-readable name ""Socrates.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Socrates influence Aristotle? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q125006 wdt:P287 ?uri . } 
 Where:
 wd:Q125006 has human-readable name ""Brooklyn Bridge.""
 wdt:P287 has human-readable name ""designed by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who designed the Brooklyn Bridge?	Who designed the Brooklyn Bridge?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q125006 wdt:P287 ?uri . }	['Who', 'designed', 'the', 'Brooklyn', 'Bridge', '?']	['Who', 'designed', 'the', 'Brooklyn', 'Bridge', '?']	1.0	2.585	1.0	0.0
351	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . ?uri <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q1408> . ?uri <http://www.wikidata.org/prop/direct/P1082> ?population . FILTER(?population > 100000) } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/entity/Q1408 has human-readable name ""New Jersey.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all cities in New Jersey with more than 100000 inhabitants. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . } 
 Where:
 wd:Q5401 has human-readable name ""Eurasia.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Eurasia?	How many people live in Eurasia?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . }	['What', 'is', 'the', 'population', 'of', 'Eurasia', '?']	['How', 'many', 'people', 'live', 'in', 'Eurasia', '?']	0.208	0.8021	0.1667	19.0
353	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q23572> <http://www.wikidata.org/prop/direct/P86> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q23572 has human-readable name ""Game of Thrones.""
 http://www.wikidata.org/prop/direct/P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who wrote the Game of Thrones theme? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q949779 wdt:P1082 ?val . } 
 Where:
 wd:Q949779 has human-readable name ""Melbourne.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the population of Melbourne?	What is the total population of Melbourne, Florida?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q949779 wdt:P1082 ?val . }	['What', 'is', 'the', 'population', 'of', 'Melbourne', '?']	['What', 'is', 'the', 'total', 'population', 'of', 'Melbourne', ',', 'Florida', '?']	0.3047	1.9429	0.7143	15.0
354	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which species does an elephant belong? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . } 
 Where:
 wd:Q513 has human-readable name ""Mount Everest.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What country is Mount Everest located in?	What country is Mount Everest in?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . }	['What', 'country', 'is', 'Mount', 'Everest', 'located', 'in', '?']	['What', 'country', 'is', 'Mount', 'Everest', 'in', '?']	0.5946	2.4564	0.9231	8.0
355	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q34969 wdt:P40 ?uri . } 
 Where:
 wd:Q34969 has human-readable name ""Benjamin Franklin.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many children did Benjamin Franklin have? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q3235867 wdt:P170 ?painter . ?painter wdt:P135 ?uri . } 
 Where:
 wd:Q3235867 has human-readable name ""The Three Dancers.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P135 has human-readable name ""movement.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What movement was The Three Dancers created in?	To which artistic movement did the painter of The Three Dancers belong?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q3235867 wdt:P170 ?painter . ?painter wdt:P135 ?uri . }	['What', 'movement', 'was', 'The', 'Three', 'Dancers', 'created', 'in', '?']	['To', 'which', 'artistic', 'movement', 'did', 'the', 'painter', 'of', 'The', 'Three', 'Dancers', 'belong', '?']	0.1588	1.1625	0.4	40.0
356	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q33999 . ?film wdt:P161 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT(?film))) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q33999 has human-readable name ""actor.""
 wdt:P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actor was casted in the most movies? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q8641370> <http://www.wikidata.org/prop/direct/P580> ?date  . } 
 Where:
 http://www.wikidata.org/entity/Q8641370 has human-readable name ""Operation Overlord.""
 http://www.wikidata.org/prop/direct/P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the start time of Operation Overlord?	When did Operation Overlord commence?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q8641370> <http://www.wikidata.org/prop/direct/P580> ?date  . }	['What', 'is', 'the', 'start', 'time', 'of', 'Operation', 'Overlord', '?']	['When', 'did', 'Operation', 'Overlord', 'commence', '?']	0.2073	0.8617	0.1538	29.0
357	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which species does an elephant belong? 
 ----End Example ---- 
Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q12280 ; p:P2787 ?statement . ?statement psv:P2787 ?value . ?value wikibase:quantityAmount ?len . ?value wikibase:quantityUnit ?unit . BIND(IF(?unit = wd:Q11573, ?len, IF(?unit = wd:Q3710,?len*0.3048, IF(?unit = wd:Q253276,?len*1609.34,IF(?unit = wd:Q828224,?len*1000, ?len)))) AS ?lenUnified) } ORDER BY DESC(?lenUnified) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q12280 has human-readable name ""bridge.""
 p:P2787 has human-readable name ""longest span.""
 psv:P2787 has human-readable name ""psv:P2787.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 wd:Q3710 has human-readable name ""foot.""
 wd:Q253276 has human-readable name ""mile.""
 wd:Q828224 has human-readable name ""kilometre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	 What is the longest span of any bridge in meters, feet, miles, or kilometers?	What is the bridge with the longest span?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q12280 ; p:P2787 ?statement . ?statement psv:P2787 ?value . ?value wikibase:quantityAmount ?len . ?value wikibase:quantityUnit ?unit . BIND(IF(?unit = wd:Q11573, ?len, IF(?unit = wd:Q3710,?len*0.3048, IF(?unit = wd:Q253276,?len*1609.34,IF(?unit = wd:Q828224,?len*1000, ?len)))) AS ?lenUnified) } ORDER BY DESC(?lenUnified) LIMIT 1	['What', 'is', 'the', 'longest', 'span', 'of', 'any', 'bridge', 'in', 'meters', ',', 'feet', ',', 'miles', ',', 'or', 'kilometers', '?']	['What', 'is', 'the', 'bridge', 'with', 'the', 'longest', 'span', '?']	0.2218	1.236	0.381	52.0
358	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . } 
 Where:
 wd:Q513 has human-readable name ""Mount Everest.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What country is Mount Everest in? 
 ----End Example ---- 
Having a SPARQL query: prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>  ASK WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q7889> . ?uri rdfs:label ""Battle Chess""@en } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q7889 has human-readable name ""video game.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Does the video game ""Battle Chess"" belong to the category of video games?"	Is there a video game called Battle Chess?	en	gpt-3.5-turbo	ONE_SHOT	"prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>  ASK WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q7889> . ?uri rdfs:label ""Battle Chess""@en }"	"['Does', 'the', 'video', 'game', '``', 'Battle', 'Chess', ""''"", 'belong', 'to', 'the', 'category', 'of', 'video', 'games', '?']"	['Is', 'there', 'a', 'video', 'game', 'called', 'Battle', 'Chess', '?']	0.2185	0.9906	0.2105	49.0
359	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q7725310 has human-readable name ""series of creative works.""
 wdt:P170 has human-readable name ""creator.""
 wd:Q8704 has human-readable name ""Walt Disney.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which television shows were created by Walt Disney? 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P119 wd:Q3411252 . } 
 Where:
 wdt:P119 has human-readable name ""place of burial.""
 wd:Q3411252 has human-readable name ""Pyramid G1-a.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is Pyramid G1-a located?	Who was buried in the Great Pyramid of Giza?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P119 wd:Q3411252 . }	['Where', 'is', 'Pyramid', 'G1-a', 'located', '?']	['Who', 'was', 'buried', 'in', 'the', 'Great', 'Pyramid', 'of', 'Giza', '?']	0.1218	0.3685	0.1429	31.0
361	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q476028> . ?uri <http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q9448> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q476028 has human-readable name ""association football club.""
 http://www.wikidata.org/prop/direct/P118 has human-readable name ""league.""
 http://www.wikidata.org/entity/Q9448 has human-readable name ""Premier League.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all soccer clubs in the Premier League. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q868 wdt:P737 wd:Q913 . } 
 Where:
 wd:Q868 has human-readable name ""Aristotle.""
 wdt:P737 has human-readable name ""influenced by.""
 wd:Q913 has human-readable name ""Socrates.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Was Aristotle influenced by Socrates?	Did Socrates influence Aristotle?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q868 wdt:P737 wd:Q913 . }	['Was', 'Aristotle', 'influenced', 'by', 'Socrates', '?']	['Did', 'Socrates', 'influence', 'Aristotle', '?']	0.2626	1.161	0.0	22.0
362	"---- Start Example ---- 
 Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q858840>  <http://www.wikidata.org/prop/direct/P161>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q858840 has human-readable name ""Last Action Hero.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all actors starring in Last Action Hero. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q34969 wdt:P40 ?uri . } 
 Where:
 wd:Q34969 has human-readable name ""Benjamin Franklin.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many children does Benjamin Franklin have?	How many children did Benjamin Franklin have?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q34969 wdt:P40 ?uri . }	['How', 'many', 'children', 'does', 'Benjamin', 'Franklin', 'have', '?']	['How', 'many', 'children', 'did', 'Benjamin', 'Franklin', 'have', '?']	0.5	2.625	0.8571	3.0
363	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4830453 ; wdt:P452 wd:Q39809 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P452 has human-readable name ""industry.""
 wd:Q39809 has human-readable name ""marketing.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all companies in the advertising industry. 
 ----End Example ---- 
Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q41421 wdt:P2048 ?val . } 
 Where:
 wd:Q41421 has human-readable name ""Michael Jordan.""
 wdt:P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is Michael Jordan's height?	How tall is Michael Jordan?	en	gpt-3.5-turbo	ONE_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q41421 wdt:P2048 ?val . }	"['What', 'is', 'Michael', 'Jordan', ""'s"", 'height', '?']"	['How', 'tall', 'is', 'Michael', 'Jordan', '?']	0.2876	1.4771	0.4	16.0
364	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q55> <http://www.wikidata.org/prop/direct/P35> ?uri . ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q2045066> . } 
 Where:
 http://www.wikidata.org/entity/Q55 has human-readable name ""Netherlands.""
 http://www.wikidata.org/prop/direct/P35 has human-readable name ""head of state.""
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q2045066 has human-readable name ""King of the Netherlands.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the king of the Netherlands? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q184560> <http://www.wikidata.org/prop/direct/P159> ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> . } 
 Where:
 http://www.wikidata.org/entity/Q184560 has human-readable name ""Secret Intelligence Service.""
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is the headquarters location of the Secret Intelligence Service?	In which UK city are the headquarters of the MI6?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q184560> <http://www.wikidata.org/prop/direct/P159> ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> . }	['Where', 'is', 'the', 'headquarters', 'location', 'of', 'the', 'Secret', 'Intelligence', 'Service', '?']	['In', 'which', 'UK', 'city', 'are', 'the', 'headquarters', 'of', 'the', 'MI6', '?']	0.2572	1.4907	0.3333	52.0
365	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q36180 . ?uri wdt:P166 wd:Q37922 . }  
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q36180 has human-readable name ""writer.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q37922 has human-readable name ""Nobel Prize in Literature.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all writers that won the Nobel Prize in literature. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q5930 has human-readable name ""Family Guy.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the creator of the TV show ""Family Guy""?"	Who created Family Guy?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?uri}	"['Who', 'is', 'the', 'creator', 'of', 'the', 'TV', 'show', '``', 'Family', 'Guy', ""''"", '?']"	['Who', 'created', 'Family', 'Guy', '?']	0.1903	0.7144	0.1538	25.0
367	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q103894> . ?s1 <http://www.wikidata.org/prop/direct/P577> ?o1 . }  order by DESC(?o1)  limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q103894 has human-readable name ""Alec Guinness.""
 http://www.wikidata.org/prop/direct/P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What was the last movie with Alec Guinness? 
 ----End Example ---- 
Having a SPARQL query:  SELECT DISTINCT ?o2 WHERE { <http://www.wikidata.org/entity/Q303>  <http://www.wikidata.org/prop/direct/P40>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P40> ?o2 } 
 Where:
 http://www.wikidata.org/entity/Q303 has human-readable name ""Elvis Presley.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the children of Elvis Presley?	Give me the grandchildren of Elvis Presley.	en	gpt-3.5-turbo	ONE_SHOT	 SELECT DISTINCT ?o2 WHERE { <http://www.wikidata.org/entity/Q303>  <http://www.wikidata.org/prop/direct/P40>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P40> ?o2 }	['Who', 'are', 'the', 'children', 'of', 'Elvis', 'Presley', '?']	['Give', 'me', 'the', 'grandchildren', 'of', 'Elvis', 'Presley', '.']	0.2576	1.5	0.4286	12.0
368	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2105 wdt:P26 ?uri . } 
 Where:
 wd:Q2105 has human-readable name ""Jacques Chirac.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was married to president Chirac? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . } 
 Where:
 http://www.wikidata.org/entity/Q9903 has human-readable name ""Ming dynasty.""
 http://www.wikidata.org/prop/direct/P576 has human-readable name ""dissolved, abolished or demolished date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When was the Ming dynasty dissolved, abolished, or demolished?	When did the Ming dynasty dissolve?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9903> <http://www.wikidata.org/prop/direct/P576> ?date . }	['When', 'was', 'the', 'Ming', 'dynasty', 'dissolved', ',', 'abolished', ',', 'or', 'demolished', '?']	['When', 'did', 'the', 'Ming', 'dynasty', 'dissolve', '?']	0.1972	1.1697	0.5333	30.0
369	"---- Start Example ---- 
 Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315484> . } 
 Where:
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q315484 has human-readable name ""Park Chan-wook.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many movies did Park Chan-wook direct? 
 ----End Example ---- 
Having a SPARQL query:  SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q170596>  <http://www.wikidata.org/prop/direct/P607>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q170596 has human-readable name ""T. E. Lawrence.""
 http://www.wikidata.org/prop/direct/P607 has human-readable name ""conflict.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What conflicts was T. E. Lawrence involved in?	In which military conflicts did Lawrence of Arabia participate?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q170596>  <http://www.wikidata.org/prop/direct/P607>  ?o1 .  } 	['What', 'conflicts', 'was', 'T.', 'E.', 'Lawrence', 'involved', 'in', '?']	['In', 'which', 'military', 'conflicts', 'did', 'Lawrence', 'of', 'Arabia', 'participate', '?']	0.2319	1.0567	0.2353	43.0
370	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q208008 . } 
 Where:
 wdt:P38 has human-readable name ""currency.""
 wd:Q208008 has human-readable name ""cocoa bean.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which ancient empire could you pay with cocoa beans? 
 ----End Example ---- 
Having a SPARQL query:  SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q187893>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q187893 has human-readable name ""San Pedro de Atacama.""
 http://www.wikidata.org/prop/direct/P421 has human-readable name ""located in time zone.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	 What time zone is San Pedro de Atacama located in?	What is the timezone in San Pedro de Atacama?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q187893>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  } 	['What', 'time', 'zone', 'is', 'San', 'Pedro', 'de', 'Atacama', 'located', 'in', '?']	['What', 'is', 'the', 'timezone', 'in', 'San', 'Pedro', 'de', 'Atacama', '?']	0.279	2.4159	0.5263	21.0
372	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(?episode) AS ?count) WHERE { ?episode wdt:P4908 wd:Q5274359 . } 
 Where:
 wdt:P4908 has human-readable name ""season.""
 wd:Q5274359 has human-readable name ""The Sopranos, season 1.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. List all episodes of the first season of the HBO television series The Sopranos! 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q4977246>  <http://www.wikidata.org/prop/direct/P509>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q4977246 has human-readable name ""Bruce Carver.""
 http://www.wikidata.org/prop/direct/P509 has human-readable name ""cause of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What was the cause of death of Bruce Carver?	What did Bruce Carver die from?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q4977246>  <http://www.wikidata.org/prop/direct/P509>  ?o1 .  }	['What', 'was', 'the', 'cause', 'of', 'death', 'of', 'Bruce', 'Carver', '?']	['What', 'did', 'Bruce', 'Carver', 'die', 'from', '?']	0.213	1.1229	0.2857	29.0
374	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q178871 wdt:P1029 ?uri } 
 Where:
 wd:Q178871 has human-readable name ""Apollo 14.""
 wdt:P1029 has human-readable name ""crew member(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me the Apollo 14 astronauts. 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P20>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P856>  ?o2 .  }   
 Where:
 http://www.wikidata.org/entity/Q91 has human-readable name ""Abraham Lincoln.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 http://www.wikidata.org/prop/direct/P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the official website of the place where Abraham Lincoln died?	Does Abraham Lincoln's death place have a website?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P20>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P856>  ?o2 .  }  	['What', 'is', 'the', 'official', 'website', 'of', 'the', 'place', 'where', 'Abraham', 'Lincoln', 'died', '?']	"['Does', 'Abraham', 'Lincoln', ""'s"", 'death', 'place', 'have', 'a', 'website', '?']"	0.2012	1.2777	0.1053	47.0
375	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri wdt:P31 wd:Q15149663 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q15149663 has human-readable name ""state of Mexico.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many states are in Mexico? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q303> <http://www.wikidata.org/prop/direct/P40> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q303 has human-readable name ""Elvis Presley.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Elvis Presley a parent?	Did Elvis Presley have children?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q303> <http://www.wikidata.org/prop/direct/P40> ?uri }	['Is', 'Elvis', 'Presley', 'a', 'parent', '?']	['Did', 'Elvis', 'Presley', 'have', 'children', '?']	0.245	1.2925	0.4	12.0
376	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q5398426>  . { ?uri <http://www.wikidata.org/prop/direct/P170> <http://www.wikidata.org/entity/Q25014> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P170>/<http://www.wikidata.org/prop/direct/P527> <http://www.wikidata.org/entity/Q25014> . }  } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q5398426 has human-readable name ""television series.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 http://www.wikidata.org/prop/direct/P170 has human-readable name ""creator.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 http://www.wikidata.org/entity/Q25014 has human-readable name ""John Cleese.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which television shows were created by John Cleese? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q76>  <http://www.wikidata.org/prop/direct/P26>  <http://www.wikidata.org/entity/Q13133> . } 
 Where:
 http://www.wikidata.org/entity/Q76 has human-readable name ""Barack Obama.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 http://www.wikidata.org/entity/Q13133 has human-readable name ""Michelle Obama.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Barack Obama married to Michelle Obama?	Is Michelle Obama the wife of Barack Obama?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q76>  <http://www.wikidata.org/prop/direct/P26>  <http://www.wikidata.org/entity/Q13133> . }	['Is', 'Barack', 'Obama', 'married', 'to', 'Michelle', 'Obama', '?']	['Is', 'Michelle', 'Obama', 'the', 'wife', 'of', 'Barack', 'Obama', '?']	0.3008	2.1413	0.4	25.0
377	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q2685 wdt:P69 ?uri . ?uri wdt:P31/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q2685 has human-readable name ""Arnold Schwarzenegger.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Did Arnold Schwarzenegger attend a university? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q40026> <http://www.wikidata.org/prop/direct/P551> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . } 
 Where:
 http://www.wikidata.org/entity/Q40026 has human-readable name ""Sylvester Stallone.""
 http://www.wikidata.org/prop/direct/P551 has human-readable name ""residence.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where does Sylvester Stallone reside in the city?	In which city does Sylvester Stallone live?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q40026> <http://www.wikidata.org/prop/direct/P551> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . }	['Where', 'does', 'Sylvester', 'Stallone', 'reside', 'in', 'the', 'city', '?']	['In', 'which', 'city', 'does', 'Sylvester', 'Stallone', 'live', '?']	0.2476	1.6667	0.4	28.0
378	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . } 
 Where:
 wd:Q40984 has human-readable name ""Skype.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who developed Skype? 
 ----End Example ---- 
Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P123>  <http://www.wikidata.org/entity/Q921536> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q47461344> . ?s1  <http://www.wikidata.org/prop/direct/P50>  <http://www.wikidata.org/entity/Q160534> . } 
 Where:
 http://www.wikidata.org/prop/direct/P123 has human-readable name ""publisher.""
 http://www.wikidata.org/entity/Q921536 has human-readable name ""Viking Press.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q47461344 has human-readable name ""written work.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q160534 has human-readable name ""Jack Kerouac.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the author of a written work published by Viking Press and associated with Jack Kerouac?	Which books by Kerouac were published by Viking Press?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P123>  <http://www.wikidata.org/entity/Q921536> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q47461344> . ?s1  <http://www.wikidata.org/prop/direct/P50>  <http://www.wikidata.org/entity/Q160534> . }	['Who', 'is', 'the', 'author', 'of', 'a', 'written', 'work', 'published', 'by', 'Viking', 'Press', 'and', 'associated', 'with', 'Jack', 'Kerouac', '?']	['Which', 'books', 'by', 'Kerouac', 'were', 'published', 'by', 'Viking', 'Press', '?']	0.1488	1.1106	0.24	57.0
379	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which species does an elephant belong? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q780394> <http://www.wikidata.org/prop/direct/P86> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q780394 has human-readable name ""Hotel California.""
 http://www.wikidata.org/prop/direct/P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the composer of Hotel California?	Who wrote the song Hotel California?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q780394> <http://www.wikidata.org/prop/direct/P86> ?uri}	['Who', 'is', 'the', 'composer', 'of', 'Hotel', 'California', '?']	['Who', 'wrote', 'the', 'song', 'Hotel', 'California', '?']	0.2724	1.7546	0.6154	14.0
380	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23442 ; wdt:P17 wd:Q17 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23442 has human-readable name ""island.""
 wdt:P17 has human-readable name ""country.""
 wd:Q17 has human-readable name ""Japan.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all islands that belong to Japan. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q16>  <http://www.wikidata.org/prop/direct/P36>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q16 has human-readable name ""Canada.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the capital of Canada?	What is the capital of Canada?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q16>  <http://www.wikidata.org/prop/direct/P36>  ?o1 .  }	['What', 'is', 'the', 'capital', 'of', 'Canada', '?']	['What', 'is', 'the', 'capital', 'of', 'Canada', '?']	1.0	2.8074	1.0	0.0
381	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2005 wdt:P737 ?uri . } 
 Where:
 wd:Q2005 has human-readable name ""JavaScript.""
 wdt:P737 has human-readable name ""influenced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which programming languages influenced Javascript? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q33935> <http://www.wikidata.org/prop/direct/P6> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q33935 has human-readable name ""Tel Aviv.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of Tel Aviv?	Who is the mayor of Tel Aviv?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q33935> <http://www.wikidata.org/prop/direct/P6> ?uri . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'Tel', 'Aviv', '?']	['Who', 'is', 'the', 'mayor', 'of', 'Tel', 'Aviv', '?']	0.3799	2.1	0.8	15.0
382	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q190679 wdt:P170 ?uri . } 
 Where:
 wd:Q190679 has human-readable name ""Captain America.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created the comic Captain America? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q159> <http://www.wikidata.org/prop/P122> ?q . ?q <http://www.wikidata.org/prop/statement/P122> ?uri . FILTER NOT EXISTS { ?q <http://www.wikidata.org/prop/qualifier/P582> ?x }}  
 Where:
 http://www.wikidata.org/entity/Q159 has human-readable name ""Russia.""
 http://www.wikidata.org/prop/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/statement/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the current basic form of government of Russia?	What form of government does Russia have?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q159> <http://www.wikidata.org/prop/P122> ?q . ?q <http://www.wikidata.org/prop/statement/P122> ?uri . FILTER NOT EXISTS { ?q <http://www.wikidata.org/prop/qualifier/P582> ?x }} 	['What', 'is', 'the', 'current', 'basic', 'form', 'of', 'government', 'of', 'Russia', '?']	['What', 'form', 'of', 'government', 'does', 'Russia', 'have', '?']	0.221	1.6364	0.5	29.0
383	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q3235867 wdt:P170 ?painter . ?painter wdt:P135 ?uri . } 
 Where:
 wd:Q3235867 has human-readable name ""The Three Dancers.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P135 has human-readable name ""movement.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. To which artistic movement did the painter of The Three Dancers belong? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q36107> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q571 has human-readable name ""book.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q36107 has human-readable name ""Muhammad Ali.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the author of the book about Muhammad Ali?	Show me the book that Muhammad Ali wrote.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q571> . ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q36107> . }	['Who', 'is', 'the', 'author', 'of', 'the', 'book', 'about', 'Muhammad', 'Ali', '?']	['Show', 'me', 'the', 'book', 'that', 'Muhammad', 'Ali', 'wrote', '.']	0.2432	1.1527	0.3529	27.0
384	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P17 wd:Q183 . ?res wdt:P31/wdt:P279* wd:Q515 . ?res wdt:P1082 ?inhabitants . } ORDER BY ?inhabitants LIMIt 1 
 Where:
 wdt:P17 has human-readable name ""country.""
 wd:Q183 has human-readable name ""Germany.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q515 has human-readable name ""city.""
 wdt:P1082 has human-readable name ""population.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the smallest city by area in Germany? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?s WHERE { ?b ps:P793   <http://www.wikidata.org/entity/Q1194369> . ?b pq:P642 <http://www.wikidata.org/entity/Q513> . ?s p:P793 ?b   . } 
 Where:
 ps:P793 has human-readable name ""significant event.""
 http://www.wikidata.org/entity/Q1194369 has human-readable name ""first ascent.""
 pq:P642 has human-readable name ""of.""
 http://www.wikidata.org/entity/Q513 has human-readable name ""Mount Everest.""
 p:P793 has human-readable name ""significant event.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What significant event is associated with the first ascent of Mount Everest?	Who was the first to climb Mount Everest?	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?s WHERE { ?b ps:P793   <http://www.wikidata.org/entity/Q1194369> . ?b pq:P642 <http://www.wikidata.org/entity/Q513> . ?s p:P793 ?b   . }	['What', 'significant', 'event', 'is', 'associated', 'with', 'the', 'first', 'ascent', 'of', 'Mount', 'Everest', '?']	['Who', 'was', 'the', 'first', 'to', 'climb', 'Mount', 'Everest', '?']	0.205	1.2192	0.4	45.0
385	"---- Start Example ---- 
 Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE {    ?s1  ?p1  <http://www.wikidata.org/entity/Q56008> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> .  ?s1  <http://www.wikidata.org/prop/direct/P2769> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/entity/Q56008 has human-readable name ""Tim Burton.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P2769 has human-readable name ""budget.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which of Tim Burton's films had the highest budget? 
 ----End Example ---- 
Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q739> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q34770> .  } 
 Where:
 http://www.wikidata.org/entity/Q739 has human-readable name ""Colombia.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q34770 has human-readable name ""language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many instances of films in the language of Colombia are there in Wikidata?	How many languages are spoken in Colombia?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT (COUNT(?s1) as ?c) WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q739> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q34770> .  }	['How', 'many', 'instances', 'of', 'films', 'in', 'the', 'language', 'of', 'Colombia', 'are', 'there', 'in', 'Wikidata', '?']	['How', 'many', 'languages', 'are', 'spoken', 'in', 'Colombia', '?']	0.1979	1.2	0.4211	50.0
386	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q243278> <http://www.wikidata.org/prop/direct/P127> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q243278 has human-readable name ""Rolls-Royce.""
 http://www.wikidata.org/prop/direct/P127 has human-readable name ""owned by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who is the owner of Rolls-Royce? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q213> <http://www.wikidata.org/prop/direct/P38> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q213 has human-readable name ""Czech Republic.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the currency of Czech Republic?	What is the currency of the Czech Republic?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q213> <http://www.wikidata.org/prop/direct/P38> ?uri . }	['What', 'is', 'the', 'currency', 'of', 'Czech', 'Republic', '?']	['What', 'is', 'the', 'currency', 'of', 'the', 'Czech', 'Republic', '?']	0.6102	3.0067	1.0	4.0
388	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q874 wdt:P2936 ?uri . } 
 Where:
 wd:Q874 has human-readable name ""Turkmenistan.""
 wdt:P2936 has human-readable name ""language used.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many languages are spoken in Turkmenistan? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q76334> <http://www.wikidata.org/prop/P106>/<http://www.wikidata.org/prop/qualifier/P582> ?date } 
 Where:
 http://www.wikidata.org/entity/Q76334 has human-readable name ""Boris Becker.""
 http://www.wikidata.org/prop/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did Boris Becker finish his occupation?	When did Boris Becker end his active career?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q76334> <http://www.wikidata.org/prop/P106>/<http://www.wikidata.org/prop/qualifier/P582> ?date }	['When', 'did', 'Boris', 'Becker', 'finish', 'his', 'occupation', '?']	['When', 'did', 'Boris', 'Becker', 'end', 'his', 'active', 'career', '?']	0.3376	2.2424	0.6667	16.0
389	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri . } 
 Where:
 wd:Q131007 has human-readable name ""World of Warcraft.""
 wdt:P178 has human-readable name ""developer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who developed the video game World of Warcraft? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q178552> .  ?s1  <http://www.wikidata.org/prop/direct/P57>  <http://www.wikidata.org/entity/Q192990> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q178552 has human-readable name ""Mickey Rourke.""
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q192990 has human-readable name ""Guy Ritchie.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the cast member of the film directed by Guy Ritchie and starring Mickey Rourke?	Which movies starring Mickey Rourke were directed by Guy Ritchie?	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q178552> .  ?s1  <http://www.wikidata.org/prop/direct/P57>  <http://www.wikidata.org/entity/Q192990> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . }	['Who', 'is', 'the', 'cast', 'member', 'of', 'the', 'film', 'directed', 'by', 'Guy', 'Ritchie', 'and', 'starring', 'Mickey', 'Rourke', '?']	['Which', 'movies', 'starring', 'Mickey', 'Rourke', 'were', 'directed', 'by', 'Guy', 'Ritchie', '?']	0.2141	1.628	0.24	56.0
390	"---- Start Example ---- 
 Having a SPARQL query: PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P39 wd:Q18810062 . ?uri p:P39 ?stmnode . ?stmnode pq:P580 ?startDate . } ORDER BY ?startDate LIMIT 1 
 Where:
 wdt:P39 has human-readable name ""position held.""
 wd:Q18810062 has human-readable name ""monarch of England.""
 p:P39 has human-readable name ""position held.""
 pq:P580 has human-readable name ""start time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who was the first King of England? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q48410 has human-readable name ""Richard Gere.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q40523 has human-readable name ""Julia Roberts.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the cast members of the film featuring Richard Gere and Julia Roberts?	In which films did Julia Roberts as well as Richard Gere play?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . }	['Who', 'are', 'the', 'cast', 'members', 'of', 'the', 'film', 'featuring', 'Richard', 'Gere', 'and', 'Julia', 'Roberts', '?']	['In', 'which', 'films', 'did', 'Julia', 'Roberts', 'as', 'well', 'as', 'Richard', 'Gere', 'play', '?']	0.2248	1.2335	0.1667	55.0
391	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. } 
 Where:
 wdt:P161 has human-readable name ""cast member.""
 wd:Q37079 has human-readable name ""Tom Cruise.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all movies with Tom Cruise. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q23434> . ?uri <http://www.wikidata.org/prop/direct/P136> <http://www.wikidata.org/entity/Q4184> . } 
 Where:
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 http://www.wikidata.org/entity/Q23434 has human-readable name ""Ernest Hemingway.""
 http://www.wikidata.org/prop/direct/P136 has human-readable name ""genre.""
 http://www.wikidata.org/entity/Q4184 has human-readable name ""autobiography.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Give me all autobiographies written by Ernest Hemingway.	Show me Hemingway's autobiography.	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q23434> . ?uri <http://www.wikidata.org/prop/direct/P136> <http://www.wikidata.org/entity/Q4184> . }	['Give', 'me', 'all', 'autobiographies', 'written', 'by', 'Ernest', 'Hemingway', '.']	"['Show', 'me', 'Hemingway', ""'s"", 'autobiography', '.']"	0.2592	0.8617	0.1667	42.0
392	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q219512 has human-readable name ""Jesse Eisenberg.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What movies does Jesse Eisenberg play in? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?o1 { <http://www.wikidata.org/entity/Q4740851> <http://www.wikidata.org/prop/direct/P2048>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q4740851 has human-readable name ""Amazon Eve.""
 http://www.wikidata.org/prop/direct/P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the height of Amazon Eve?	How tall is Amazon Eve?	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?o1 { <http://www.wikidata.org/entity/Q4740851> <http://www.wikidata.org/prop/direct/P2048>  ?o1 .  }	['What', 'is', 'the', 'height', 'of', 'Amazon', 'Eve', '?']	['How', 'tall', 'is', 'Amazon', 'Eve', '?']	0.2576	1.2925	0.5	18.0
393	"---- Start Example ---- 
 Having a SPARQL query: PREFIX psv: <http://www.wikidata.org/prop/statement/value/> PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4022 . ?uri p:P2043 ?stmnode. ?stmnode psv:P2043 ?valuenode . ?valuenode wikibase:quantityAmount ?length . ?valuenode wikibase:quantityUnit ?unit . ?valuenode wikibase:quantityLowerBound ?lowerbound. ?valuenode wikibase:quantityUpperBound ?upperbound. BIND((?upperbound-?lowerbound)/2 AS ?precision). BIND(IF(?precision=0, ?length, (CONCAT(str(?length), ""±"", str(?precision)))) AS ?length2). ?unit p:P2370 ?unitstmnode . ?unitstmnode psv:P2370 ?unitvaluenode . ?unitvaluenode wikibase:quantityAmount ?conversion . ?unitvaluenode wikibase:quantityUnit wd:Q11573 . BIND(?length * ?conversion AS ?length_in_m) . } ORDER BY DESC(?length_in_m) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q4022 has human-readable name ""river.""
 p:P2043 has human-readable name ""length.""
 psv:P2043 has human-readable name ""psv:P2043.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wikibase:quantityLowerBound has human-readable name ""wikibase:quantityLowerBound.""
 wikibase:quantityUpperBound has human-readable name ""wikibase:quantityUpperBound.""
 p:P2370 has human-readable name ""conversion to SI unit.""
 psv:P2370 has human-readable name ""psv:P2370.""
 wikibase:quantityAmount has human-readable name ""wikibase:quantityAmount.""
 wikibase:quantityUnit has human-readable name ""wikibase:quantityUnit.""
 wd:Q11573 has human-readable name ""metre.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. What is the longest river in the world? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q408804> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q408804 has human-readable name ""borough of New York City.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which borough of New York City is being referred to?	What are the five boroughs of New York?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q408804> . }	['Which', 'borough', 'of', 'New', 'York', 'City', 'is', 'being', 'referred', 'to', '?']	['What', 'are', 'the', 'five', 'boroughs', 'of', 'New', 'York', '?']	0.1997	1.1527	0.2222	36.0
394	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q190679 wdt:P170 ?uri . } 
 Where:
 wd:Q190679 has human-readable name ""Captain America.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created the comic Captain America? 
 ----End Example ---- 
Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  wdt:P136  <http://www.wikidata.org/entity/Q11365> . ?s1  wdt:P31  <http://www.wikidata.org/entity/Q18127> . ?s1  wdt:P17 <http://www.wikidata.org/entity/Q16> . } 
 Where:
 wdt:P136 has human-readable name ""genre.""
 http://www.wikidata.org/entity/Q11365 has human-readable name ""grunge.""
 wdt:P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q18127 has human-readable name ""record label.""
 wdt:P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q16 has human-readable name ""Canada.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What record label in Canada produces music in the grunge genre?	Give me all Canadian Grunge record labels.	en	gpt-3.5-turbo	ONE_SHOT	 SELECT ?s1 WHERE { ?s1  wdt:P136  <http://www.wikidata.org/entity/Q11365> . ?s1  wdt:P31  <http://www.wikidata.org/entity/Q18127> . ?s1  wdt:P17 <http://www.wikidata.org/entity/Q16> . }	['What', 'record', 'label', 'in', 'Canada', 'produces', 'music', 'in', 'the', 'grunge', 'genre', '?']	['Give', 'me', 'all', 'Canadian', 'Grunge', 'record', 'labels', '.']	0.1926	0.25	0.1176	46.0
395	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q4830453 . ?uri wdt:P31 ?type ; wdt:P159 wd:Q1726 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P159 has human-readable name ""headquarters location.""
 wd:Q1726 has human-readable name ""Munich.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all companies in Munich. 
 ----End Example ---- 
Having a SPARQL query:  SELECT ?o2 WHERE { <http://www.wikidata.org/entity/Q5089>  <http://www.wikidata.org/prop/direct/P885>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  ?o2 .  }  
 Where:
 http://www.wikidata.org/entity/Q5089 has human-readable name ""Ganges.""
 http://www.wikidata.org/prop/direct/P885 has human-readable name ""origin of the watercourse.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the country of origin of the Ganges river?	In which country does the Ganges start?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT ?o2 WHERE { <http://www.wikidata.org/entity/Q5089>  <http://www.wikidata.org/prop/direct/P885>  ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  ?o2 .  } 	['What', 'is', 'the', 'country', 'of', 'origin', 'of', 'the', 'Ganges', 'river', '?']	['In', 'which', 'country', 'does', 'the', 'Ganges', 'start', '?']	0.2045	1.0909	0.4	25.0
396	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q186924 wdt:P20 ?uri . } 
 Where:
 wd:Q186924 has human-readable name ""Hillel Slovak.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Where did Hillel Slovak die? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q1336200>  <http://www.wikidata.org/prop/direct/P112>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q1336200 has human-readable name ""Penguin Books.""
 http://www.wikidata.org/prop/direct/P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	By whom was Penguin Books founded?	Who is the founder of Penguin Books?	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q1336200>  <http://www.wikidata.org/prop/direct/P112>  ?o1 .  }	['By', 'whom', 'was', 'Penguin', 'Books', 'founded', '?']	['Who', 'is', 'the', 'founder', 'of', 'Penguin', 'Books', '?']	0.1995	1.1926	0.1538	26.0
397	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q52 wdt:P112 ?uri . } 
 Where:
 wd:Q52 has human-readable name ""Wikipedia.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who created Wikipedia? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q23572> <http://www.wikidata.org/prop/direct/P86> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q23572 has human-readable name ""Game of Thrones.""
 http://www.wikidata.org/prop/direct/P86 has human-readable name ""composer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who composed the music for Game of Thrones?	Who wrote the Game of Thrones theme?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q23572> <http://www.wikidata.org/prop/direct/P86> ?uri . }	['Who', 'composed', 'the', 'music', 'for', 'Game', 'of', 'Thrones', '?']	['Who', 'wrote', 'the', 'Game', 'of', 'Thrones', 'theme', '?']	0.2592	2.0	0.5333	22.0
398	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q854383> <http://www.wikidata.org/prop/direct/P176>/<http://www.wikidata.org/prop/direct/P159> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q854383 has human-readable name ""Heineken.""
 http://www.wikidata.org/prop/direct/P176 has human-readable name ""manufacturer.""
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In what city is the Heineken brewery? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q986> <http://www.wikidata.org/prop/direct/P35> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q986 has human-readable name ""Eritrea.""
 http://www.wikidata.org/prop/direct/P35 has human-readable name ""head of state.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of state of Eritrea?	Who is the president of Eritrea?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q986> <http://www.wikidata.org/prop/direct/P35> ?uri}	['Who', 'is', 'the', 'head', 'of', 'state', 'of', 'Eritrea', '?']	['Who', 'is', 'the', 'president', 'of', 'Eritrea', '?']	0.3666	1.8716	0.7692	12.0
399	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7075 ; wdt:P571 ?date . FILTER (YEAR(?date) < 1400 ) } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q7075 has human-readable name ""library.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all libraries established earlier than 1400. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/direct/P20>/<http://www.wikidata.org/prop/direct/P131> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515>  .  }  
 Where:
 http://www.wikidata.org/entity/Q9696 has human-readable name ""John F. Kennedy.""
 http://www.wikidata.org/prop/direct/P20 has human-readable name ""place of death.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where did John F. Kennedy die and in which city was he located?	In which city did John F. Kennedy die?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/direct/P20>/<http://www.wikidata.org/prop/direct/P131> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515>  .  } 	['Where', 'did', 'John', 'F.', 'Kennedy', 'die', 'and', 'in', 'which', 'city', 'was', 'he', 'located', '?']	['In', 'which', 'city', 'did', 'John', 'F.', 'Kennedy', 'die', '?']	0.3161	1.8114	0.5714	45.0
400	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q35 has human-readable name ""Denmark.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Give me all Danish films. 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502> . ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q3960> . ?uri <http://www.wikidata.org/prop/direct/P2044> ?height. } ORDER BY DESC(?height) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q8502 has human-readable name ""mountain.""
 http://www.wikidata.org/prop/direct/P30 has human-readable name ""continent.""
 http://www.wikidata.org/entity/Q3960 has human-readable name ""Australian continent.""
 http://www.wikidata.org/prop/direct/P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the tallest mountain on the Australian continent?	What is the highest mountain in Australia?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502> . ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q3960> . ?uri <http://www.wikidata.org/prop/direct/P2044> ?height. } ORDER BY DESC(?height) LIMIT 1	['What', 'is', 'the', 'tallest', 'mountain', 'on', 'the', 'Australian', 'continent', '?']	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Australia', '?']	0.2276	1.5	0.5333	20.0
402	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q7378 wdt:P279 ?uri . } 
 Where:
 wd:Q7378 has human-readable name ""elephant.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which species does an elephant belong? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q148>  <http://www.wikidata.org/prop/direct/P38>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q148 has human-readable name ""People's Republic of China.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the currency of the People's Republic of China?	Give me the currency of China.	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q148>  <http://www.wikidata.org/prop/direct/P38>  ?o1 .  } 	"['What', 'is', 'the', 'currency', 'of', 'the', 'People', ""'s"", 'Republic', 'of', 'China', '?']"	['Give', 'me', 'the', 'currency', 'of', 'China', '.']	0.2064	0.9358	0.4286	32.0
403	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q656071 wdt:P527 ?uri . } 
 Where:
 wd:Q656071 has human-readable name ""carrot cake.""
 wdt:P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which ingredients do I need for carrot cake? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?s1 WHERE {   ?s1  <http://www.wikidata.org/prop/direct/P27>  <http://www.wikidata.org/entity/Q34> .   ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3546255> .  } 
 Where:
 http://www.wikidata.org/prop/direct/P27 has human-readable name ""country of citizenship.""
 http://www.wikidata.org/entity/Q34 has human-readable name ""Sweden.""
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q3546255 has human-readable name ""oceanographer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What oceanographers from Sweden have citizenship in?	Give me all Swedish oceanographers.	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?s1 WHERE {   ?s1  <http://www.wikidata.org/prop/direct/P27>  <http://www.wikidata.org/entity/Q34> .   ?s1  <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3546255> .  }	['What', 'oceanographers', 'from', 'Sweden', 'have', 'citizenship', 'in', '?']	['Give', 'me', 'all', 'Swedish', 'oceanographers', '.']	0.1982	0.3231	0.1667	42.0
404	"---- Start Example ---- 
 Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q3665646 ; wdt:P569 ?birthDate ; wdt:P166 ?award . ?award rdfs:label ?awardLabel FILTER (CONTAINS(STR(?awardLabel), ""MVP"") || CONTAINS(STR(?awardLabel), ""Most Valuable Player"")) . FILTER (LANGMATCHES(LANG(?awardLabel), ""EN"" ) ) } ORDER BY DESC(?birthDate) LIMIT 4 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q3665646 has human-readable name ""basketball player.""
 wdt:P569 has human-readable name ""date of birth.""
 wdt:P166 has human-readable name ""award received.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Who are the four youngest MVP basketball players? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q11297> <http://www.wikidata.org/prop/direct/P131> ?uri . { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . } UNION {?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q515> . } } 
 Where:
 http://www.wikidata.org/entity/Q11297 has human-readable name ""Headquarters of the United Nations.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Where is the headquarters of the United Nations located?	In which city are the headquarters of the United Nations?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q11297> <http://www.wikidata.org/prop/direct/P131> ?uri . { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . } UNION {?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279> <http://www.wikidata.org/entity/Q515> . } }	['Where', 'is', 'the', 'headquarters', 'of', 'the', 'United', 'Nations', 'located', '?']	['In', 'which', 'city', 'are', 'the', 'headquarters', 'of', 'the', 'United', 'Nations', '?']	0.4862	2.352	0.4706	22.0
405	"---- Start Example ---- 
 Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P159>  <http://www.wikidata.org/entity/Q60> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q33506> . ?s1  <http://www.wikidata.org/prop/direct/P1174> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 http://www.wikidata.org/entity/Q60 has human-readable name ""New York City.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q33506 has human-readable name ""museum.""
 http://www.wikidata.org/prop/direct/P1174 has human-readable name ""visitors per year.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which museum in New York has the most visitors? 
 ----End Example ---- 
Having a SPARQL query: ASK WHERE { <http://www.wikidata.org/entity/Q2263>  <http://www.wikidata.org/prop/direct/P26>  <http://www.wikidata.org/entity/Q234144> . }  
 Where:
 http://www.wikidata.org/entity/Q2263 has human-readable name ""Tom Hanks.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 http://www.wikidata.org/entity/Q234144 has human-readable name ""Rita Wilson.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Does Tom Hanks have Rita Wilson as his spouse?	Is Rita Wilson the wife of Tom Hanks?	en	gpt-3.5-turbo	ONE_SHOT	ASK WHERE { <http://www.wikidata.org/entity/Q2263>  <http://www.wikidata.org/prop/direct/P26>  <http://www.wikidata.org/entity/Q234144> . } 	['Does', 'Tom', 'Hanks', 'have', 'Rita', 'Wilson', 'as', 'his', 'spouse', '?']	['Is', 'Rita', 'Wilson', 'the', 'wife', 'of', 'Tom', 'Hanks', '?']	0.2679	1.585	0.2353	35.0
406	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q34851> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q151973> . } 
 Where:
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q34851 has human-readable name ""Elizabeth Taylor.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q151973 has human-readable name ""Richard Burton.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which movies star both Liz Taylor and Richard Burton? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> <http://www.wikidata.org/entity/Q5287> . }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P37 has human-readable name ""official language.""
 http://www.wikidata.org/entity/Q5287 has human-readable name ""Japanese.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What countries have Japanese as their official language?	In which countries do people speak Japanese?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?uri <http://www.wikidata.org/prop/direct/P37> <http://www.wikidata.org/entity/Q5287> . } 	['What', 'countries', 'have', 'Japanese', 'as', 'their', 'official', 'language', '?']	['In', 'which', 'countries', 'do', 'people', 'speak', 'Japanese', '?']	0.2592	1.0	0.1333	36.0
407	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q3392 wdt:P885/wdt:P17 ?res . } 
 Where:
 wd:Q3392 has human-readable name ""Nile.""
 wdt:P885 has human-readable name ""origin of the watercourse.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. In which country does the Nile start? 
 ----End Example ---- 
Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE {    ?s1  ?p1  <http://www.wikidata.org/entity/Q56008> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> .  ?s1  <http://www.wikidata.org/prop/direct/P2769> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/entity/Q56008 has human-readable name ""Tim Burton.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P2769 has human-readable name ""budget.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the budget of the film directed by Tim Burton?	Which of Tim Burton's films had the highest budget?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT DISTINCT ?s1 WHERE {    ?s1  ?p1  <http://www.wikidata.org/entity/Q56008> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> .  ?s1  <http://www.wikidata.org/prop/direct/P2769> ?o1 } order by ?o1 limit 1	['What', 'is', 'the', 'budget', 'of', 'the', 'film', 'directed', 'by', 'Tim', 'Burton', '?']	"['Which', 'of', 'Tim', 'Burton', ""'s"", 'films', 'had', 'the', 'highest', 'budget', '?']"	0.218	1.7297	0.2105	38.0
408	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P19 wd:Q160544 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wd:Q160544 has human-readable name ""Heraklion.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which people were born in Heraklion? 
 ----End Example ---- 
Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P159>  <http://www.wikidata.org/entity/Q60> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q33506> . ?s1  <http://www.wikidata.org/prop/direct/P1174> ?o1 } order by ?o1 limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P159 has human-readable name ""headquarters location.""
 http://www.wikidata.org/entity/Q60 has human-readable name ""New York City.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q33506 has human-readable name ""museum.""
 http://www.wikidata.org/prop/direct/P1174 has human-readable name ""visitors per year.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What museum located in New York City has the highest number of visitors per year?	Which museum in New York has the most visitors?	en	gpt-3.5-turbo	ONE_SHOT	 SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P159>  <http://www.wikidata.org/entity/Q60> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q33506> . ?s1  <http://www.wikidata.org/prop/direct/P1174> ?o1 } order by ?o1 limit 1	['What', 'museum', 'located', 'in', 'New', 'York', 'City', 'has', 'the', 'highest', 'number', 'of', 'visitors', 'per', 'year', '?']	['Which', 'museum', 'in', 'New', 'York', 'has', 'the', 'most', 'visitors', '?']	0.1964	1.661	0.5	40.0
409	"---- Start Example ---- 
 Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315484> . } 
 Where:
 http://www.wikidata.org/prop/direct/P57 has human-readable name ""director.""
 http://www.wikidata.org/entity/Q315484 has human-readable name ""Park Chan-wook.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many movies did Park Chan-wook direct? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q482994> . ?uri <http://www.wikidata.org/prop/direct/P175> <http://www.wikidata.org/entity/Q15862> . ?uri <http://www.wikidata.org/prop/direct/P577> ?date } ORDER BY ?date LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q482994 has human-readable name ""album.""
 http://www.wikidata.org/prop/direct/P175 has human-readable name ""performer.""
 http://www.wikidata.org/entity/Q15862 has human-readable name ""Queen.""
 http://www.wikidata.org/prop/direct/P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the earliest album released by Queen where they were the performers?	What was the first Queen album?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q482994> . ?uri <http://www.wikidata.org/prop/direct/P175> <http://www.wikidata.org/entity/Q15862> . ?uri <http://www.wikidata.org/prop/direct/P577> ?date } ORDER BY ?date LIMIT 1	['What', 'is', 'the', 'earliest', 'album', 'released', 'by', 'Queen', 'where', 'they', 'were', 'the', 'performers', '?']	['What', 'was', 'the', 'first', 'Queen', 'album', '?']	0.2836	1.0026	0.3333	54.0
411	"---- Start Example ---- 
 Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q739> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q34770> .  } 
 Where:
 http://www.wikidata.org/entity/Q739 has human-readable name ""Colombia.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q34770 has human-readable name ""language.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. How many languages are spoken in Colombia? 
 ----End Example ---- 
Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q103894> . ?s1 <http://www.wikidata.org/prop/direct/P577> ?o1 . }  order by DESC(?o1)  limit 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 http://www.wikidata.org/entity/Q103894 has human-readable name ""Alec Guinness.""
 http://www.wikidata.org/prop/direct/P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the latest film in which Alec Guinness was a cast member?	What was the last movie with Alec Guinness?	en	gpt-3.5-turbo	ONE_SHOT	SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q103894> . ?s1 <http://www.wikidata.org/prop/direct/P577> ?o1 . }  order by DESC(?o1)  limit 1	['What', 'is', 'the', 'latest', 'film', 'in', 'which', 'Alec', 'Guinness', 'was', 'a', 'cast', 'member', '?']	['What', 'was', 'the', 'last', 'movie', 'with', 'Alec', 'Guinness', '?']	0.2039	1.3585	0.2857	30.0
412	"---- Start Example ---- 
 Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q989> <http://www.wikidata.org/prop/P39> ?position . ?position <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q19546> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri }  
 Where:
 http://www.wikidata.org/entity/Q989 has human-readable name ""John Paul II.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q19546 has human-readable name ""pope.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which pope succeeded John Paul II? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q858840>  <http://www.wikidata.org/prop/direct/P161>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q858840 has human-readable name ""Last Action Hero.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who are the cast members of Last Action Hero?	Give me all actors starring in Last Action Hero.	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q858840>  <http://www.wikidata.org/prop/direct/P161>  ?o1 .  } 	['Who', 'are', 'the', 'cast', 'members', 'of', 'Last', 'Action', 'Hero', '?']	['Give', 'me', 'all', 'actors', 'starring', 'in', 'Last', 'Action', 'Hero', '.']	0.2004	0.9966	0.2222	25.0
413	"---- Start Example ---- 
 Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51803 wdt:P175 ?uri } 
 Where:
 wd:Q51803 has human-readable name ""Chewbacca.""
 wdt:P175 has human-readable name ""performer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question. Which actor played Chewbacca? 
 ----End Example ---- 
Having a SPARQL query: SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q339>  <http://www.wikidata.org/prop/direct/P61>  ?o1 .   ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q5> .  }  
 Where:
 http://www.wikidata.org/entity/Q339 has human-readable name ""Pluto.""
 http://www.wikidata.org/prop/direct/P61 has human-readable name ""discoverer or inventor.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q5 has human-readable name ""human.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who discovered or invented Pluto?	Who discovered Pluto?	en	gpt-3.5-turbo	ONE_SHOT	SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q339>  <http://www.wikidata.org/prop/direct/P61>  ?o1 .   ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q5> .  } 	['Who', 'discovered', 'or', 'invented', 'Pluto', '?']	['Who', 'discovered', 'Pluto', '?']	0.3131	1.3333	0.75	12.0
