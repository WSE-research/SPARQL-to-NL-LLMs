id	prompt	generated_nl	gold_standard_nl	lang	model	prompt_type	query	tokenized_generated_nl	tokenized_gold_standard_nl	sentence_bleu	sentence_nist	rougeL	levenshtein
99	"Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q23337>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q23337 has human-readable name ""Salt Lake City.""
 http://www.wikidata.org/prop/direct/P421 has human-readable name ""located in time zone.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the distinct values of the time zones in which Salt Lake City is located?	What is the time zone of Salt Lake City?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q23337>  <http://www.wikidata.org/prop/direct/P421>  ?o1 .  }	['What', 'are', 'the', 'distinct', 'values', 'of', 'the', 'time', 'zones', 'in', 'which', 'Salt', 'Lake', 'City', 'is', 'located', '?']	['What', 'is', 'the', 'time', 'zone', 'of', 'Salt', 'Lake', 'City', '?']	0.193	1.7587	0.4167	44.0
98	"Having a SPARQL query: SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q1048>  <http://www.wikidata.org/prop/direct/P157>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q1048 has human-readable name ""Julius Caesar.""
 http://www.wikidata.org/prop/direct/P157 has human-readable name ""killed by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the names of the individuals who killed Julius Caesar?	Who killed Caesar?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q1048>  <http://www.wikidata.org/prop/direct/P157>  ?o1 .  }	['What', 'are', 'the', 'names', 'of', 'the', 'individuals', 'who', 'killed', 'Julius', 'Caesar', '?']	['Who', 'killed', 'Caesar', '?']	0.1834	0.5	0.3077	45.0
86	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation ; wdt:P17 wd:Q183 . } ORDER BY DESC(?elevation) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q8502 has human-readable name ""mountain.""
 wdt:P2044 has human-readable name ""elevation above sea level.""
 wdt:P17 has human-readable name ""country.""
 wd:Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest mountain in Germany based on its elevation above sea level?	What is the highest mountain in Germany?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation ; wdt:P17 wd:Q183 . } ORDER BY DESC(?elevation) LIMIT 1	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Germany', 'based', 'on', 'its', 'elevation', 'above', 'sea', 'level', '?']	['What', 'is', 'the', 'highest', 'mountain', 'in', 'Germany', '?']	0.4137	1.6	0.5714	39.0
84	"Having a SPARQL query: SELECT DISTINCT ?o WHERE { <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P580>  ?startWar . <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P582>  ?endWar . <http://www.wikidata.org/entity/Q30>  <http://www.wikidata.org/prop/P6> ?blank . ?blank <http://www.wikidata.org/prop/statement/P6> ?o . ?blank <http://www.wikidata.org/prop/qualifier/P580> ?start . ?blank <http://www.wikidata.org/prop/qualifier/P582> ?end . FILTER (?startWar < ?start && ?endWar > ?end)}  
 Where:
 http://www.wikidata.org/entity/Q8740 has human-readable name ""Vietnam War.""
 http://www.wikidata.org/prop/direct/P580 has human-readable name ""start time.""
 http://www.wikidata.org/entity/Q8740 has human-readable name ""Vietnam War.""
 http://www.wikidata.org/prop/direct/P582 has human-readable name ""end time.""
 http://www.wikidata.org/entity/Q30 has human-readable name ""United States of America.""
 http://www.wikidata.org/prop/P6 has human-readable name ""head of government.""
 http://www.wikidata.org/prop/statement/P6 has human-readable name ""head of government.""
 http://www.wikidata.org/prop/qualifier/P580 has human-readable name ""start time.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which head of government of the United States of America served during the Vietnam War, with their tenure falling within the start and end times of the war?	Which American presidents were in office during the Vietnam War?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?o WHERE { <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P580>  ?startWar . <http://www.wikidata.org/entity/Q8740>  <http://www.wikidata.org/prop/direct/P582>  ?endWar . <http://www.wikidata.org/entity/Q30>  <http://www.wikidata.org/prop/P6> ?blank . ?blank <http://www.wikidata.org/prop/statement/P6> ?o . ?blank <http://www.wikidata.org/prop/qualifier/P580> ?start . ?blank <http://www.wikidata.org/prop/qualifier/P582> ?end . FILTER (?startWar < ?start && ?endWar > ?end)} 	['Which', 'head', 'of', 'government', 'of', 'the', 'United', 'States', 'of', 'America', 'served', 'during', 'the', 'Vietnam', 'War', ',', 'with', 'their', 'tenure', 'falling', 'within', 'the', 'start', 'and', 'end', 'times', 'of', 'the', 'war', '?']	['Which', 'American', 'presidents', 'were', 'in', 'office', 'during', 'the', 'Vietnam', 'War', '?']	0.086	0.6919	0.25	111.0
81	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P6 wd:Q39593 . } 
 Where:
 wdt:P6 has human-readable name ""head of government.""
 wd:Q39593 has human-readable name ""Butch Otter.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the head of government of Butch Otter?	Butch Otter is the governor of which U.S. state?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P6 wd:Q39593 . }	['Who', 'is', 'the', 'head', 'of', 'government', 'of', 'Butch', 'Otter', '?']	['Butch', 'Otter', 'is', 'the', 'governor', 'of', 'which', 'U.S.', 'state', '?']	0.2804	1.9932	0.3333	31.0
66	"Having a SPARQL query:  SELECT ?s WHERE { <http://www.wikidata.org/entity/Q241665>  <http://www.wikidata.org/prop/direct/P569>  ?date . ?s <http://www.wikidata.org/prop/direct/P106> / <http://www.wikidata.org/prop/direct/P279>*   <http://www.wikidata.org/entity/Q483501> . ?s  <http://www.wikidata.org/prop/direct/P569>  ?date . } 
 Where:
 http://www.wikidata.org/entity/Q241665 has human-readable name ""Rachel Stevens.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q483501 has human-readable name ""artist.""
 http://www.wikidata.org/prop/direct/P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which artists have the same date of birth as Rachel Stevens?	Which artists were born on the same date as Rachel Stevens?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?s WHERE { <http://www.wikidata.org/entity/Q241665>  <http://www.wikidata.org/prop/direct/P569>  ?date . ?s <http://www.wikidata.org/prop/direct/P106> / <http://www.wikidata.org/prop/direct/P279>*   <http://www.wikidata.org/entity/Q483501> . ?s  <http://www.wikidata.org/prop/direct/P569>  ?date . }	['Which', 'artists', 'have', 'the', 'same', 'date', 'of', 'birth', 'as', 'Rachel', 'Stevens', '?']	['Which', 'artists', 'were', 'born', 'on', 'the', 'same', 'date', 'as', 'Rachel', 'Stevens', '?']	0.3417	2.6887	0.7273	20.0
64	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q7934>  <http://www.wikidata.org/prop/direct/P106>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q7934 has human-readable name ""Frank Herbert.""
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the occupation of Frank Herbert?	What is the profession of Frank Herbert?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q7934>  <http://www.wikidata.org/prop/direct/P106>  ?o1 .  }	['What', 'is', 'the', 'occupation', 'of', 'Frank', 'Herbert', '?']	['What', 'is', 'the', 'profession', 'of', 'Frank', 'Herbert', '?']	0.5	2.625	0.8571	7.0
56	"Having a SPARQL query: SELECT DISTINCT ?num WHERE { <http://www.wikidata.org/entity/Q128446> <http://www.wikidata.org/prop/direct/P115>/<http://www.wikidata.org/prop/direct/P1083> ?num } 
 Where:
 http://www.wikidata.org/entity/Q128446 has human-readable name ""FC Porto.""
 http://www.wikidata.org/prop/direct/P115 has human-readable name ""home venue.""
 http://www.wikidata.org/prop/direct/P1083 has human-readable name ""maximum capacity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the maximum capacity of the home venue of FC Porto?	How many seats does the home stadium of FC Porto have?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?num WHERE { <http://www.wikidata.org/entity/Q128446> <http://www.wikidata.org/prop/direct/P115>/<http://www.wikidata.org/prop/direct/P1083> ?num }	['What', 'is', 'the', 'maximum', 'capacity', 'of', 'the', 'home', 'venue', 'of', 'FC', 'Porto', '?']	['How', 'many', 'seats', 'does', 'the', 'home', 'stadium', 'of', 'FC', 'Porto', 'have', '?']	0.2146	1.6546	0.381	36.0
49	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?frequentflyer WHERE { ?airlines wdt:P31 wd:Q46970 . ?airlines p:P4446/ps:P4446 ?frequentflyer . }  GROUP BY ?frequentflyer ORDER BY DESC(COUNT(?airlines)) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q46970 has human-readable name ""airline.""
 p:P4446 has human-readable name ""reward program.""
 ps:P4446 has human-readable name ""reward program.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which frequent flyer program is used by the airline with the highest number of instances in Wikidata?	Which frequent flyer program has the most airlines?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?frequentflyer WHERE { ?airlines wdt:P31 wd:Q46970 . ?airlines p:P4446/ps:P4446 ?frequentflyer . }  GROUP BY ?frequentflyer ORDER BY DESC(COUNT(?airlines)) LIMIT 1	['Which', 'frequent', 'flyer', 'program', 'is', 'used', 'by', 'the', 'airline', 'with', 'the', 'highest', 'number', 'of', 'instances', 'in', 'Wikidata', '?']	['Which', 'frequent', 'flyer', 'program', 'has', 'the', 'most', 'airlines', '?']	0.1488	1.0566	0.4167	56.0
44	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P122>   <http://www.wikidata.org/entity/Q41614> } 
 Where:
 http://www.wikidata.org/entity/Q458 has human-readable name ""European Union.""
 http://www.wikidata.org/prop/direct/P150 has human-readable name ""contains the administrative territorial entity.""
 http://www.wikidata.org/prop/direct/P122 has human-readable name ""basic form of government.""
 http://www.wikidata.org/entity/Q41614 has human-readable name ""constitutional monarchy.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What type of basic form of government does the European Union have and is it a constitutional monarchy?	Which European countries have a constitutional monarchy?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P122>   <http://www.wikidata.org/entity/Q41614> }	['What', 'type', 'of', 'basic', 'form', 'of', 'government', 'does', 'the', 'European', 'Union', 'have', 'and', 'is', 'it', 'a', 'constitutional', 'monarchy', '?']	['Which', 'European', 'countries', 'have', 'a', 'constitutional', 'monarchy', '?']	0.1403	0.9474	0.4167	58.0
42	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?cave wdt:P31 wd:Q35509 ; wdt:P17 ?uri . } GROUP BY ?uri HAVING (COUNT(?cave) > 2) 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35509 has human-readable name ""cave.""
 wdt:P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which countries have more than 2 instances of caves in Wikidata?	Which countries have places with more than two caves?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?cave wdt:P31 wd:Q35509 ; wdt:P17 ?uri . } GROUP BY ?uri HAVING (COUNT(?cave) > 2)	['Which', 'countries', 'have', 'more', 'than', '2', 'instances', 'of', 'caves', 'in', 'Wikidata', '?']	['Which', 'countries', 'have', 'places', 'with', 'more', 'than', 'two', 'caves', '?']	0.2374	1.9378	0.5	32.0
4	"Having a SPARQL query: SELECT DISTINCT ?s1 WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q1248784> . ?s1  <http://www.wikidata.org/prop/direct/P276>  <http://www.wikidata.org/entity/Q99> .  } 
 Where:
 http://www.wikidata.org/entity/Q1248784 has human-readable name ""airport.""
 http://www.wikidata.org/prop/direct/P276 has human-readable name ""location.""
 http://www.wikidata.org/entity/Q99 has human-readable name ""California.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which distinct subjects are airports located in California?	Which airports are located in California, USA?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?s1 WHERE { ?s1  ?p1  <http://www.wikidata.org/entity/Q1248784> . ?s1  <http://www.wikidata.org/prop/direct/P276>  <http://www.wikidata.org/entity/Q99> .  }	['Which', 'distinct', 'subjects', 'are', 'airports', 'located', 'in', 'California', '?']	['Which', 'airports', 'are', 'located', 'in', 'California', ',', 'USA', '?']	0.2694	2.4655	0.5333	28.0
32	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q567> <http://www.wikidata.org/prop/direct/P1477>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q567 has human-readable name ""Angela Merkel.""
 http://www.wikidata.org/prop/direct/P1477 has human-readable name ""birth name.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is Angela Merkel's birth name?	What is Angela Merkel’s birth name?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q567> <http://www.wikidata.org/prop/direct/P1477>  ?o1 .  }	"['What', 'is', 'Angela', 'Merkel', ""'s"", 'birth', 'name', '?']"	['What', 'is', 'Angela', 'Merkel', '’', 's', 'birth', 'name', '?']	0.4412	2.6161	0.8333	1.0
31	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q64>  <http://www.wikidata.org/prop/direct/P6>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q64 has human-readable name ""Berlin.""
 http://www.wikidata.org/prop/direct/P6 has human-readable name ""head of government.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the head of government of Berlin?	Who is the mayor of Berlin?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q64>  <http://www.wikidata.org/prop/direct/P6>  ?o1 .  }	['What', 'is', 'the', 'head', 'of', 'government', 'of', 'Berlin', '?']	['Who', 'is', 'the', 'mayor', 'of', 'Berlin', '?']	0.2741	1.5596	0.6154	17.0
29	"Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?s1 .  ?s1  <http://www.wikidata.org/prop/direct/P38>  <http://www.wikidata.org/entity/Q4916> . } 
 Where:
 http://www.wikidata.org/entity/Q458 has human-readable name ""European Union.""
 http://www.wikidata.org/prop/direct/P150 has human-readable name ""contains the administrative territorial entity.""
 http://www.wikidata.org/prop/direct/P38 has human-readable name ""currency.""
 http://www.wikidata.org/entity/Q4916 has human-readable name ""euro.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which administrative territorial entities does the European Union contain, and what is the currency of those entities set to be?	Which countries in the European Union adopted the Euro?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT DISTINCT ?s1 WHERE { <http://www.wikidata.org/entity/Q458>  <http://www.wikidata.org/prop/direct/P150>  ?s1 .  ?s1  <http://www.wikidata.org/prop/direct/P38>  <http://www.wikidata.org/entity/Q4916> . }	['Which', 'administrative', 'territorial', 'entities', 'does', 'the', 'European', 'Union', 'contain', ',', 'and', 'what', 'is', 'the', 'currency', 'of', 'those', 'entities', 'set', 'to', 'be', '?']	['Which', 'countries', 'in', 'the', 'European', 'Union', 'adopted', 'the', 'Euro', '?']	0.1295	0.8627	0.3077	83.0
68	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5284> <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q5284 has human-readable name ""Bill Gates.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the country of birth of Bill Gates?	Which country was Bill Gates born in?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5284> <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> ?uri }	['What', 'is', 'the', 'country', 'of', 'birth', 'of', 'Bill', 'Gates', '?']	['Which', 'country', 'was', 'Bill', 'Gates', 'born', 'in', '?']	0.213	1.2	0.2667	26.0
22	"Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE { <http://www.wikidata.org/entity/Q83233> <http://www.wikidata.org/prop/direct/P40>/<http://www.wikidata.org/prop/direct/P40> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q83233 has human-readable name ""Jacques Cousteau.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many children does Jacques Cousteau have?	How many grand-children did Jacques Cousteau have?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE { <http://www.wikidata.org/entity/Q83233> <http://www.wikidata.org/prop/direct/P40>/<http://www.wikidata.org/prop/direct/P40> ?uri }	['How', 'many', 'children', 'does', 'Jacques', 'Cousteau', 'have', '?']	['How', 'many', 'grand-children', 'did', 'Jacques', 'Cousteau', 'have', '?']	0.4111	2.25	0.7143	9.0
214	"Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P641> <http://www.wikidata.org/entity/Q842284> . ?s1  <http://www.wikidata.org/prop/direct/P19> ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P131>* <http://www.wikidata.org/entity/Q34> . } 
 Where:
 http://www.wikidata.org/prop/direct/P641 has human-readable name ""sport.""
 http://www.wikidata.org/entity/Q842284 has human-readable name ""skateboarding.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P131 has human-readable name ""located in the administrative territorial entity.""
 http://www.wikidata.org/entity/Q34 has human-readable name ""Sweden.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals were born in a place that is located in Sweden and are associated with skateboarding as a sport?	Give me all professional skateboarders from Sweden.	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P641> <http://www.wikidata.org/entity/Q842284> . ?s1  <http://www.wikidata.org/prop/direct/P19> ?o1 . ?o1 <http://www.wikidata.org/prop/direct/P131>* <http://www.wikidata.org/entity/Q34> . }	['Which', 'individuals', 'were', 'born', 'in', 'a', 'place', 'that', 'is', 'located', 'in', 'Sweden', 'and', 'are', 'associated', 'with', 'skateboarding', 'as', 'a', 'sport', '?']	['Give', 'me', 'all', 'professional', 'skateboarders', 'from', 'Sweden', '.']	0.1807	0.1429	0.08	89.0
210	"Having a SPARQL query: PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <https://w3id.org/payswarm#> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX bd: <http://www.bigdata.com/rdf#> PREFIX wikibase: <http://wikiba.se/ontology#> SELECT DISTINCT ?uri WHERE { { ?uri ?allowed wd:Q9134365 . VALUES ?allowed { wdt:P39 wdt:P97 } } UNION { ?uri wdt:P39 ?position . VALUES ?position { wd:Q116 wd:Q12097  } ?uri p:P39/pq:P642 ?kingdom . } VALUES ?kingdom { wd:Q161885 wd:Q174193 } . ?uri wdt:P26 ?spouse . ?spouse wdt:P19/wdt:P17 wd:Q183 . } 
 Where:
 wd:Q9134365 has human-readable name ""monarch of the United Kingdom.""
 wdt:P39 has human-readable name ""position held.""
 wdt:P97 has human-readable name ""noble title.""
 wdt:P39 has human-readable name ""position held.""
 wd:Q116 has human-readable name ""monarch.""
 wd:Q12097 has human-readable name ""king.""
 p:P39 has human-readable name ""position held.""
 pq:P642 has human-readable name ""of.""
 wd:Q161885 has human-readable name ""Kingdom of Great Britain.""
 wd:Q174193 has human-readable name ""United Kingdom of Great Britain and Ireland.""
 wdt:P26 has human-readable name ""spouse.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals have held the position of monarch of the United Kingdom or have held a noble title, or have held the position of monarch or king, and belong to the Kingdom of Great Britain or the United Kingdom of Great Britain and Ireland, and have a spouse who was born in Germany?	Which monarchs of the United Kingdom were married to a German?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <https://w3id.org/payswarm#> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX bd: <http://www.bigdata.com/rdf#> PREFIX wikibase: <http://wikiba.se/ontology#> SELECT DISTINCT ?uri WHERE { { ?uri ?allowed wd:Q9134365 . VALUES ?allowed { wdt:P39 wdt:P97 } } UNION { ?uri wdt:P39 ?position . VALUES ?position { wd:Q116 wd:Q12097  } ?uri p:P39/pq:P642 ?kingdom . } VALUES ?kingdom { wd:Q161885 wd:Q174193 } . ?uri wdt:P26 ?spouse . ?spouse wdt:P19/wdt:P17 wd:Q183 . }	['Which', 'individuals', 'have', 'held', 'the', 'position', 'of', 'monarch', 'of', 'the', 'United', 'Kingdom', 'or', 'have', 'held', 'a', 'noble', 'title', ',', 'or', 'have', 'held', 'the', 'position', 'of', 'monarch', 'or', 'king', ',', 'and', 'belong', 'to', 'the', 'Kingdom', 'of', 'Great', 'Britain', 'or', 'the', 'United', 'Kingdom', 'of', 'Great', 'Britain', 'and', 'Ireland', ',', 'and', 'have', 'a', 'spouse', 'who', 'was', 'born', 'in', 'Germany', '?']	['Which', 'monarchs', 'of', 'the', 'United', 'Kingdom', 'were', 'married', 'to', 'a', 'German', '?']	0.0474	0.5032	0.3684	226.0
199	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P31 wd:Q11424 . ?uri wdt:P495 wd:Q414 } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11424 has human-readable name ""film.""
 wdt:P495 has human-readable name ""country of origin.""
 wd:Q414 has human-readable name ""Argentina.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of films that are instances of and have a country of origin in Argentina?	Give me all Argentine films.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P31 wd:Q11424 . ?uri wdt:P495 wd:Q414 }	['What', 'are', 'the', 'URIs', 'of', 'films', 'that', 'are', 'instances', 'of', 'and', 'have', 'a', 'country', 'of', 'origin', 'in', 'Argentina', '?']	['Give', 'me', 'all', 'Argentine', 'films', '.']	0.1831	0.1361	0.1	77.0
203	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2831> <http://www.wikidata.org/prop/direct/P509> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q2831 has human-readable name ""Michael Jackson.""
 http://www.wikidata.org/prop/direct/P509 has human-readable name ""cause of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the cause of death of Michael Jackson?	How did Michael Jackson die?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2831> <http://www.wikidata.org/prop/direct/P509> ?uri . }	['What', 'is', 'the', 'cause', 'of', 'death', 'of', 'Michael', 'Jackson', '?']	['How', 'did', 'Michael', 'Jackson', 'die', '?']	0.1983	0.7755	0.1538	30.0
197	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P571 ?date } ORDER BY DESC(?date) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the URI of the U.S. state that has the latest inception date?	Which U.S. state has been admitted latest?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P571 ?date } ORDER BY DESC(?date) LIMIT 1	['What', 'is', 'the', 'URI', 'of', 'the', 'U.S.', 'state', 'that', 'has', 'the', 'latest', 'inception', 'date', '?']	['Which', 'U.S.', 'state', 'has', 'been', 'admitted', 'latest', '?']	0.189	1.0	0.381	42.0
196	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q11185669 wdt:P279 ?uri . } 
 Where:
 wd:Q11185669 has human-readable name ""millipede.""
 wdt:P279 has human-readable name ""subclass of.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the subclasses of the entity with the human-readable name ""millipede""?"	Which classes does the Millepede belong to?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q11185669 wdt:P279 ?uri . }	"['What', 'are', 'the', 'subclasses', 'of', 'the', 'entity', 'with', 'the', 'human-readable', 'name', '``', 'millipede', ""''"", '?']"	['Which', 'classes', 'does', 'the', 'Millepede', 'belong', 'to', '?']	0.2239	0.4	0.1176	54.0
188	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q25161472 wdt:P856 ?uri }  
 Where:
 wd:Q25161472 has human-readable name ""Forbes.""
 wdt:P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the official website of Forbes?	Give me the homepage of Forbes.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q25161472 wdt:P856 ?uri } 	['What', 'is', 'the', 'official', 'website', 'of', 'Forbes', '?']	['Give', 'me', 'the', 'homepage', 'of', 'Forbes', '.']	0.2178	1.0528	0.3077	21.0
187	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P26 wd:Q240377 }  
 Where:
 wdt:P26 has human-readable name ""spouse.""
 wd:Q240377 has human-readable name ""Amanda Palmer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals are spouses of Amanda Palmer?	Who is the husband of Amanda Palmer?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P26 wd:Q240377 } 	['Which', 'individuals', 'are', 'spouses', 'of', 'Amanda', 'Palmer', '?']	['Who', 'is', 'the', 'husband', 'of', 'Amanda', 'Palmer', '?']	0.3457	1.5	0.4286	21.0
176	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q2246489 wdt:P170 ?uri }  
 Where:
 wd:Q2246489 has human-readable name ""The Storm on the Sea of Galilee.""
 wdt:P170 has human-readable name ""creator.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Who is the creator of ""The Storm on the Sea of Galilee""?"	Who painted The Storm on the Sea of Galilee?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q2246489 wdt:P170 ?uri } 	"['Who', 'is', 'the', 'creator', 'of', '``', 'The', 'Storm', 'on', 'the', 'Sea', 'of', 'Galilee', ""''"", '?']"	['Who', 'painted', 'The', 'Storm', 'on', 'the', 'Sea', 'of', 'Galilee', '?']	0.4261	1.9932	0.6316	18.0
62	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q5469 wdt:P610 ?uri } 
 Where:
 wd:Q5469 has human-readable name ""Karakoram.""
 wdt:P610 has human-readable name ""highest point.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest point of the Karakoram?	What is the highest place of Karakoram?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q5469 wdt:P610 ?uri }	['What', 'is', 'the', 'highest', 'point', 'of', 'the', 'Karakoram', '?']	['What', 'is', 'the', 'highest', 'place', 'of', 'Karakoram', '?']	0.3689	2.3333	0.8571	8.0
173	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?date WHERE { wd:Q33 p:P463 ?membership . ?membership pq:P580 ?date . ?membership ps:P463 wd:Q458 . }  
 Where:
 wd:Q33 has human-readable name ""Finland.""
 p:P463 has human-readable name ""member of.""
 pq:P580 has human-readable name ""start time.""
 ps:P463 has human-readable name ""member of.""
 wd:Q458 has human-readable name ""European Union.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the start time of Finland's membership in the European Union?	When did Finland join the EU?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?date WHERE { wd:Q33 p:P463 ?membership . ?membership pq:P580 ?date . ?membership ps:P463 wd:Q458 . } 	"['What', 'is', 'the', 'start', 'time', 'of', 'Finland', ""'s"", 'membership', 'in', 'the', 'European', 'Union', '?']"	['When', 'did', 'Finland', 'join', 'the', 'EU', '?']	0.2496	0.6016	0.1176	45.0
168	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8539> <http://www.wikidata.org/prop/direct/P161> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q8539 has human-readable name ""The Big Bang Theory.""
 http://www.wikidata.org/prop/direct/P161 has human-readable name ""cast member.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which cast members are part of ""The Big Bang Theory""?"	Which actors play in Big Bang Theory?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8539> <http://www.wikidata.org/prop/direct/P161> ?uri}	"['Which', 'cast', 'members', 'are', 'part', 'of', '``', 'The', 'Big', 'Bang', 'Theory', ""''"", '?']"	['Which', 'actors', 'play', 'in', 'Big', 'Bang', 'Theory', '?']	0.1852	1.1538	0.3529	23.0
166	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82594> . ?uri <http://www.wikidata.org/prop/direct/P166> ?award . ?award <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q19020> . } 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q82594 has human-readable name ""computer scientist.""
 http://www.wikidata.org/prop/direct/P166 has human-readable name ""award received.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q19020 has human-readable name ""Academy Awards.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals who are computer scientists have received an Academy Award?	Which computer scientist won an oscar?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82594> . ?uri <http://www.wikidata.org/prop/direct/P166> ?award . ?award <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q19020> . }	['Which', 'individuals', 'who', 'are', 'computer', 'scientists', 'have', 'received', 'an', 'Academy', 'Award', '?']	['Which', 'computer', 'scientist', 'won', 'an', 'oscar', '?']	0.2724	0.9358	0.3529	45.0
160	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q8337 has human-readable name ""Harry Potter.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What is the URI of the author of the entity with the human-readable name ""Harry Potter""?"	Who wrote Harry Potter?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?uri}	"['What', 'is', 'the', 'URI', 'of', 'the', 'author', 'of', 'the', 'entity', 'with', 'the', 'human-readable', 'name', '``', 'Harry', 'Potter', ""''"", '?']"	['Who', 'wrote', 'Harry', 'Potter', '?']	0.1499	0.3666	0.0	66.0
158	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q36180 ; wdt:P166 wd:Q37922 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q36180 has human-readable name ""writer.""
 wdt:P166 has human-readable name ""award received.""
 wd:Q37922 has human-readable name ""Nobel Prize in Literature.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals have received the Nobel Prize in Literature for their occupation as a writer?	Give me all writers that won the Nobel Prize in literature.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q36180 ; wdt:P166 wd:Q37922 . }	['Which', 'individuals', 'have', 'received', 'the', 'Nobel', 'Prize', 'in', 'Literature', 'for', 'their', 'occupation', 'as', 'a', 'writer', '?']	['Give', 'me', 'all', 'writers', 'that', 'won', 'the', 'Nobel', 'Prize', 'in', 'literature', '.']	0.1531	0.8962	0.3077	62.0
157	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12125895 wdt:P161 ?uri. ?uri wdt:P19 ?birthplace . ?birthplace wdt:P17 wd:Q145 . } 
 Where:
 wd:Q12125895 has human-readable name ""Lovesick.""
 wdt:P161 has human-readable name ""cast member.""
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q145 has human-readable name ""United Kingdom.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the cast members of the TV show ""Lovesick"" who were born in the United Kingdom?"	Give me English actors starring in Lovesick.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q12125895 wdt:P161 ?uri. ?uri wdt:P19 ?birthplace . ?birthplace wdt:P17 wd:Q145 . }	"['What', 'are', 'the', 'cast', 'members', 'of', 'the', 'TV', 'show', '``', 'Lovesick', ""''"", 'who', 'were', 'born', 'in', 'the', 'United', 'Kingdom', '?']"	['Give', 'me', 'English', 'actors', 'starring', 'in', 'Lovesick', '.']	0.2163	0.3	0.0909	70.0
150	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q236> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . } 
 Where:
 http://www.wikidata.org/entity/Q236 has human-readable name ""Montenegro.""
 http://www.wikidata.org/prop/direct/P35 has human-readable name ""head of state.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the cities where the head of state of Montenegro was born?	In which city was the president of Montenegro born?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q236> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . }	['What', 'are', 'the', 'cities', 'where', 'the', 'head', 'of', 'state', 'of', 'Montenegro', 'was', 'born', '?']	['In', 'which', 'city', 'was', 'the', 'president', 'of', 'Montenegro', 'born', '?']	0.2425	1.4237	0.4	33.0
149	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1082 ?population . ?uri wdt:P2046 ?area . BIND((?population/?area) AS ?density ) } ORDER BY DESC(?density) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P1082 has human-readable name ""population.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the U.S. state with the highest population density?	Which U.S. state has the highest population density?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1082 ?population . ?uri wdt:P2046 ?area . BIND((?population/?area) AS ?density ) } ORDER BY DESC(?density) LIMIT 1	['What', 'is', 'the', 'U.S.', 'state', 'with', 'the', 'highest', 'population', 'density', '?']	['Which', 'U.S.', 'state', 'has', 'the', 'highest', 'population', 'density', '?']	0.4035	2.0172	0.7368	11.0
25	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q148> . ?uri <http://www.wikidata.org/prop/direct/P2043> ?length } ORDER BY DESC(?length) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q4022 has human-readable name ""river.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q148 has human-readable name ""People's Republic of China.""
 http://www.wikidata.org/prop/direct/P2043 has human-readable name ""length.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the URI of the river in the People's Republic of China with the longest length?	What is the longest river in China?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q148> . ?uri <http://www.wikidata.org/prop/direct/P2043> ?length } ORDER BY DESC(?length) LIMIT 1	"['What', 'is', 'the', 'URI', 'of', 'the', 'river', 'in', 'the', 'People', ""'s"", 'Republic', 'of', 'China', 'with', 'the', 'longest', 'length', '?']"	['What', 'is', 'the', 'longest', 'river', 'in', 'China', '?']	0.185	1.2632	0.5	58.0
143	"Having a SPARQL query: SELECT DISTINCT ?string WHERE { <http://www.wikidata.org/entity/Q64> <http://www.wikidata.org/prop/direct/P473> ?string . } 
 Where:
 http://www.wikidata.org/entity/Q64 has human-readable name ""Berlin.""
 http://www.wikidata.org/prop/direct/P473 has human-readable name ""local dialing code.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the local dialing code for Berlin?	What is the area code of Berlin?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?string WHERE { <http://www.wikidata.org/entity/Q64> <http://www.wikidata.org/prop/direct/P473> ?string . }	['What', 'is', 'the', 'local', 'dialing', 'code', 'for', 'Berlin', '?']	['What', 'is', 'the', 'area', 'code', 'of', 'Berlin', '?']	0.2868	2.0	0.6667	13.0
140	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q901 . ?uri wdt:P69 ?university. wd:Q49113  wdt:P527 ?university . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q901 has human-readable name ""scientist.""
 wdt:P69 has human-readable name ""educated at.""
 wd:Q49113 has human-readable name ""Ivy League.""
 wdt:P527 has human-readable name ""has part(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many scientists who were educated at an Ivy League university are included in the Wikidata database?	How many scientists graduated from an Ivy League university?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P106 wd:Q901 . ?uri wdt:P69 ?university. wd:Q49113  wdt:P527 ?university . }	['How', 'many', 'scientists', 'who', 'were', 'educated', 'at', 'an', 'Ivy', 'League', 'university', 'are', 'included', 'in', 'the', 'Wikidata', 'database', '?']	['How', 'many', 'scientists', 'graduated', 'from', 'an', 'Ivy', 'League', 'university', '?']	0.2011	1.4764	0.4615	52.0
139	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q408 . ?uri wdt:P106 wd:Q13561328 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q408 has human-readable name ""Australia.""
 wdt:P106 has human-readable name ""occupation.""
 wd:Q13561328 has human-readable name ""surfer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many distinct individuals are there who were born in Australia and have the occupation of surfer?	Which professional surfers were born in Australia?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q408 . ?uri wdt:P106 wd:Q13561328 . }	['How', 'many', 'distinct', 'individuals', 'are', 'there', 'who', 'were', 'born', 'in', 'Australia', 'and', 'have', 'the', 'occupation', 'of', 'surfer', '?']	['Which', 'professional', 'surfers', 'were', 'born', 'in', 'Australia', '?']	0.1422	0.8333	0.25	69.0
137	"Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q55> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q7278> .  }  
 Where:
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q55 has human-readable name ""Netherlands.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q7278 has human-readable name ""political party.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which entities are instances of political parties in the country Netherlands?	Give me all Dutch parties.	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q55> . ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q7278> .  } 	['Which', 'entities', 'are', 'instances', 'of', 'political', 'parties', 'in', 'the', 'country', 'Netherlands', '?']	['Give', 'me', 'all', 'Dutch', 'parties', '.']	0.1926	0.2154	0.125	60.0
136	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111> <http://www.wikidata.org/prop/direct/P398> ?uri  . } 
 Where:
 http://www.wikidata.org/entity/Q111 has human-readable name ""Mars.""
 http://www.wikidata.org/prop/direct/P398 has human-readable name ""child astronomical body.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which objects are considered child astronomical bodies of Mars?	How many moons does Mars have?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111> <http://www.wikidata.org/prop/direct/P398> ?uri  . }	['Which', 'objects', 'are', 'considered', 'child', 'astronomical', 'bodies', 'of', 'Mars', '?']	['How', 'many', 'moons', 'does', 'Mars', 'have', '?']	0.2325	0.5615	0.0	49.0
134	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2695156> <http://www.wikidata.org/prop/direct/P460> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q2695156 has human-readable name ""Batman.""
 http://www.wikidata.org/prop/direct/P460 has human-readable name ""said to be the same as.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What other entities are said to be the same as Batman?	What is Batman's real name?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q2695156> <http://www.wikidata.org/prop/direct/P460> ?uri . }	['What', 'other', 'entities', 'are', 'said', 'to', 'be', 'the', 'same', 'as', 'Batman', '?']	"['What', 'is', 'Batman', ""'s"", 'real', 'name', '?']"	0.2535	0.7018	0.125	37.0
132	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q317521> <http://www.wikidata.org/prop/direct/P61> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q317521 has human-readable name ""Elon Musk.""
 http://www.wikidata.org/prop/direct/P61 has human-readable name ""discoverer or inventor.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the discoverer or inventor related to Elon Musk?	What is Elon Musk famous for?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q317521> <http://www.wikidata.org/prop/direct/P61> ?uri . }	['Who', 'is', 'the', 'discoverer', 'or', 'inventor', 'related', 'to', 'Elon', 'Musk', '?']	['What', 'is', 'Elon', 'Musk', 'famous', 'for', '?']	0.2045	1.0209	0.25	42.0
128	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q359>  <http://www.wikidata.org/prop/direct/P50>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q359 has human-readable name ""WikiLeaks.""
 http://www.wikidata.org/prop/direct/P50 has human-readable name ""author.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the author of WikiLeaks?	Who is the author of WikiLeaks?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q359>  <http://www.wikidata.org/prop/direct/P50>  ?o1 .  }	['Who', 'is', 'the', 'author', 'of', 'WikiLeaks', '?']	['Who', 'is', 'the', 'author', 'of', 'WikiLeaks', '?']	1.0	2.8074	1.0	0.0
124	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q164791>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q164791 has human-readable name ""Carlo Giuliani.""
 http://www.wikidata.org/prop/direct/P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the date of death of Carlo Giuliani?	When was Carlo Giuliani shot?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q164791>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }	['What', 'is', 'the', 'date', 'of', 'death', 'of', 'Carlo', 'Giuliani', '?']	['When', 'was', 'Carlo', 'Giuliani', 'shot', '?']	0.1983	0.7755	0.1538	28.0
122	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q91 has human-readable name ""Abraham Lincoln.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the spouse of Abraham Lincoln?	Who was the wife of President Lincoln?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q91>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  }	['Who', 'is', 'the', 'spouse', 'of', 'Abraham', 'Lincoln', '?']	['Who', 'was', 'the', 'wife', 'of', 'President', 'Lincoln', '?']	0.2475	1.875	0.5714	16.0
111	"Having a SPARQL query:  SELECT  (COUNT(DISTINCT ?o1) as ?count)  WHERE { <http://www.wikidata.org/entity/Q33760>  <http://www.wikidata.org/prop/direct/P166>  ?o1 . }  
 Where:
 http://www.wikidata.org/entity/Q33760 has human-readable name ""Bertrand Russell.""
 http://www.wikidata.org/prop/direct/P166 has human-readable name ""award received.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many distinct awards has Bertrand Russell received?	How many awards has Bertrand Russell?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT  (COUNT(DISTINCT ?o1) as ?count)  WHERE { <http://www.wikidata.org/entity/Q33760>  <http://www.wikidata.org/prop/direct/P166>  ?o1 . } 	['How', 'many', 'distinct', 'awards', 'has', 'Bertrand', 'Russell', 'received', '?']	['How', 'many', 'awards', 'has', 'Bertrand', 'Russell', '?']	0.3689	2.1835	0.7143	18.0
117	"Having a SPARQL query: ASK where { <http://www.wikidata.org/entity/Q83325> <http://www.wikidata.org/prop/direct/P1576> <http://www.wikidata.org/entity/Q83364>} 
 Where:
 http://www.wikidata.org/entity/Q83325 has human-readable name ""Pamela Anderson.""
 http://www.wikidata.org/prop/direct/P1576 has human-readable name ""lifestyle.""
 http://www.wikidata.org/entity/Q83364 has human-readable name ""vegetarianism.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Does Pamela Anderson have a lifestyle of vegetarianism?	Is Pamela Anderson a vegan?	en	gpt-3.5-turbo	ZERO_SHOT	ASK where { <http://www.wikidata.org/entity/Q83325> <http://www.wikidata.org/prop/direct/P1576> <http://www.wikidata.org/entity/Q83364>}	['Does', 'Pamela', 'Anderson', 'have', 'a', 'lifestyle', 'of', 'vegetarianism', '?']	['Is', 'Pamela', 'Anderson', 'a', 'vegan', '?']	0.2228	1.1489	0.4615	29.0
59	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P522> <http://www.wikidata.org/entity/Q737809> . } 
 Where:
 http://www.wikidata.org/prop/direct/P522 has human-readable name ""type of orbit.""
 http://www.wikidata.org/entity/Q737809 has human-readable name ""heliocentric orbit.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which unique URIs represent entities that have a ""heliocentric orbit"" as their type of orbit?"	Which space probes were sent into orbit around the sun?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P522> <http://www.wikidata.org/entity/Q737809> . }	"['Which', 'unique', 'URIs', 'represent', 'entities', 'that', 'have', 'a', '``', 'heliocentric', 'orbit', ""''"", 'as', 'their', 'type', 'of', 'orbit', '?']"	['Which', 'space', 'probes', 'were', 'sent', 'into', 'orbit', 'around', 'the', 'sun', '?']	0.2425	0.5766	0.08	61.0
113	"Having a SPARQL query:  SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> .  ?s1 <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> .  ?s1  <http://www.wikidata.org/prop/direct/P1082>  ?o1 . FILTER ( ?o1 > ""250000""^^<http://www.w3.org/2001/XMLSchema#integer>)} 
 Where:
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q515 has human-readable name ""city.""
 http://www.wikidata.org/prop/direct/P1082 has human-readable name ""population.""
 http://www.w3.org/2001/XMLSchema#integer has human-readable name ""integer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which cities in Germany have a population greater than 250,000?	Which German cities have more than 250000 inhabitants?	en	gpt-3.5-turbo	ZERO_SHOT	" SELECT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> .  ?s1 <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q515> .  ?s1  <http://www.wikidata.org/prop/direct/P1082>  ?o1 . FILTER ( ?o1 > ""250000""^^<http://www.w3.org/2001/XMLSchema#integer>)}"	['Which', 'cities', 'in', 'Germany', 'have', 'a', 'population', 'greater', 'than', '250,000', '?']	['Which', 'German', 'cities', 'have', 'more', 'than', '250000', 'inhabitants', '?']	0.2902	1.4409	0.4444	41.0
104	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q25310> <http://www.wikidata.org/prop/direct/P40> ?daughter . ?daughter  <http://www.wikidata.org/prop/direct/P21> <http://www.wikidata.org/entity/Q6581072> . ?daughter  <http://www.wikidata.org/prop/direct/P26> ?uri .} 
 Where:
 http://www.wikidata.org/entity/Q25310 has human-readable name ""Robert F. Kennedy.""
 http://www.wikidata.org/prop/direct/P40 has human-readable name ""child.""
 http://www.wikidata.org/prop/direct/P21 has human-readable name ""sex or gender.""
 http://www.wikidata.org/entity/Q6581072 has human-readable name ""female.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which spouses of the daughters of Robert F. Kennedy are female?	Who is the daughter of Robert Kennedy married to?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q25310> <http://www.wikidata.org/prop/direct/P40> ?daughter . ?daughter  <http://www.wikidata.org/prop/direct/P21> <http://www.wikidata.org/entity/Q6581072> . ?daughter  <http://www.wikidata.org/prop/direct/P26> ?uri .}	['Which', 'spouses', 'of', 'the', 'daughters', 'of', 'Robert', 'F.', 'Kennedy', 'are', 'female', '?']	['Who', 'is', 'the', 'daughter', 'of', 'Robert', 'Kennedy', 'married', 'to', '?']	0.2083	1.3841	0.4211	24.0
10	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q214341>  <http://www.wikidata.org/prop/direct/P2196>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q214341 has human-readable name ""University of Amsterdam.""
 http://www.wikidata.org/prop/direct/P2196 has human-readable name ""students count.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the student count of the University of Amsterdam?	How many students does the Free University of Amsterdam have?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q214341>  <http://www.wikidata.org/prop/direct/P2196>  ?o1 .  }	['What', 'is', 'the', 'student', 'count', 'of', 'the', 'University', 'of', 'Amsterdam', '?']	['How', 'many', 'students', 'does', 'the', 'Free', 'University', 'of', 'Amsterdam', 'have', '?']	0.2111	1.5725	0.3333	26.0
1	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q37156>  <http://www.wikidata.org/prop/direct/P2139>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q37156 has human-readable name ""IBM.""
 http://www.wikidata.org/prop/direct/P2139 has human-readable name ""total revenue.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the total revenue of IBM?	What is the revenue of IBM?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q37156>  <http://www.wikidata.org/prop/direct/P2139>  ?o1 .  }	['What', 'is', 'the', 'total', 'revenue', 'of', 'IBM', '?']	['What', 'is', 'the', 'revenue', 'of', 'IBM', '?']	0.5	2.4564	0.9231	6.0
178	"Having a SPARQL query:  SELECT (COUNT(?s1) as ?c) WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  ?p  <http://www.wikidata.org/entity/Q2009573> .  FILTER (?p = <http://www.wikidata.org/prop/direct/P144> || ?p = <http://www.wikidata.org/prop/direct/P674>) } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/entity/Q2009573 has human-readable name ""James Bond.""
 http://www.wikidata.org/prop/direct/P144 has human-readable name ""based on.""
 http://www.wikidata.org/prop/direct/P674 has human-readable name ""characters.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many films that are based on or have characters from James Bond are there?	How many James Bond movies do exist?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT (COUNT(?s1) as ?c) WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  ?p  <http://www.wikidata.org/entity/Q2009573> .  FILTER (?p = <http://www.wikidata.org/prop/direct/P144> || ?p = <http://www.wikidata.org/prop/direct/P674>) }	['How', 'many', 'films', 'that', 'are', 'based', 'on', 'or', 'have', 'characters', 'from', 'James', 'Bond', 'are', 'there', '?']	['How', 'many', 'James', 'Bond', 'movies', 'do', 'exist', '?']	0.2185	0.9375	0.381	54.0
129	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?uri } 
 Where:
 http://www.wikidata.org/entity/Q5480 has human-readable name ""Bart Simpson.""
 http://www.wikidata.org/prop/direct/P725 has human-readable name ""voice actor.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the unique URIs of voice actors for Bart Simpson (Q5480)?	Who does the voice of Bart Simpson?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?uri }	['What', 'are', 'the', 'unique', 'URIs', 'of', 'voice', 'actors', 'for', 'Bart', 'Simpson', '(', 'Q5480', ')', '?']	['Who', 'does', 'the', 'voice', 'of', 'Bart', 'Simpson', '?']	0.1979	1.2	0.3158	36.0
183	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2263>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q2263 has human-readable name ""Tom Hanks.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is Tom Hanks' spouse?	Who was Tom Hanks married to?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2263>  <http://www.wikidata.org/prop/direct/P26>  ?o1 .  }	"['Who', 'is', 'Tom', 'Hanks', ""'"", 'spouse', '?']"	['Who', 'was', 'Tom', 'Hanks', 'married', 'to', '?']	0.2473	1.6042	0.3636	12.0
181	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q78707> <http://www.wikidata.org/prop/direct/P17> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q78707 has human-readable name ""Yenisey.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which countries is the entity ""Yenisey"" located in?"	Through which countries does the Yenisei river flow?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q78707> <http://www.wikidata.org/prop/direct/P17> ?uri . }	"['Which', 'countries', 'is', 'the', 'entity', '``', 'Yenisey', ""''"", 'located', 'in', '?']"	['Through', 'which', 'countries', 'does', 'the', 'Yenisei', 'river', 'flow', '?']	0.2554	0.8645	0.25	32.0
7	"Having a SPARQL query: SELECT DISTINCT * WHERE { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q59773381> .  ?s1 <http://www.wikidata.org/prop/direct/P176> ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> . ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q786820> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q59773381 has human-readable name ""automobile model series.""
 http://www.wikidata.org/prop/direct/P176 has human-readable name ""manufacturer.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q786820 has human-readable name ""automobile manufacturer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which automobile models are part of an automobile model series, manufactured in Germany by an automobile manufacturer?	Give me all cars that are produced in Germany.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT * WHERE { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q59773381> .  ?s1 <http://www.wikidata.org/prop/direct/P176> ?o1 . ?o1  <http://www.wikidata.org/prop/direct/P17>  <http://www.wikidata.org/entity/Q183> . ?o1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q786820> . }	['Which', 'automobile', 'models', 'are', 'part', 'of', 'an', 'automobile', 'model', 'series', ',', 'manufactured', 'in', 'Germany', 'by', 'an', 'automobile', 'manufacturer', '?']	['Give', 'me', 'all', 'cars', 'that', 'are', 'produced', 'in', 'Germany', '.']	0.1499	0.5245	0.2609	86.0
135	"Having a SPARQL query:  SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2831>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  }  
 Where:
 http://www.wikidata.org/entity/Q2831 has human-readable name ""Michael Jackson.""
 http://www.wikidata.org/prop/direct/P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the date of death of Michael Jackson?	When did Michael Jackson die?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q2831>  <http://www.wikidata.org/prop/direct/P570>  ?o1 .  } 	['What', 'is', 'the', 'date', 'of', 'death', 'of', 'Michael', 'Jackson', '?']	['When', 'did', 'Michael', 'Jackson', 'die', '?']	0.1983	0.7755	0.1538	27.0
50	"Having a SPARQL query:  SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P30>  <http://www.wikidata.org/entity/Q15> . ?s1  <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>*  <http://www.wikidata.org/entity/Q8072> . ?s1 <http://www.wikidata.org/prop/direct/P2044> ?o1 . } ORDER BY DESC(?o1) LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P30 has human-readable name ""continent.""
 http://www.wikidata.org/entity/Q15 has human-readable name ""Africa.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q8072 has human-readable name ""volcano.""
 http://www.wikidata.org/prop/direct/P2044 has human-readable name ""elevation above sea level.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the highest elevation above sea level of a volcano located in Africa?	What is the highest volcano in Africa?	en	gpt-3.5-turbo	ZERO_SHOT	 SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P30>  <http://www.wikidata.org/entity/Q15> . ?s1  <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>*  <http://www.wikidata.org/entity/Q8072> . ?s1 <http://www.wikidata.org/prop/direct/P2044> ?o1 . } ORDER BY DESC(?o1) LIMIT 1	['What', 'is', 'the', 'highest', 'elevation', 'above', 'sea', 'level', 'of', 'a', 'volcano', 'located', 'in', 'Africa', '?']	['What', 'is', 'the', 'highest', 'volcano', 'in', 'Africa', '?']	0.246	1.6	0.6667	39.0
39	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q49757 . ?x wdt:P50 ?uri ; wdt:P31 wd:Q571 . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q49757 has human-readable name ""poet.""
 wdt:P50 has human-readable name ""author.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q571 has human-readable name ""book.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which poet has the most number of authored books according to Wikidata?	Which poet wrote the most books?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q49757 . ?x wdt:P50 ?uri ; wdt:P31 wd:Q571 . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1	['Which', 'poet', 'has', 'the', 'most', 'number', 'of', 'authored', 'books', 'according', 'to', 'Wikidata', '?']	['Which', 'poet', 'wrote', 'the', 'most', 'books', '?']	0.2505	1.2957	0.4444	46.0
71	"Having a SPARQL query: SELECT ?s1 where  { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q389459> }  
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q389459 has human-readable name ""Mars rover.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which subjects are instances of Mars rovers?	Give me all spacecrafts that flew to Mars.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?s1 where  { ?s1 <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q389459> } 	['Which', 'subjects', 'are', 'instances', 'of', 'Mars', 'rovers', '?']	['Give', 'me', 'all', 'spacecrafts', 'that', 'flew', 'to', 'Mars', '.']	0.1749	0.3737	0.1333	34.0
213	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q213> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q33946> . } } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q11424 has human-readable name ""film.""
 http://www.wikidata.org/prop/direct/P495 has human-readable name ""country of origin.""
 http://www.wikidata.org/entity/Q213 has human-readable name ""Czech Republic.""
 http://www.wikidata.org/prop/direct/P495 has human-readable name ""country of origin.""
 http://www.wikidata.org/entity/Q33946 has human-readable name ""Czechoslovakia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which unique URIs correspond to films that are either from the Czech Republic or Czechoslovakia?	Show me all Czech movies.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q213> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P495> <http://www.wikidata.org/entity/Q33946> . } }	['Which', 'unique', 'URIs', 'correspond', 'to', 'films', 'that', 'are', 'either', 'from', 'the', 'Czech', 'Republic', 'or', 'Czechoslovakia', '?']	['Show', 'me', 'all', 'Czech', 'movies', '.']	0.1869	0.1616	0.1	80.0
209	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q11631 . ?uri wdt:P27 wd:Q148 . } 
 Where:
 wdt:P106 has human-readable name ""occupation.""
 wd:Q11631 has human-readable name ""astronaut.""
 wdt:P27 has human-readable name ""country of citizenship.""
 wd:Q148 has human-readable name ""People's Republic of China.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals are astronauts and citizens of the People's Republic of China?	Give me all taikonauts.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q11631 . ?uri wdt:P27 wd:Q148 . }	"['Which', 'individuals', 'are', 'astronauts', 'and', 'citizens', 'of', 'the', 'People', ""'s"", 'Republic', 'of', 'China', '?']"	['Give', 'me', 'all', 'taikonauts', '.']	0.0	0.0	0.0	68.0
105	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  { ?volcano <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8072> . } UNION { ?volcano <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q8072> . } ?volcano <http://www.wikidata.org/prop/direct/P17> ?uri . } GROUP BY ?uri HAVING(COUNT(?volcano)>10) 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q8072 has human-readable name ""volcano.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q8072 has human-readable name ""volcano.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which countries have more than 10 volcanoes?	Which countries have more than ten volcanoes?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  { ?volcano <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8072> . } UNION { ?volcano <http://www.wikidata.org/prop/direct/P31> ?type . ?type <http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q8072> . } ?volcano <http://www.wikidata.org/prop/direct/P17> ?uri . } GROUP BY ?uri HAVING(COUNT(?volcano)>10)	['Which', 'countries', 'have', 'more', 'than', '10', 'volcanoes', '?']	['Which', 'countries', 'have', 'more', 'than', 'ten', 'volcanoes', '?']	0.5946	2.625	0.8571	3.0
52	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. } 
 Where:
 wdt:P161 has human-readable name ""cast member.""
 wd:Q37079 has human-readable name ""Tom Cruise.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which cast members have acted alongside Tom Cruise?	Give me all movies with Tom Cruise.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. }	['Which', 'cast', 'members', 'have', 'acted', 'alongside', 'Tom', 'Cruise', '?']	['Give', 'me', 'all', 'movies', 'with', 'Tom', 'Cruise', '.']	0.1873	0.6667	0.1333	31.0
102	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q3266236 wdt:P170 ?author . ?author wdt:P570 ?date } 
 Where:
 wd:Q3266236 has human-readable name ""Count Dracula.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did the creator of Count Dracula die?	When did Dracula's creator die?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q3266236 wdt:P170 ?author . ?author wdt:P570 ?date }	['When', 'did', 'the', 'creator', 'of', 'Count', 'Dracula', 'die', '?']	"['When', 'did', 'Dracula', ""'s"", 'creator', 'die', '?']"	0.2932	1.8716	0.6154	23.0
21	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q52 wdt:P170 ?uri . ?uri wdt:P31 wd:Q5 . } 
 Where:
 wd:Q52 has human-readable name ""Wikipedia.""
 wdt:P170 has human-readable name ""creator.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q5 has human-readable name ""human.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the creators of instances classified as humans in Wikipedia?	Who created English Wikipedia?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q52 wdt:P170 ?uri . ?uri wdt:P31 wd:Q5 . }	['What', 'are', 'the', 'creators', 'of', 'instances', 'classified', 'as', 'humans', 'in', 'Wikipedia', '?']	['Who', 'created', 'English', 'Wikipedia', '?']	0.1657	0.387	0.1333	44.0
34	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P21 wd:Q6581072 . ?uri wdt:P39 wd:Q4970706 . } 
 Where:
 wdt:P21 has human-readable name ""sex or gender.""
 wd:Q6581072 has human-readable name ""female.""
 wdt:P39 has human-readable name ""position held.""
 wd:Q4970706 has human-readable name ""Federal Chancellor of Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of females who have held the position of Federal Chancellor of Germany?	Give me all female German chancellors.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P21 wd:Q6581072 . ?uri wdt:P39 wd:Q4970706 . }	['What', 'are', 'the', 'URIs', 'of', 'females', 'who', 'have', 'held', 'the', 'position', 'of', 'Federal', 'Chancellor', 'of', 'Germany', '?']	['Give', 'me', 'all', 'female', 'German', 'chancellors', '.']	0.0	0.0	0.0	65.0
145	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q125054 wdt:P355 ?uri } 
 Where:
 wd:Q125054 has human-readable name ""Aldi.""
 wdt:P355 has human-readable name ""has subsidiary.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the subsidiaries of Aldi?	Who owns Aldi?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q125054 wdt:P355 ?uri }	['What', 'are', 'the', 'subsidiaries', 'of', 'Aldi', '?']	['Who', 'owns', 'Aldi', '?']	0.208	0.5714	0.2222	24.0
154	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q72653 . ?uri wdt:P136 ?genre . ?genre wdt:P279* wd:Q571 . } 
 Where:
 wdt:P50 has human-readable name ""author.""
 wd:Q72653 has human-readable name ""Danielle Steel.""
 wdt:P136 has human-readable name ""genre.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q571 has human-readable name ""book.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of books that are in the genre of literature written by Danielle Steel?	Which books were written by Danielle Steel?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P50 wd:Q72653 . ?uri wdt:P136 ?genre . ?genre wdt:P279* wd:Q571 . }	['What', 'are', 'the', 'URIs', 'of', 'books', 'that', 'are', 'in', 'the', 'genre', 'of', 'literature', 'written', 'by', 'Danielle', 'Steel', '?']	['Which', 'books', 'were', 'written', 'by', 'Danielle', 'Steel', '?']	0.2104	1.0	0.4762	49.0
198	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT * WHERE { ?uri wdt:P31 wd:Q5 . ?uri wdt:P737 wd:Q913 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q5 has human-readable name ""human.""
 wdt:P737 has human-readable name ""influenced by.""
 wd:Q913 has human-readable name ""Socrates.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which humans are influenced by Socrates?	Who was influenced by Socrates?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT * WHERE { ?uri wdt:P31 wd:Q5 . ?uri wdt:P737 wd:Q913 . }	['Which', 'humans', 'are', 'influenced', 'by', 'Socrates', '?']	['Who', 'was', 'influenced', 'by', 'Socrates', '?']	0.4111	1.4771	0.5455	11.0
162	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?n WHERE { wd:Q4138  wdt:P4511 ?n } 
 Where:
 wd:Q4138 has human-readable name ""Chiemsee.""
 wdt:P4511 has human-readable name ""vertical depth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the vertical depth of Chiemsee?	How deep is Lake Chiemsee?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?n WHERE { wd:Q4138  wdt:P4511 ?n }	['What', 'is', 'the', 'vertical', 'depth', 'of', 'Chiemsee', '?']	['How', 'deep', 'is', 'Lake', 'Chiemsee', '?']	0.2178	0.9694	0.3333	24.0
212	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {  ?type wdt:P279* wd:Q4830453 . ?aerospace wdt:P279* wd:Q3477363 . ?healthcare wdt:P279* wd:Q15067276 . ?pharma wdt:P279* wd:Q507443 . ?uri wdt:P452 ?aerospace ; wdt:P452 ?healthcare . } 
 Where:
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q4830453 has human-readable name ""business.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3477363 has human-readable name ""aerospace manufacturer.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q15067276 has human-readable name ""health care industry.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q507443 has human-readable name ""pharmaceutical industry.""
 wdt:P452 has human-readable name ""industry.""
 wdt:P452 has human-readable name ""industry.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which URIs correspond to entities that belong to both the aerospace manufacturer industry and the health care industry?	Which companies work in the aerospace industry as well as in medicine?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {  ?type wdt:P279* wd:Q4830453 . ?aerospace wdt:P279* wd:Q3477363 . ?healthcare wdt:P279* wd:Q15067276 . ?pharma wdt:P279* wd:Q507443 . ?uri wdt:P452 ?aerospace ; wdt:P452 ?healthcare . }	['Which', 'URIs', 'correspond', 'to', 'entities', 'that', 'belong', 'to', 'both', 'the', 'aerospace', 'manufacturer', 'industry', 'and', 'the', 'health', 'care', 'industry', '?']	['Which', 'companies', 'work', 'in', 'the', 'aerospace', 'industry', 'as', 'well', 'as', 'in', 'medicine', '?']	0.1703	0.9738	0.3077	71.0
96	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q928 . ?uri wdt:P106  wd:Q13561328 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P17 has human-readable name ""country.""
 wd:Q928 has human-readable name ""Philippines.""
 wdt:P106 has human-readable name ""occupation.""
 wd:Q13561328 has human-readable name ""surfer.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the entities whose occupation is listed as ""surfer"" and were born in the country of ""Philippines""?"	Which professional surfers were born on the Philippines?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P19 ?birtplace . ?birtplace wdt:P17 wd:Q928 . ?uri wdt:P106  wd:Q13561328 . }	"['What', 'are', 'the', 'entities', 'whose', 'occupation', 'is', 'listed', 'as', '``', 'surfer', ""''"", 'and', 'were', 'born', 'in', 'the', 'country', 'of', '``', 'Philippines', ""''"", '?']"	['Which', 'professional', 'surfers', 'were', 'born', 'on', 'the', 'Philippines', '?']	0.1564	0.6891	0.24	60.0
40	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9439 ?childof ?uri . VALUES ?childof { wdt:P22 wdt:P25 }} 
 Where:
 wd:Q9439 has human-readable name ""Victoria.""
 wdt:P22 has human-readable name ""father.""
 wdt:P25 has human-readable name ""mother.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of the father and mother of Victoria?	Who were the parents of Queen Victoria?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9439 ?childof ?uri . VALUES ?childof { wdt:P22 wdt:P25 }}	['What', 'are', 'the', 'URIs', 'of', 'the', 'father', 'and', 'mother', 'of', 'Victoria', '?']	['Who', 'were', 'the', 'parents', 'of', 'Queen', 'Victoria', '?']	0.197	1.0	0.375	31.0
79	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> ASK WHERE { { ?uri wdt:P31 wd:Q23413. } UNION { ?uri wdt:P31 ?castlesubtype . ?castlesubtype wdt:P279* wd:Q23413 } ?uri wdt:P17 wd:Q30 } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23413 has human-readable name ""castle.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q23413 has human-readable name ""castle.""
 wdt:P17 has human-readable name ""country.""
 wd:Q30 has human-readable name ""United States of America.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is there a castle in the United States of America?	Are there any castles in the United States?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> ASK WHERE { { ?uri wdt:P31 wd:Q23413. } UNION { ?uri wdt:P31 ?castlesubtype . ?castlesubtype wdt:P279* wd:Q23413 } ?uri wdt:P17 wd:Q30 }	['Is', 'there', 'a', 'castle', 'in', 'the', 'United', 'States', 'of', 'America', '?']	['Are', 'there', 'any', 'castles', 'in', 'the', 'United', 'States', '?']	0.2597	1.7291	0.4444	17.0
141	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * WHERE { wd:Q191 wdt:P2936 ?lang . } 
 Where:
 wd:Q191 has human-readable name ""Estonia.""
 wdt:P2936 has human-readable name ""language used.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What language is used in Estonia?	Which languages are spoken in Estonia?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * WHERE { wd:Q191 wdt:P2936 ?lang . }	['What', 'language', 'is', 'used', 'in', 'Estonia', '?']	['Which', 'languages', 'are', 'spoken', 'in', 'Estonia', '?']	0.2676	1.2032	0.3333	12.0
80	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q5113> . ?uri <http://www.wikidata.org/prop/direct/P141> <http://www.wikidata.org/entity/Q219127> . } 
 Where:
 http://www.wikidata.org/prop/direct/P171 has human-readable name ""parent taxon.""
 http://www.wikidata.org/entity/Q5113 has human-readable name ""bird.""
 http://www.wikidata.org/prop/direct/P141 has human-readable name ""IUCN conservation status.""
 http://www.wikidata.org/entity/Q219127 has human-readable name ""Critically Endangered.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which entities have a ""parent taxon"" of ""bird"" and an ""IUCN conservation status"" of ""Critically Endangered""?"	Give me a list of all critically endangered birds.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q5113> . ?uri <http://www.wikidata.org/prop/direct/P141> <http://www.wikidata.org/entity/Q219127> . }	"['Which', 'entities', 'have', 'a', '``', 'parent', 'taxon', ""''"", 'of', '``', 'bird', ""''"", 'and', 'an', '``', 'IUCN', 'conservation', 'status', ""''"", 'of', '``', 'Critically', 'Endangered', ""''"", '?']"	['Give', 'me', 'a', 'list', 'of', 'all', 'critically', 'endangered', 'birds', '.']	0.2098	0.2658	0.1667	79.0
159	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri ?x ?y  WHERE { wd:Q584  wdt:P17 ?uri . ?uri wdt:P31 wd:Q6256 . }  
 Where:
 wd:Q584 has human-readable name ""Rhine.""
 wdt:P17 has human-readable name ""country.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q6256 has human-readable name ""country.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What countries is the Rhine river (wd:Q584) located in?	Which countries are connected by the Rhine?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri ?x ?y  WHERE { wd:Q584  wdt:P17 ?uri . ?uri wdt:P31 wd:Q6256 . } 	['What', 'countries', 'is', 'the', 'Rhine', 'river', '(', 'wd', ':', 'Q584', ')', 'located', 'in', '?']	['Which', 'countries', 'are', 'connected', 'by', 'the', 'Rhine', '?']	0.1843	0.8571	0.25	34.0
107	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9682 wdt:P22  ?uri . } 
 Where:
 wd:Q9682 has human-readable name ""Elizabeth II.""
 wdt:P22 has human-readable name ""father.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Who is the father of Elizabeth II?	Who was the father of Queen Elizabeth II?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q9682 wdt:P22  ?uri . }	['Who', 'is', 'the', 'father', 'of', 'Elizabeth', 'II', '?']	['Who', 'was', 'the', 'father', 'of', 'Queen', 'Elizabeth', 'II', '?']	0.3698	2.6161	0.8	8.0
163	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q11344 . } 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q11344 has human-readable name ""chemical element.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the unique URIs of entities that are instances of chemical elements in Wikidata?	Give me all chemical elements.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q11344 . }	['What', 'are', 'the', 'unique', 'URIs', 'of', 'entities', 'that', 'are', 'instances', 'of', 'chemical', 'elements', 'in', 'Wikidata', '?']	['Give', 'me', 'all', 'chemical', 'elements', '.']	0.1461	0.3231	0.2222	65.0
211	"Having a SPARQL query: PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri p:P39 ?position . ?position ps:P39 wd:Q11696 . ?position pq:P582 ?termEnd. FILTER((YEAR(NOW()) - YEAR(?termEnd)) <= 20) } 
 Where:
 p:P39 has human-readable name ""position held.""
 ps:P39 has human-readable name ""position held.""
 wd:Q11696 has human-readable name ""President of the United States.""
 pq:P582 has human-readable name ""end time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the entities that currently hold or have held the position of President of the United States within the last 20 years?	Give me all American presidents of the last 20 years.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri p:P39 ?position . ?position ps:P39 wd:Q11696 . ?position pq:P582 ?termEnd. FILTER((YEAR(NOW()) - YEAR(?termEnd)) <= 20) }	['What', 'are', 'the', 'entities', 'that', 'currently', 'hold', 'or', 'have', 'held', 'the', 'position', 'of', 'President', 'of', 'the', 'United', 'States', 'within', 'the', 'last', '20', 'years', '?']	['Give', 'me', 'all', 'American', 'presidents', 'of', 'the', 'last', '20', 'years', '.']	0.1119	0.7207	0.2759	87.0
51	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q6667101 wdt:P577 ?date } 
 Where:
 wd:Q6667101 has human-readable name ""Worst Case Scenario.""
 wdt:P577 has human-readable name ""publication date.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What is the publication date of the entity with the human-readable name ""Worst Case Scenario""?"	When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q6667101 wdt:P577 ?date }	"['What', 'is', 'the', 'publication', 'date', 'of', 'the', 'entity', 'with', 'the', 'human-readable', 'name', '``', 'Worst', 'Case', 'Scenario', ""''"", '?']"	['When', 'is', 'the', 'movie', 'Worst', 'Case', 'Scenario', 'going', 'to', 'be', 'in', 'cinemas', 'in', 'the', 'Netherlands', '?']	0.1735	1.4444	0.1538	66.0
144	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q443120> <http://www.wikidata.org/prop/direct/P26> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q443120 has human-readable name ""Lance Bass.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the distinct URI of the spouse of Lance Bass?	Whom did Lance Bass marry?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q443120> <http://www.wikidata.org/prop/direct/P26> ?uri . }	['What', 'is', 'the', 'distinct', 'URI', 'of', 'the', 'spouse', 'of', 'Lance', 'Bass', '?']	['Whom', 'did', 'Lance', 'Bass', 'marry', '?']	0.1834	0.6462	0.1429	41.0
131	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q843 wdt:P2936 ?uri . } 
 Where:
 wd:Q843 has human-readable name ""Pakistan.""
 wdt:P2936 has human-readable name ""language used.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What language is used in Pakistan?	What languages are spoken in Pakistan?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q843 wdt:P2936 ?uri . }	['What', 'language', 'is', 'used', 'in', 'Pakistan', '?']	['What', 'languages', 'are', 'spoken', 'in', 'Pakistan', '?']	0.2876	1.6042	0.5	9.0
120	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q1124 wdt:P40 ?child . ?child wdt:P26 ?uri } 
 Where:
 wd:Q1124 has human-readable name ""Bill Clinton.""
 wdt:P40 has human-readable name ""child.""
 wdt:P26 has human-readable name ""spouse.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which spouses of Bill Clinton's children are known in Wikidata?	Who is the daughter of Bill Clinton married to?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT * { wd:Q1124 wdt:P40 ?child . ?child wdt:P26 ?uri }	"['Which', 'spouses', 'of', 'Bill', 'Clinton', ""'s"", 'children', 'are', 'known', 'in', 'Wikidata', '?']"	['Who', 'is', 'the', 'daughter', 'of', 'Bill', 'Clinton', 'married', 'to', '?']	0.1865	1.1073	0.2105	40.0
164	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q43653> <http://www.wikidata.org/prop/direct/P1029> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q43653 has human-readable name ""Apollo 11.""
 http://www.wikidata.org/prop/direct/P1029 has human-readable name ""crew member(s).""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the distinct URIs of crew members of the Apollo 11 mission?	Who was on the Apollo 11 mission?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q43653> <http://www.wikidata.org/prop/direct/P1029> ?uri}	['What', 'are', 'the', 'distinct', 'URIs', 'of', 'crew', 'members', 'of', 'the', 'Apollo', '11', 'mission', '?']	['Who', 'was', 'on', 'the', 'Apollo', '11', 'mission', '?']	0.2658	1.0714	0.4444	37.0
151	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . } 
 Where:
 wdt:P175 has human-readable name ""performer.""
 wd:Q483407 has human-readable name ""Ramones.""
 p:P1433 has human-readable name ""published in.""
 pq:P2868 has human-readable name ""subject has role.""
 wd:Q13432985 has human-readable name ""B-side.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which performers are associated with songs published in a B-side by the Ramones?	Give me all B-sides of the Ramones.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX p: <http://www.wikidata.org/prop/> SELECT ?res WHERE { ?res wdt:P175 wd:Q483407 . ?res p:P1433 _:a ._:a pq:P2868 wd:Q13432985 . }	['Which', 'performers', 'are', 'associated', 'with', 'songs', 'published', 'in', 'a', 'B-side', 'by', 'the', 'Ramones', '?']	['Give', 'me', 'all', 'B-sides', 'of', 'the', 'Ramones', '.']	0.155	0.4286	0.1	54.0
63	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { ?uri wdt:P1449 ?nickname . FILTER REGEX(STR(?nickname), ""^Scarface$"") } 
 Where:
 wdt:P1449 has human-readable name ""nickname.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the URIs of entities with the nickname ""Scarface""?"	Who was called Scarface?	en	gpt-3.5-turbo	ZERO_SHOT	"PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { ?uri wdt:P1449 ?nickname . FILTER REGEX(STR(?nickname), ""^Scarface$"") }"	"['What', 'are', 'the', 'URIs', 'of', 'entities', 'with', 'the', 'nickname', '``', 'Scarface', ""''"", '?']"	['Who', 'was', 'called', 'Scarface', '?']	0.2273	0.3572	0.0	42.0
27	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P403> <http://www.wikidata.org/entity/Q1693> . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q4022 has human-readable name ""river.""
 http://www.wikidata.org/prop/direct/P403 has human-readable name ""mouth of the watercourse.""
 http://www.wikidata.org/entity/Q1693 has human-readable name ""North Sea.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the distinct URIs of rivers that flow into the North Sea?	Which rivers flow into the North Sea?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4022> . ?uri <http://www.wikidata.org/prop/direct/P403> <http://www.wikidata.org/entity/Q1693> . }	['What', 'are', 'the', 'distinct', 'URIs', 'of', 'rivers', 'that', 'flow', 'into', 'the', 'North', 'Sea', '?']	['Which', 'rivers', 'flow', 'into', 'the', 'North', 'Sea', '?']	0.3636	1.5	0.6316	30.0
156	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { wd:Q8962067 wdt:P131+ ?uri . } 
 Where:
 wd:Q8962067 has human-readable name ""Fort Knox.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What administrative territorial entities is Fort Knox located in?	Where is Fort Knox located?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri { wd:Q8962067 wdt:P131+ ?uri . }	['What', 'administrative', 'territorial', 'entities', 'is', 'Fort', 'Knox', 'located', 'in', '?']	['Where', 'is', 'Fort', 'Knox', 'located', '?']	0.2778	1.2925	0.4286	38.0
207	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P19 ?birthplace . ?uri wdt:P20 ?deathplace . FILTER(?birthplace = ?deathplace) ?uri wdt:P21 wd:Q6581072 . ?uri wdt:P22 ?father . ?father wdt:P97/wdt:P460 wd:Q1128240. ?father wdt:P27*/wdt:P1366*/wdt:P706* wd:Q38272 . } 
 Where:
 wdt:P19 has human-readable name ""place of birth.""
 wdt:P20 has human-readable name ""place of death.""
 wdt:P21 has human-readable name ""sex or gender.""
 wd:Q6581072 has human-readable name ""female.""
 wdt:P22 has human-readable name ""father.""
 wdt:P97 has human-readable name ""noble title.""
 wdt:P460 has human-readable name ""said to be the same as.""
 wd:Q1128240 has human-readable name ""earl.""
 wdt:P27 has human-readable name ""country of citizenship.""
 wdt:P1366 has human-readable name ""replaced by.""
 wdt:P706 has human-readable name ""located in/on physical feature.""
 wd:Q38272 has human-readable name ""British Isles.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the female individuals who were born and died in the same place, whose fathers were earls said to be the same as, and whose fathers were located in the British Isles?	Which daughters of British earls died at the same place they were born at?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { ?uri wdt:P19 ?birthplace . ?uri wdt:P20 ?deathplace . FILTER(?birthplace = ?deathplace) ?uri wdt:P21 wd:Q6581072 . ?uri wdt:P22 ?father . ?father wdt:P97/wdt:P460 wd:Q1128240. ?father wdt:P27*/wdt:P1366*/wdt:P706* wd:Q38272 . }	['What', 'are', 'the', 'female', 'individuals', 'who', 'were', 'born', 'and', 'died', 'in', 'the', 'same', 'place', ',', 'whose', 'fathers', 'were', 'earls', 'said', 'to', 'be', 'the', 'same', 'as', ',', 'and', 'whose', 'fathers', 'were', 'located', 'in', 'the', 'British', 'Isles', '?']	['Which', 'daughters', 'of', 'British', 'earls', 'died', 'at', 'the', 'same', 'place', 'they', 'were', 'born', 'at', '?']	0.1094	0.9767	0.2162	123.0
24	"Having a SPARQL query: SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q268218>} 
 Where:
 http://www.wikidata.org/prop/direct/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q268218 has human-readable name ""Emperor of China.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"How many distinct entities hold the position of ""Emperor of China"" according to Wikidata?"	How many emperors did China have?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT (COUNT(DISTINCT ?uri) as ?count) WHERE {  ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q268218>}	"['How', 'many', 'distinct', 'entities', 'hold', 'the', 'position', 'of', '``', 'Emperor', 'of', 'China', ""''"", 'according', 'to', 'Wikidata', '?']"	['How', 'many', 'emperors', 'did', 'China', 'have', '?']	0.1692	0.6606	0.2105	65.0
133	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q1381762> . } 
 Where:
 http://www.wikidata.org/prop/direct/P361 has human-readable name ""part of.""
 http://www.wikidata.org/entity/Q1381762 has human-readable name ""Teenage Mutant Ninja Turtles.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which unique entities are identified as part of the entity with the human-readable name ""Teenage Mutant Ninja Turtles""?"	What are the names of the Teenage Mutant Ninja Turtles?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q1381762> . }	"['Which', 'unique', 'entities', 'are', 'identified', 'as', 'part', 'of', 'the', 'entity', 'with', 'the', 'human-readable', 'name', '``', 'Teenage', 'Mutant', 'Ninja', 'Turtles', ""''"", '?']"	['What', 'are', 'the', 'names', 'of', 'the', 'Teenage', 'Mutant', 'Ninja', 'Turtles', '?']	0.1496	1.3874	0.3846	71.0
103	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1124023> <http://www.wikidata.org/prop/direct/P559> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q1124023 has human-readable name ""Piccadilly.""
 http://www.wikidata.org/prop/direct/P559 has human-readable name ""terminus.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the terminus of Piccadilly?	Where does Piccadilly start?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1124023> <http://www.wikidata.org/prop/direct/P559> ?uri}	['What', 'is', 'the', 'terminus', 'of', 'Piccadilly', '?']	['Where', 'does', 'Piccadilly', 'start', '?']	0.2368	0.6634	0.0	24.0
165	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri ?institute WHERE { wd:Q76 wdt:P26/wdt:P69/wdt:P361* ?uri . ?uri wdt:P31*/wdt:P279* wd:Q3918 . } 
 Where:
 wd:Q76 has human-readable name ""Barack Obama.""
 wdt:P26 has human-readable name ""spouse.""
 wdt:P69 has human-readable name ""educated at.""
 wdt:P361 has human-readable name ""part of.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q3918 has human-readable name ""university.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which universities were Barack Obama educated at or associated with?	What is the name of the university where Obama's wife studied?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri ?institute WHERE { wd:Q76 wdt:P26/wdt:P69/wdt:P361* ?uri . ?uri wdt:P31*/wdt:P279* wd:Q3918 . }	['Which', 'universities', 'were', 'Barack', 'Obama', 'educated', 'at', 'or', 'associated', 'with', '?']	"['What', 'is', 'the', 'name', 'of', 'the', 'university', 'where', 'Obama', ""'s"", 'wife', 'studied', '?']"	0.1924	0.5981	0.0	53.0
108	"Having a SPARQL query: SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q733>  <http://www.wikidata.org/prop/direct/P571>  ?o1 .  } 
 Where:
 http://www.wikidata.org/entity/Q733 has human-readable name ""Paraguay.""
 http://www.wikidata.org/prop/direct/P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the inception date of Paraguay?	When did Paraguay proclaim its independence?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q733>  <http://www.wikidata.org/prop/direct/P571>  ?o1 .  }	['What', 'is', 'the', 'inception', 'date', 'of', 'Paraguay', '?']	['When', 'did', 'Paraguay', 'proclaim', 'its', 'independence', '?']	0.2357	0.7018	0.0	35.0
15	"Having a SPARQL query: SELECT DISTINCT ?height WHERE { ?uri <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P54>/<http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q155223> .  ?uri <http://www.wikidata.org/prop/P54> ?teamMembership . FILTER NOT EXISTS { ?teamMembership <http://www.wikidata.org/prop/qualifier/P582> ?endDate } ?uri  <http://www.wikidata.org/prop/direct/P2048> ?height } ORDER BY ?height LIMIT 1 
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q3665646 has human-readable name ""basketball player.""
 http://www.wikidata.org/prop/direct/P54 has human-readable name ""member of sports team.""
 http://www.wikidata.org/prop/direct/P118 has human-readable name ""league.""
 http://www.wikidata.org/entity/Q155223 has human-readable name ""National Basketball Association.""
 http://www.wikidata.org/prop/P54 has human-readable name ""member of sports team.""
 http://www.wikidata.org/prop/qualifier/P582 has human-readable name ""end time.""
 http://www.wikidata.org/prop/direct/P2048 has human-readable name ""height.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the height of the shortest currently active basketball player in the National Basketball Association?	How short is the shortest active NBA player?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?height WHERE { ?uri <http://www.wikidata.org/prop/direct/P106>  <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P54>/<http://www.wikidata.org/prop/direct/P118> <http://www.wikidata.org/entity/Q155223> .  ?uri <http://www.wikidata.org/prop/P54> ?teamMembership . FILTER NOT EXISTS { ?teamMembership <http://www.wikidata.org/prop/qualifier/P582> ?endDate } ?uri  <http://www.wikidata.org/prop/direct/P2048> ?height } ORDER BY ?height LIMIT 1	['What', 'is', 'the', 'height', 'of', 'the', 'shortest', 'currently', 'active', 'basketball', 'player', 'in', 'the', 'National', 'Basketball', 'Association', '?']	['How', 'short', 'is', 'the', 'shortest', 'active', 'NBA', 'player', '?']	0.2227	1.1188	0.3636	75.0
45	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri . } 
 Where:
 wd:Q91 has human-readable name ""Abraham Lincoln.""
 wdt:P20 has human-readable name ""place of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the place of death of Abraham Lincoln?	Where did Abraham Lincoln die?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri . }	['What', 'is', 'the', 'place', 'of', 'death', 'of', 'Abraham', 'Lincoln', '?']	['Where', 'did', 'Abraham', 'Lincoln', 'die', '?']	0.1983	0.7755	0.1538	27.0
82	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q536133 wdt:P571 ?date . }  
 Where:
 wd:Q536133 has human-readable name ""Jack Wolfskin.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	When did Jack Wolfskin come into existence?	When was Jack Wolfskin founded?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q536133 wdt:P571 ?date . } 	['When', 'did', 'Jack', 'Wolfskin', 'come', 'into', 'existence', '?']	['When', 'was', 'Jack', 'Wolfskin', 'founded', '?']	0.234	1.2925	0.5	19.0
9	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P159 ?uri }  
 Where:
 wd:Q51747 has human-readable name ""Air China.""
 wdt:P159 has human-readable name ""headquarters location.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the headquarters location of Air China?	In which city is the headquarter of Air China?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q51747 wdt:P159 ?uri } 	['What', 'is', 'the', 'headquarters', 'location', 'of', 'Air', 'China', '?']	['In', 'which', 'city', 'is', 'the', 'headquarter', 'of', 'Air', 'China', '?']	0.3176	2.1134	0.5882	21.0
201	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q948831 wdt:P571 ?date . }  
 Where:
 wd:Q948831 has human-readable name ""Plzeňský Prazdroj.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What is the inception date of the entity with the human-readable name ""Plzeňský Prazdroj""?"	What is the founding year of the brewery that produces Pilsner Urquell?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q948831 wdt:P571 ?date . } 	"['What', 'is', 'the', 'inception', 'date', 'of', 'the', 'entity', 'with', 'the', 'human-readable', 'name', '``', 'Plzeňský', 'Prazdroj', ""''"", '?']"	['What', 'is', 'the', 'founding', 'year', 'of', 'the', 'brewery', 'that', 'produces', 'Pilsner', 'Urquell', '?']	0.1744	1.1884	0.3478	55.0
171	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?uri} 
 Where:
 http://www.wikidata.org/entity/Q19024 has human-readable name ""Boston Tea Party.""
 http://www.wikidata.org/prop/direct/P585 has human-readable name ""point in time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the distinct point in time associated with the Boston Tea Party?	When did the Boston Tea Party take place?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?uri}	['What', 'is', 'the', 'distinct', 'point', 'in', 'time', 'associated', 'with', 'the', 'Boston', 'Tea', 'Party', '?']	['When', 'did', 'the', 'Boston', 'Tea', 'Party', 'take', 'place', '?']	0.188	1.1321	0.3	50.0
182	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P141 wd:Q219127 } 
 Where:
 wdt:P141 has human-readable name ""IUCN conservation status.""
 wd:Q219127 has human-readable name ""Critically Endangered.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which URIs have an IUCN conservation status of ""Critically Endangered""?"	Which animals are critically endangered?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P141 wd:Q219127 }	"['Which', 'URIs', 'have', 'an', 'IUCN', 'conservation', 'status', 'of', '``', 'Critically', 'Endangered', ""''"", '?']"	['Which', 'animals', 'are', 'critically', 'endangered', '?']	0.2273	0.3977	0.1333	39.0
13	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82955> . ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse . { ?spouse <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q183> . } UNION { ?spouse <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> } }  
 Where:
 http://www.wikidata.org/prop/direct/P106 has human-readable name ""occupation.""
 http://www.wikidata.org/entity/Q82955 has human-readable name ""politician.""
 http://www.wikidata.org/prop/direct/P26 has human-readable name ""spouse.""
 http://www.wikidata.org/prop/direct/P27 has human-readable name ""country of citizenship.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 http://www.wikidata.org/prop/direct/P19 has human-readable name ""place of birth.""
 http://www.wikidata.org/prop/direct/P17 has human-readable name ""country.""
 http://www.wikidata.org/entity/Q183 has human-readable name ""Germany.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individuals who are politicians and have spouses that are either citizens of Germany or were born in Germany are included in the dataset?	Which politicians were married to a German?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q82955> . ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse . { ?spouse <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q183> . } UNION { ?spouse <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> } } 	['Which', 'individuals', 'who', 'are', 'politicians', 'and', 'have', 'spouses', 'that', 'are', 'either', 'citizens', 'of', 'Germany', 'or', 'were', 'born', 'in', 'Germany', 'are', 'included', 'in', 'the', 'dataset', '?']	['Which', 'politicians', 'were', 'married', 'to', 'a', 'German', '?']	0.2495	0.48	0.2222	105.0
114	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?c WHERE { wd:Q2 wdt:P2386 ?c. } 
 Where:
 wd:Q2 has human-readable name ""Earth.""
 wdt:P2386 has human-readable name ""diameter.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the diameter of Earth?	How big is the earth's diameter?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?c WHERE { wd:Q2 wdt:P2386 ?c. }	['What', 'is', 'the', 'diameter', 'of', 'Earth', '?']	"['How', 'big', 'is', 'the', 'earth', ""'s"", 'diameter', '?']"	0.2144	1.5901	0.3333	22.0
92	"Having a SPARQL query: PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?obj . ?obj rdfs:label ?label FILTER( REGEX( ?label, ""Michelle"" ) ) } 
 Where:
 wd:Q76 has human-readable name ""Barack Obama.""
 wdt:P26 has human-readable name ""spouse.""
 rdfs:label has human-readable name ""label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Is Michelle Obama the spouse of Barack Obama?	Is the wife of President Obama called Michelle?	en	gpt-3.5-turbo	ZERO_SHOT	"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> ASK WHERE { wd:Q76 wdt:P26 ?obj . ?obj rdfs:label ?label FILTER( REGEX( ?label, ""Michelle"" ) ) }"	['Is', 'Michelle', 'Obama', 'the', 'spouse', 'of', 'Barack', 'Obama', '?']	['Is', 'the', 'wife', 'of', 'President', 'Obama', 'called', 'Michelle', '?']	0.3082	2.1133	0.375	38.0
194	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1813 ?name . FILTER( REGEX( ?name, ""^MN$"")) }  
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P1813 has human-readable name ""short name.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the URIs of entities that are instances of a U.S. state and have a short name that starts with ""MN""?"	Which U.S. state has the abbreviation MN?	en	gpt-3.5-turbo	ZERO_SHOT	"PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P1813 ?name . FILTER( REGEX( ?name, ""^MN$"")) } "	"['What', 'are', 'the', 'URIs', 'of', 'entities', 'that', 'are', 'instances', 'of', 'a', 'U.S.', 'state', 'and', 'have', 'a', 'short', 'name', 'that', 'starts', 'with', '``', 'MN', ""''"", '?']"	['Which', 'U.S.', 'state', 'has', 'the', 'abbreviation', 'MN', '?']	0.1506	0.6	0.2963	80.0
175	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q9458 wdt:P570 ?date . } 
 Where:
 wd:Q9458 has human-readable name ""Muhammad.""
 wdt:P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the date of death of Muhammad?	When did Muhammad die?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?date WHERE { wd:Q9458 wdt:P570 ?date . }	['What', 'is', 'the', 'date', 'of', 'death', 'of', 'Muhammad', '?']	['When', 'did', 'Muhammad', 'die', '?']	0.2342	0.516	0.0	27.0
60	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1439 wdt:P1313 wd:Q5589725 . wd:Q5589725 wdt:P1308 ?uri . } 
 Where:
 wd:Q1439 has human-readable name ""Texas.""
 wdt:P1313 has human-readable name ""office held by head of government.""
 wd:Q5589725 has human-readable name ""Governor of Texas.""
 wd:Q5589725 has human-readable name ""Governor of Texas.""
 wdt:P1308 has human-readable name ""officeholder.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the URI of the officeholder for the Governor of Texas?	Who is the governor of Texas?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1439 wdt:P1313 wd:Q5589725 . wd:Q5589725 wdt:P1308 ?uri . }	['What', 'is', 'the', 'URI', 'of', 'the', 'officeholder', 'for', 'the', 'Governor', 'of', 'Texas', '?']	['Who', 'is', 'the', 'governor', 'of', 'Texas', '?']	0.205	1.0798	0.5333	35.0
110	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT * WHERE { ?uri wdt:P57 wd:Q8006 . }  
 Where:
 wdt:P57 has human-readable name ""director.""
 wd:Q8006 has human-readable name ""Akira Kurosawa.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which entities have the property of being the director of ""Akira Kurosawa""?"	Which movies did Kurosawa direct?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT * WHERE { ?uri wdt:P57 wd:Q8006 . } 	"['Which', 'entities', 'have', 'the', 'property', 'of', 'being', 'the', 'director', 'of', '``', 'Akira', 'Kurosawa', ""''"", '?']"	['Which', 'movies', 'did', 'Kurosawa', 'direct', '?']	0.2478	0.517	0.1333	54.0
206	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P276 wd:Q975 . ?uri wdt:P31 wd:Q178561 . ?uri wdt:P585 ?time . FILTER( YEAR(?time) = 1836 ) }  
 Where:
 wdt:P276 has human-readable name ""location.""
 wd:Q975 has human-readable name ""San Antonio.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q178561 has human-readable name ""battle.""
 wdt:P585 has human-readable name ""point in time.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of battles that took place in San Antonio in the year 1836?	What was the name of the famous battle in 1836 in San Antonio?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P276 wd:Q975 . ?uri wdt:P31 wd:Q178561 . ?uri wdt:P585 ?time . FILTER( YEAR(?time) = 1836 ) } 	['What', 'are', 'the', 'URIs', 'of', 'battles', 'that', 'took', 'place', 'in', 'San', 'Antonio', 'in', 'the', 'year', '1836', '?']	['What', 'was', 'the', 'name', 'of', 'the', 'famous', 'battle', 'in', '1836', 'in', 'San', 'Antonio', '?']	0.1791	2.0668	0.4	46.0
97	"Having a SPARQL query: PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q162371 p:P161/ps:P161/wdt:P856 ?uri . } 
 Where:
 wd:Q162371 has human-readable name ""Charmed.""
 p:P161 has human-readable name ""cast member.""
 ps:P161 has human-readable name ""cast member.""
 wdt:P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which official website is associated with a cast member of the show ""Charmed""?"	Give me the official websites of actors of the television show Charmed.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q162371 p:P161/ps:P161/wdt:P856 ?uri . }	"['Which', 'official', 'website', 'is', 'associated', 'with', 'a', 'cast', 'member', 'of', 'the', 'show', '``', 'Charmed', ""''"", '?']"	['Give', 'me', 'the', 'official', 'websites', 'of', 'actors', 'of', 'the', 'television', 'show', 'Charmed', '.']	0.1838	1.0981	0.3478	43.0
169	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P31/wdt:P279* wd:Q7075 . ?uri wdt:P571 ?date . FILTER( YEAR(?date) < 1400 ) }  
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q7075 has human-readable name ""library.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which entities are instances or subclasses of a library that were established before the year 1400?	Give me all libraries established before 1400.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT * WHERE { ?uri wdt:P31/wdt:P279* wd:Q7075 . ?uri wdt:P571 ?date . FILTER( YEAR(?date) < 1400 ) } 	['Which', 'entities', 'are', 'instances', 'or', 'subclasses', 'of', 'a', 'library', 'that', 'were', 'established', 'before', 'the', 'year', '1400', '?']	['Give', 'me', 'all', 'libraries', 'established', 'before', '1400', '.']	0.1575	0.5294	0.1739	60.0
38	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { { wd:Q76936 wdt:P527+ ?uri . } UNION { wd:Q76936 wdt:P527* ?islandgroup . ?uri wdt:P361+ ?islandgroup . } ?uri wdt:P17 wd:Q55 . ?uri wdt:P31 wd:Q23442 . }  
 Where:
 wd:Q76936 has human-readable name ""Frisian Islands.""
 wdt:P527 has human-readable name ""has part(s).""
 wd:Q76936 has human-readable name ""Frisian Islands.""
 wdt:P527 has human-readable name ""has part(s).""
 wdt:P361 has human-readable name ""part of.""
 wdt:P17 has human-readable name ""country.""
 wd:Q55 has human-readable name ""Netherlands.""
 wdt:P31 has human-readable name ""instance of.""
 wd:Q23442 has human-readable name ""island.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which islands that are part of the Frisian Islands, are located in the Netherlands and are classified as islands in Wikidata?	Give me all Frisian islands that belong to the Netherlands.	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { { wd:Q76936 wdt:P527+ ?uri . } UNION { wd:Q76936 wdt:P527* ?islandgroup . ?uri wdt:P361+ ?islandgroup . } ?uri wdt:P17 wd:Q55 . ?uri wdt:P31 wd:Q23442 . } 	['Which', 'islands', 'that', 'are', 'part', 'of', 'the', 'Frisian', 'Islands', ',', 'are', 'located', 'in', 'the', 'Netherlands', 'and', 'are', 'classified', 'as', 'islands', 'in', 'Wikidata', '?']	['Give', 'me', 'all', 'Frisian', 'islands', 'that', 'belong', 'to', 'the', 'Netherlands', '.']	0.186	0.7521	0.3077	87.0
192	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q471379> <http://www.wikidata.org/prop/direct/P527>/<http://www.wikidata.org/prop/direct/P276> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>} 
 Where:
 http://www.wikidata.org/entity/Q471379 has human-readable name ""The Scream.""
 http://www.wikidata.org/prop/direct/P527 has human-readable name ""has part(s).""
 http://www.wikidata.org/prop/direct/P276 has human-readable name ""location.""
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q207694 has human-readable name ""art museum.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the locations of the parts of ""The Scream"" that are housed in an art museum?"	Which museum exhibits The Scream by Munch?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q471379> <http://www.wikidata.org/prop/direct/P527>/<http://www.wikidata.org/prop/direct/P276> ?uri . ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>}	"['What', 'are', 'the', 'locations', 'of', 'the', 'parts', 'of', '``', 'The', 'Scream', ""''"", 'that', 'are', 'housed', 'in', 'an', 'art', 'museum', '?']"	['Which', 'museum', 'exhibits', 'The', 'Scream', 'by', 'Munch', '?']	0.1574	0.6	0.0	61.0
78	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q471891 wdt:P571 ?date . }  
 Where:
 wd:Q471891 has human-readable name ""De Beers.""
 wdt:P571 has human-readable name ""inception.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"When did the company ""De Beers"" begin or come into existence?"	When was the De Beers company founded?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?date WHERE { wd:Q471891 wdt:P571 ?date . } 	"['When', 'did', 'the', 'company', '``', 'De', 'Beers', ""''"", 'begin', 'or', 'come', 'into', 'existence', '?']"	['When', 'was', 'the', 'De', 'Beers', 'company', 'founded', '?']	0.2039	1.2857	0.3333	35.0
19	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/P39> ?position . ?position  <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q11696> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri . } 
 Where:
 http://www.wikidata.org/entity/Q9696 has human-readable name ""John F. Kennedy.""
 http://www.wikidata.org/prop/P39 has human-readable name ""position held.""
 http://www.wikidata.org/prop/statement/P39 has human-readable name ""position held.""
 http://www.wikidata.org/entity/Q11696 has human-readable name ""President of the United States.""
 http://www.wikidata.org/prop/qualifier/P1366 has human-readable name ""replaced by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What individuals replaced John F. Kennedy as President of the United States?	Who became president after JFK died?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/P39> ?position . ?position  <http://www.wikidata.org/prop/statement/P39> <http://www.wikidata.org/entity/Q11696> . ?position <http://www.wikidata.org/prop/qualifier/P1366> ?uri . }	['What', 'individuals', 'replaced', 'John', 'F.', 'Kennedy', 'as', 'President', 'of', 'the', 'United', 'States', '?']	['Who', 'became', 'president', 'after', 'JFK', 'died', '?']	0.1911	0.216	0.0	54.0
190	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q19943 wdt:P26 ?spouse . ?uri wdt:P40 ?spouse . }  
 Where:
 wd:Q19943 has human-readable name ""Juan Carlos I of Spain.""
 wdt:P26 has human-readable name ""spouse.""
 wdt:P40 has human-readable name ""child.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which children does the spouse of Juan Carlos I of Spain have?	Who are the parents of the wife of Juan Carlos I?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q19943 wdt:P26 ?spouse . ?uri wdt:P40 ?spouse . } 	['Which', 'children', 'does', 'the', 'spouse', 'of', 'Juan', 'Carlos', 'I', 'of', 'Spain', 'have', '?']	['Who', 'are', 'the', 'parents', 'of', 'the', 'wife', 'of', 'Juan', 'Carlos', 'I', '?']	0.2224	1.7829	0.4	34.0
174	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q45875 ?p ?uri . ?uri wdt:P106 wd:Q6625963 . } 
 Where:
 wd:Q45875 has human-readable name ""A Song of Ice and Fire.""
 wdt:P106 has human-readable name ""occupation.""
 wd:Q6625963 has human-readable name ""novelist.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which novelists are associated with the book series ""A Song of Ice and Fire""?"	Who is the novelist of the work a song of ice and fire?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q45875 ?p ?uri . ?uri wdt:P106 wd:Q6625963 . }	"['Which', 'novelists', 'are', 'associated', 'with', 'the', 'book', 'series', '``', 'A', 'Song', 'of', 'Ice', 'and', 'Fire', ""''"", '?']"	['Who', 'is', 'the', 'novelist', 'of', 'the', 'work', 'a', 'song', 'of', 'ice', 'and', 'fire', '?']	0.2624	0.7782	0.24	39.0
189	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?album wdt:P31 wd:Q482994 ; wdt:P175 wd:Q1299 ; wdt:P577 ?date ; wdt:P483 ?uri . } ORDER BY ?date LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q482994 has human-readable name ""album.""
 wdt:P175 has human-readable name ""performer.""
 wd:Q1299 has human-readable name ""The Beatles.""
 wdt:P577 has human-readable name ""publication date.""
 wdt:P483 has human-readable name ""recorded at studio or venue.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the earliest recorded album by The Beatles that was published and recorded at a studio or venue?	In which studio did the Beatles record their first album?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?album wdt:P31 wd:Q482994 ; wdt:P175 wd:Q1299 ; wdt:P577 ?date ; wdt:P483 ?uri . } ORDER BY ?date LIMIT 1	['What', 'is', 'the', 'earliest', 'recorded', 'album', 'by', 'The', 'Beatles', 'that', 'was', 'published', 'and', 'recorded', 'at', 'a', 'studio', 'or', 'venue', '?']	['In', 'which', 'studio', 'did', 'the', 'Beatles', 'record', 'their', 'first', 'album', '?']	0.2719	0.8649	0.1429	72.0
152	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P159*/wdt:P31*/wdt:P131 wd:Q1198 . }  
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q131734 has human-readable name ""brewery.""
 wdt:P159 has human-readable name ""headquarters location.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1198 has human-readable name ""North Rhine-Westphalia.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which entities are breweries located in North Rhine-Westphalia and have a headquarters location in an administrative territorial entity related to it?	Which beer brewing companies are located in North-Rhine Westphalia?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q131734 . ?uri wdt:P159*/wdt:P31*/wdt:P131 wd:Q1198 . } 	['Which', 'entities', 'are', 'breweries', 'located', 'in', 'North', 'Rhine-Westphalia', 'and', 'have', 'a', 'headquarters', 'location', 'in', 'an', 'administrative', 'territorial', 'entity', 'related', 'to', 'it', '?']	['Which', 'beer', 'brewing', 'companies', 'are', 'located', 'in', 'North-Rhine', 'Westphalia', '?']	0.1595	0.755	0.2759	105.0
94	"Having a SPARQL query: SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . } 
 Where:
 http://www.wikidata.org/entity/Q9685 has human-readable name ""Diana, Princess of Wales.""
 http://www.wikidata.org/prop/direct/P570 has human-readable name ""date of death.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the distinct date of death for Diana, Princess of Wales?	When did princess Diana die?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q9685> <http://www.wikidata.org/prop/direct/P570> ?date  . }	['What', 'is', 'the', 'distinct', 'date', 'of', 'death', 'for', 'Diana', ',', 'Princess', 'of', 'Wales', '?']	['When', 'did', 'princess', 'Diana', 'die', '?']	0.2256	0.3693	0.0	46.0
8	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q248 wdt:P112 ?uri . }   
 Where:
 wd:Q248 has human-readable name ""Intel.""
 wdt:P112 has human-readable name ""founded by.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which individual or organization was founded by Intel?	Who founded Intel?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q248 wdt:P112 ?uri . }  	['Which', 'individual', 'or', 'organization', 'was', 'founded', 'by', 'Intel', '?']	['Who', 'founded', 'Intel', '?']	0.2073	0.6667	0.3636	36.0
95	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?team wdt:P118 wd:Q9448 . ?uri wdt:P54 ?team ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1 
 Where:
 wdt:P118 has human-readable name ""league.""
 wd:Q9448 has human-readable name ""Premier League.""
 wdt:P54 has human-readable name ""member of sports team.""
 wdt:P569 has human-readable name ""date of birth.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Find the URI of the player who was a member of a team in the Premier League with the latest date of birth.	Who is the youngest player in the Premier League?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?team wdt:P118 wd:Q9448 . ?uri wdt:P54 ?team ; wdt:P569 ?dateOfBirth . } ORDER BY DESC(?dateOfBirth) LIMIT 1	['Find', 'the', 'URI', 'of', 'the', 'player', 'who', 'was', 'a', 'member', 'of', 'a', 'team', 'in', 'the', 'Premier', 'League', 'with', 'the', 'latest', 'date', 'of', 'birth', '.']	['Who', 'is', 'the', 'youngest', 'player', 'in', 'the', 'Premier', 'League', '?']	0.109	0.7906	0.32	71.0
119	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . }  
 Where:
 http://www.wikidata.org/entity/Q154216 has human-readable name ""Cat Stevens.""
 http://www.wikidata.org/prop/direct/P1303 has human-readable name ""instrument.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"What are the distinct URIs of musicians who have the instrument property linked to ""Cat Stevens""?"	Which instruments does Cat Stevens play?	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q154216> <http://www.wikidata.org/prop/direct/P1303> ?uri . } 	"['What', 'are', 'the', 'distinct', 'URIs', 'of', 'musicians', 'who', 'have', 'the', 'instrument', 'property', 'linked', 'to', '``', 'Cat', 'Stevens', ""''"", '?']"	['Which', 'instruments', 'does', 'Cat', 'Stevens', 'play', '?']	0.1499	0.4433	0.0	70.0
115	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?c) WHERE { ?uri wdt:P131 wd:Q1456 . ?uri wdt:P31/wdt:P279* wd:Q23397 . } 
 Where:
 wdt:P131 has human-readable name ""located in the administrative territorial entity.""
 wd:Q1456 has human-readable name ""South Carolina.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q23397 has human-readable name ""lake.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many lakes are located in South Carolina?	How many rivers and lakes are in South Carolina?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(?uri) AS ?c) WHERE { ?uri wdt:P131 wd:Q1456 . ?uri wdt:P31/wdt:P279* wd:Q23397 . }	['How', 'many', 'lakes', 'are', 'located', 'in', 'South', 'Carolina', '?']	['How', 'many', 'rivers', 'and', 'lakes', 'are', 'in', 'South', 'Carolina', '?']	0.3609	2.8178	0.8235	13.0
116	"Having a SPARQL query: PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel ""Rodzilla""@en . } 
 Where:
 skos:altLabel has human-readable name ""alternative label.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which resource has the alternative label ""Rodzilla"" in English?"	Who was called Rodzilla?	en	gpt-3.5-turbo	ZERO_SHOT	"PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT * WHERE { ?uri skos:altLabel ""Rodzilla""@en . }"	"['Which', 'resource', 'has', 'the', 'alternative', 'label', '``', 'Rodzilla', ""''"", 'in', 'English', '?']"	['Who', 'was', 'called', 'Rodzilla', '?']	0.229	0.387	0.0	42.0
138	"Having a SPARQL query: SELECT DISTINCT ?uri WHERE { ?country <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?country  <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q15> . ?country <http://www.wikidata.org/prop/direct/P36> ?uri . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/entity/Q6256 has human-readable name ""country.""
 http://www.wikidata.org/prop/direct/P30 has human-readable name ""continent.""
 http://www.wikidata.org/entity/Q15 has human-readable name ""Africa.""
 http://www.wikidata.org/prop/direct/P36 has human-readable name ""capital.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What are the URIs of the capitals of countries that are instances of countries and part of the continent of Africa?	Give me the capitals of all countries in Africa.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?uri WHERE { ?country <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . ?country  <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q15> . ?country <http://www.wikidata.org/prop/direct/P36> ?uri . }	['What', 'are', 'the', 'URIs', 'of', 'the', 'capitals', 'of', 'countries', 'that', 'are', 'instances', 'of', 'countries', 'and', 'part', 'of', 'the', 'continent', 'of', 'Africa', '?']	['Give', 'me', 'the', 'capitals', 'of', 'all', 'countries', 'in', 'Africa', '.']	0.1237	0.755	0.3636	74.0
177	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { wd:Q125050 wdt:P31 ?type . ?uri wdt:P31 ?type . ?uri wdt:P31/wdt:P279* wd:Q12280 . FILTER( ?type != wd:Q12280 ) } 
 Where:
 wd:Q125050 has human-readable name ""Manhattan Bridge.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q12280 has human-readable name ""bridge.""
 wd:Q12280 has human-readable name ""bridge.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which entities are instances of a subclass of ""bridge"" and have the same instance of type as the ""Manhattan Bridge"" excluding instances with the type ""bridge""?"	Which bridges are of the same type as the Manhattan Bridge?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri { wd:Q125050 wdt:P31 ?type . ?uri wdt:P31 ?type . ?uri wdt:P31/wdt:P279* wd:Q12280 . FILTER( ?type != wd:Q12280 ) }	"['Which', 'entities', 'are', 'instances', 'of', 'a', 'subclass', 'of', '``', 'bridge', ""''"", 'and', 'have', 'the', 'same', 'instance', 'of', 'type', 'as', 'the', '``', 'Manhattan', 'Bridge', ""''"", 'excluding', 'instances', 'with', 'the', 'type', '``', 'bridge', ""''"", '?']"	['Which', 'bridges', 'are', 'of', 'the', 'same', 'type', 'as', 'the', 'Manhattan', 'Bridge', '?']	0.132	1.1656	0.4667	104.0
101	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ( COUNT( DISTINCT ?uri ) AS ?c ) WHERE { ?uri wdt:P112 wd:Q36215 . ?uri wdt:P31/wdt:P279* wd:Q783794 . }  
 Where:
 wdt:P112 has human-readable name ""founded by.""
 wd:Q36215 has human-readable name ""Mark Zuckerberg.""
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q783794 has human-readable name ""company.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	How many companies were founded by Mark Zuckerberg?	How many companies were founded by the founder of Facebook?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ( COUNT( DISTINCT ?uri ) AS ?c ) WHERE { ?uri wdt:P112 wd:Q36215 . ?uri wdt:P31/wdt:P279* wd:Q783794 . } 	['How', 'many', 'companies', 'were', 'founded', 'by', 'Mark', 'Zuckerberg', '?']	['How', 'many', 'companies', 'were', 'founded', 'by', 'the', 'founder', 'of', 'Facebook', '?']	0.4888	2.2705	0.6667	19.0
87	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q571 . ?uri wdt:P1104 ?number . } ORDER BY DESC(?number) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q571 has human-readable name ""book.""
 wdt:P1104 has human-readable name ""number of pages.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which book has the highest number of pages?	Which book has the most pages?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q571 . ?uri wdt:P1104 ?number . } ORDER BY DESC(?number) LIMIT 1	['Which', 'book', 'has', 'the', 'highest', 'number', 'of', 'pages', '?']	['Which', 'book', 'has', 'the', 'most', 'pages', '?']	0.3549	1.8716	0.7143	15.0
148	"Having a SPARQL query: PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P2046 ?area . } ORDER BY DESC(?area) LIMIT 1 
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wd:Q35657 has human-readable name ""U.S. state.""
 wdt:P2046 has human-readable name ""area.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	What is the URI of the U.S. state with the largest area?	What is the largest state in the United States?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 . ?uri wdt:P2046 ?area . } ORDER BY DESC(?area) LIMIT 1	['What', 'is', 'the', 'URI', 'of', 'the', 'U.S.', 'state', 'with', 'the', 'largest', 'area', '?']	['What', 'is', 'the', 'largest', 'state', 'in', 'the', 'United', 'States', '?']	0.223	1.7182	0.4211	27.0
43	"Having a SPARQL query: SELECT DISTINCT ?string WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q4830453> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?number . FILTER(?number > 500000) . ?uri <http://www.wikidata.org/prop/direct/P856> ?string . } 
 Where:
 http://www.wikidata.org/prop/direct/P31 has human-readable name ""instance of.""
 http://www.wikidata.org/prop/direct/P279 has human-readable name ""subclass of.""
 http://www.wikidata.org/entity/Q4830453 has human-readable name ""business.""
 http://www.wikidata.org/prop/direct/P1128 has human-readable name ""employees.""
 http://www.wikidata.org/prop/direct/P856 has human-readable name ""official website.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	Which official websites of businesses with more than 500,000 employees are listed in Wikidata?	Give me the websites of companies with more than 500000 employees.	en	gpt-3.5-turbo	ZERO_SHOT	SELECT DISTINCT ?string WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q4830453> . ?uri <http://www.wikidata.org/prop/direct/P1128> ?number . FILTER(?number > 500000) . ?uri <http://www.wikidata.org/prop/direct/P856> ?string . }	['Which', 'official', 'websites', 'of', 'businesses', 'with', 'more', 'than', '500,000', 'employees', 'are', 'listed', 'in', 'Wikidata', '?']	['Give', 'me', 'the', 'websites', 'of', 'companies', 'with', 'more', 'than', '500000', 'employees', '.']	0.1921	1.434	0.48	45.0
179	"Having a SPARQL query: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11446 . ?uri wdt:P1344/wdt:P710 wd:Q7322 . }  
 Where:
 wdt:P31 has human-readable name ""instance of.""
 wdt:P279 has human-readable name ""subclass of.""
 wd:Q11446 has human-readable name ""ship.""
 wdt:P1344 has human-readable name ""participant in.""
 wdt:P710 has human-readable name ""participant.""
 wd:Q7322 has human-readable name ""Christopher Columbus.""
 Transform the SPARQL query to a natural language question. Output just the transformed question"	"Which entities are instances of a subclass of ""ship"" and are participants in ""Christopher Columbus""?"	What were the names of the three ships by Columbus?	en	gpt-3.5-turbo	ZERO_SHOT	PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11446 . ?uri wdt:P1344/wdt:P710 wd:Q7322 . } 	"['Which', 'entities', 'are', 'instances', 'of', 'a', 'subclass', 'of', '``', 'ship', ""''"", 'and', 'are', 'participants', 'in', '``', 'Christopher', 'Columbus', ""''"", '?']"	['What', 'were', 'the', 'names', 'of', 'the', 'three', 'ships', 'by', 'Columbus', '?']	0.2393	0.5189	0.0909	66.0
